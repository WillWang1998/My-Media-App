{"version":3,"sources":["reportWebVitals.js","util/Layout.js","util/Functions.js","component/LogInForm.js","util/EventBus.js","component/RegisterForm.js","component/Landing.js","component/Menu.js","component/AvatarUploader.js","component/PasswordSetup.js","component/GoogleLinking.js","component/Profile.js","component/Following.js","component/Followings.js","component/MinProfile.js","component/ImageWall.js","component/SubmitOrEditArticle.js","component/Comment.js","component/Comments.js","component/Images.js","component/Article.js","component/Articles.js","component/Home.js","component/RegisterWithGoogle.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","isLoggedInAsCookie","console","log","document","cookie","Cookies","get","disabledDate","current","nowTime","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDate","getDate","selectYear","year","selectMonth","month","selectDate","date","beforeUpload","file","a","isImage","type","split","message","error","showBackendMessage","backendMessage","backendMessageList","success","info","warning","loading","remove","stringArrayEqual","arrayA","arrayB","st","Set","s","add","has","delete","size","LogInForm","config","rtl","history","useHistory","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","username","password","res","ok","json","statusText","push","pathname","catch","err","name","autoComplete","layout","Item","label","rules","required","Password","htmlType","onClick","window","location","href","GoogleOutlined","EventBus","this","bus","createElement","event","callback","addEventListener","removeEventListener","detail","dispatchEvent","CustomEvent","RegisterForm","Form","useForm","form","useState","setUsername","displayedName","setDisplayedName","email","setEmail","load","useEffect","setFieldsValue","phone","dob","toDate","zipcode","pattern","placeholder","extra","format","style","width","visibilityToggle","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","Landing","key","setState","logInOrRegisterComponents","login","register","position","left","top","transform","bordered","tabList","tab","activeTabKey","onTabChange","newKey","MyMediaMenu","useLocation","curPath","slice","onSelect","Sticky","innerZ","direction","theme","mode","selectedKeys","LogoutOutlined","UserOutlined","HomeOutlined","AvatarUploader","setLoading","imageUrl","setImageUrl","uploaded","setUploaded","avatar","uploadButton","LoadingOutlined","PlusOutlined","marginTop","update","justify","align","listType","className","showUploadList","action","withCredentials","onChange","status","response","url","src","alt","PasswordSetup","newPassword","oldPassword","curPassword","GoogleLinking","googleEmail","setGoogleEmail","google_email","Profile","moment","headline","displayed_name","gutter","md","lg","xl","padding","orientation","TextArea","rows","Following","props","setAvatar","setHeadline","actions","actionSymbol","Meta","title","description","Followings","followings","setFollowings","searchUserList","setSearchUserList","showSearchUserList","setShowSearchUserList","showSearchResult","keyWord","searchResult","MemoList","dataSource","userList","renderItem","item","symbol","pagination","pageSize","Search","allowClear","enterButton","onSearch","hidden","PlusCircleOutlined","filter","CloseCircleOutlined","MinProfile","editing","setEditing","CheckOutlined","EditOutlined","e","target","getBase64","reader","FileReader","readAsDataURL","onload","result","onerror","urlsToFiles","urls","map","fileName","uid","join","ImagesWall","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","imageUrlsList","fileList","setFileList","handlePreview","preview","originFileObj","substring","lastIndexOf","onPreview","fileListStatus","forEach","every","curImageUrlsList","length","visible","footer","onCancel","areEqualImagesWall","prevProps","nextProps","memo","SubmitOrEditArticle","setImageUrlsList","text","id","images","_id","timestamp","areEqualSubmitOrEditArticle","Comment","hideEditor","setHideEditor","author","setAuthor","authorDisplayedName","setAuthorDisplayedName","setText","timeStamp","setTimeStamp","onDelete","articleId","deleteAction","onSubmit","content","DeleteOutlined","datetime","toLocaleString","defaultValue","Comments","commentRef","useRef","commentIdList","setCommentIdList","reverse","addNewComment","articleID","comments","setValue","onDeleteComment","_props","header","itemLayout","ref","Images","setVisible","display","PreviewGroup","onVisibleChange","vis","Article","hideComments","setHideComments","setTitle","imageUrlList","setImageUrlList","MessageOutlined","border","Articles","selectedArticleIds","setSelectedArticleIds","ids","onDeleteArticle","ArticleList","Home","RegisterWithGoogle","ReactDOM","render","StrictMode","exact","path","to","getElementById"],"mappings":"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","file":"static/js/main.9aac40ee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","export const formItemLayout = {\n    labelCol: {\n        xs: {span: 24},\n        sm: {span: 8},\n    },\n    wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 16},\n    },\n};\n\nexport const tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};","import {message} from \"antd\";\nimport Cookies from 'js-cookie'\n\nexport const isLoggedInAsCookie = () => {\n    console.log(\"document.cookie\", document.cookie);\n    console.log(\"Cookies.get(\\\"isLoggedIn\\\")\", Cookies.get(\"isLoggedIn\"));\n    return !!Cookies.get(\"isLoggedIn\");\n}\n\nexport const isRegisteringWithGoogle = () => {\n    return !!Cookies.get(\"usernameForGoogle\");\n}\n\nexport const disabledDate = (current) => {\n    let nowTime = new Date(Date.now());\n    let nowYear = nowTime.getFullYear(),\n        nowMonth = nowTime.getMonth(),\n        nowDate = nowTime.getDate();\n    if (current) {\n        let selectYear = current.year(),\n            selectMonth = current.month(),\n            selectDate = current.date();\n        return (nowYear - selectYear < 18)\n            || (nowYear - selectYear === 18 && nowMonth < selectMonth)\n            || (nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate);\n    }\n    return false;\n}\n\nexport const beforeUpload = async (file) => {\n    const isImage = file.type.split(\"/\")[0] === 'image';\n    if (!isImage) {\n        await message.error('You can only upload image!', 1);\n    }\n    return isImage;\n}\n\nexport const showBackendMessage = async () => {\n    let backendMessage = Cookies.get(\"backendMessage\");\n    if (backendMessage) {\n        let backendMessageList = backendMessage.split(\"#\");\n        if (backendMessageList[0] === \"error\") {\n            message.error(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"success\") {\n            message.success(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"info\") {\n            message.info(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"warning\") {\n            message.warning(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"loading\") {\n            message.loading(backendMessageList[1], 1);\n        }\n        Cookies.remove(\"backendMessage\");\n    }\n}\n\nexport const stringArrayEqual = (arrayA, arrayB) => {\n\n    if (arrayA && arrayB) {\n        let st = new Set();\n        for (let s of arrayA) {\n            st.add(s);\n        }\n        for (let s of arrayB) {\n            if (!st.has(s)) {\n                return false;\n            } else {\n                st.delete(s);\n            }\n        }\n        return st.size === 0;\n    } else return !arrayA && !arrayB;\n}\n","import React from \"react\";\nimport {message, Button, Form, Input, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from '../util/Layout';\nimport {GoogleOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst LogInForm = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const history = useHistory();\n\n    const onFinish = async (values) => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/login\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: values.username,\n                password: values.password,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            history.push({\n                pathname: \"/home\"\n            });\n            message.config({\n                rtl: false,\n            });\n            message.success(\"Login Successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const googleLogin =  () => {\n        window.location.href = \"https://comp531-rw48-mymedia-backend.herokuapp.com/auth/google\";\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"logIn\"\n              autoComplete=\"off\"\n              layout=\"horizontal\"\n              onFinish={onFinish}\n        >\n\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                    <Button type=\"default\" htmlType=\"button\" onClick={googleLogin}>\n                        Log in with <GoogleOutlined />\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default LogInForm;","/*\nFor communications between the components.\nhttps://segmentfault.com/a/1190000023585646\n */\n\nclass EventBus {\n    constructor() {\n        this.bus = document.createElement('fakeElement');\n    }\n\n    addEventListener(event, callback) {\n        this.bus.addEventListener(event, callback);\n    }\n\n    removeEventListener(event, callback) {\n        this.bus.removeEventListener(event, callback);\n    }\n\n    dispatchEvent(event, detail = {}){\n        this.bus.dispatchEvent(new CustomEvent(event, { detail }));\n    }\n}\n\nexport default new EventBus();\n","import React, {useEffect, useState} from \"react\";\nimport {Button, DatePicker, Form, Input, message, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport {useHistory} from \"react-router-dom\";\nimport {disabledDate, showBackendMessage} from \"../util/Functions\";\nimport Cookies from \"js-cookie\";\nimport EventBus from \"../util/EventBus\";\n\nconst RegisterForm = () => {\n\n    message.config({\n        rtl: false,\n    });\n    const [form] = Form.useForm();\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [displayedName, setDisplayedName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n\n\n    const load = () => {\n        setUsername(Cookies.get(\"usernameForGoogle\"));\n        setDisplayedName(Cookies.get(\"displayedNameForGoogle\"));\n        setEmail(Cookies.get(\"emailForGoogle\"));\n    }\n\n    useEffect(() => {\n        form.setFieldsValue({\n            \"username\": username,\n            \"displayedName\": displayedName,\n            \"email\": email,\n        });\n    }, [username, displayedName, email]);\n\n    useEffect(load, []);\n\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setUsername(\"\");\n        setDisplayedName(\"\");\n        setEmail(\"\");\n    });\n    EventBus.addEventListener(\"reload_all\", load);\n\n    const onFinish = async (values) => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/register\",{\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: values.username,\n                email: values.email,\n                phone: values.phone,\n                dob: values.dob.toDate(),\n                zipcode: values.zipcode,\n                displayedName: values.displayedName,\n                password: values.password\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            message.success(\"Register successfully!\");\n            history.push({\n                pathname:\"/home\"\n            });\n        }).catch(err => message.error(err, 1));\n    };\n\n    return (\n        <Form {...formItemLayout}\n              name=\"register\"\n              layout=\"horizontal\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n              form={form}\n        >\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               pattern: /^[a-zA-Z][a-zA-Z0-9]*$/,\n                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"displayedName\"\n                       label=\"Displayed Name\"\n                       rules={[\n                           {\n                               pattern: /^[a-zA-Z][a-zA-Z0-9]*$/,\n                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                           },\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"email\"\n                       label=\"E-mail\"\n                       rules={[\n                           {\n                               type: 'email',\n                               message: 'Please input your valid E-mail like a@b.co!',\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your E-mail!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"a@b.co\"/>\n            </Form.Item>\n\n            <Form.Item name=\"phone\"\n                       label=\"Phone Number\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{10}$/,\n                               message: 'Please input your phone number like 1231231234!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone number!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"1231231234\"/>\n            </Form.Item>\n\n            <Form.Item name=\"dob\"\n                       label=\"Date of Birth\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your date of birth!',\n                           },\n                       ]}\n                       extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n            >\n                <DatePicker format={'MM/DD/YYYY'}\n                            style={{width: '100%'}}\n                            disabledDate={disabledDate}/>\n            </Form.Item>\n\n            <Form.Item name=\"zipcode\"\n                       label=\"Zipcode\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{5}$/,\n                               message: 'Please input your phone zipcode like 12345!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone zipcode!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"12345\"/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"passwordConfirmation\"\n                label=\"Confirmation\"\n                dependencies={['password']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                    <Button htmlType=\"reset\">\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default RegisterForm;\n","import React, {useEffect, useState} from \"react\";\nimport {Card, message} from \"antd\";\nimport '../App.css';\nimport LogInForm from \"./LogInForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst Landing = () => {\n\n    message.config({\n        rtl: false,\n    });\n\n    const [key, setState] = useState(\"login\");\n\n    useEffect(showBackendMessage, []);\n\n    const logInOrRegisterKeyTab = [\n        {\n            key: \"login\",\n            tab: 'Log In',\n        },\n        {\n            key: \"register\",\n            tab: \"Register\",\n        },\n    ];\n\n    const logInOrRegisterComponents = {\n        login: <LogInForm/>,\n        register: <RegisterForm/>,\n    };\n\n    const onTabChange = (key) => {\n        setState(key);\n    }\n\n    return (\n        <Card style={{\n            width: \"50%\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n        }}\n              bordered={true}\n              tabList={logInOrRegisterKeyTab}\n              activeTabKey={key}\n              onTabChange={newKey => {\n                  onTabChange(newKey);\n              }}\n        >\n            {logInOrRegisterComponents[key]}\n        </Card>\n    );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport {Menu, ConfigProvider, message} from 'antd';\nimport {\n    HomeOutlined,\n    UserOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport Cookies from \"js-cookie\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport Sticky from 'react-stickynode';\nimport EventBus from \"../util/EventBus\";\n\nconst MyMediaMenu = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const curPath = location.pathname.slice(1);\n\n    message.config({\n        rtl: false,\n    });\n\n    const onSelect = async (info) => {\n        if (curPath !== info.key) {\n            if (info.key === \"logout\") {\n                await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/logout\", {\n                    method: \"PUT\",\n                    credentials: \"include\",\n                });\n                Cookies.remove(\"isLoggedIn\");\n                history.push({\n                    pathname: \"/landing\",\n                });\n                EventBus.dispatchEvent(\"clear_all_states\");\n            } else if (info.key === \"profile\") {\n                history.push({\n                    pathname: \"/profile\",\n                });\n            } else {\n                history.push({\n                    pathname: \"/home\",\n                })\n            }\n        }\n    }\n\n    return (\n        <Sticky innerZ=\"1\">\n            <ConfigProvider direction=\"rtl\">\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    onSelect={onSelect}\n                    selectedKeys={[curPath]}>\n                    <Menu.Item key=\"logout\">\n                        <LogoutOutlined/>Log Out\n                    </Menu.Item>\n                    <Menu.Item key=\"profile\">\n                        <UserOutlined/>Profile\n                    </Menu.Item>\n                    <Menu.Item key=\"home\">\n                        <HomeOutlined/>Home\n                    </Menu.Item>\n                </Menu>\n            </ConfigProvider>\n        </Sticky>\n    )\n}\n\nexport default MyMediaMenu;\n","// TODO: Uploader animation\nimport React, {useEffect, useState} from \"react\";\nimport {beforeUpload, showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport {LoadingOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {Button, message, Upload, Space, Row} from \"antd\";\n\nconst AvatarUploader = () => {\n\n    message.config({\n        rtl: false,\n    })\n\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploaded, setUploaded] = useState(false);\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/avatar\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setImageUrl(res.avatar);\n        }).catch(err => message.error(err, 1));\n    };\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setImageUrl(info.file.response.url);\n            setLoading(false);\n            setUploaded(true);\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    const update = async () => {\n        if (uploaded) {\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/avatar\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    avatar: imageUrl,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => {\n                message.success(\"Update successfully!\", 1);\n                EventBus.dispatchEvent(\"reload_min_profile\");\n                EventBus.dispatchEvent(\"reload_articles\");\n            }).catch(err => message.error(err, 1));\n        }\n    };\n\n    return (\n        <Row justify=\"center\">\n            <Space align=\"center\" direction=\"vertical\">\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"https://comp531-rw48-mymedia-backend.herokuapp.com/upload/avatar\"\n                    withCredentials={true}\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    {imageUrl ? (\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\n                    ) : (\n                        uploadButton\n                    )}\n                </Upload>\n                <Button type=\"primary\" onClick={update}>\n                    Click the avatar to upload a new one, and then click here to submit the update.\n                </Button>\n            </Space>\n        </Row>\n    );\n};\n\nexport default AvatarUploader;\n","import React from 'react';\nimport {Button, Form, Input, message} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst PasswordSetup = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const onFinish = async (values) => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/password\", {\n            method: \"PUT\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                newPassword: values.newPassword,\n                oldPassword: values.curPassword,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else if (res.status === 401) {\n                throw \"The old password is wrong!\";\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            message.success(\"Update successfully!\", 1);\n        }).catch(err => message.error(err, 1));\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"updatePassword\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n        >\n            <Form.Item name=\"curPassword\"\n                       label=\"Current Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your current password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item name=\"newPassword\"\n                       label=\"New Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your new password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"newPasswordConfirmation\"\n                label=\"Confirmation\"\n                dependencies={['newPassword']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your new password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('newPassword') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Update\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default PasswordSetup;\n","import React, {useEffect, useState} from \"react\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport {Button, Form, message} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport {GoogleOutlined} from \"@ant-design/icons\";\n\nconst GoogleLinking = () => {\n\n    message.config({\n        rtl: false,\n    });\n    const [googleEmail, setGoogleEmail] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/google_email\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setGoogleEmail(res.google_email);\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_google_binding\", load);\n    EventBus.addEventListener(\"reload_all\", load);\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setGoogleEmail(\"\");\n    });\n\n    const onFinish = async () => {\n        window.location.href = \"https://comp531-rw48-mymedia-backend.herokuapp.com/auth/google\";\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"userGoogleBinding\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n        >\n            <Form.Item name=\"googleEmail\"\n                       label=\"Google Account\"\n            >\n                <span className=\"ant-form-text\">\n                    {googleEmail ? googleEmail : \"You have not linked your Google account.\"}\n                </span>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Link your account with {<GoogleOutlined/>}\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default GoogleLinking;\n","import React, {useEffect} from \"react\";\nimport {Button, Card, Row, Col, DatePicker, Divider, Form, Input, message} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport moment from \"moment\";\nimport MyMediaMenu from \"./Menu\";\nimport EventBus from \"../util/EventBus\";\nimport {disabledDate, showBackendMessage} from \"../util/Functions\";\nimport AvatarUploader from \"./AvatarUploader\";\nimport PasswordSetup from \"./PasswordSetup\";\nimport GoogleLinking from \"./GoogleLinking\";\n\n\nconst Profile = () => {\n    message.config({\n        rtl: false,\n    });\n    const [form] = Form.useForm();\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            form.setFieldsValue({\n                \"username\": res.username,\n                \"displayedName\": res.displayedName,\n                \"email\": res.email,\n                \"phone\": res.phone,\n                \"dob\": moment(res.dob),\n                \"zipcode\": res.zipcode,\n                \"headline\": res.headline,\n            });\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const style = {padding: '46px 0'};\n\n    const onFinish = async (values) => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile\", {\n            method: \"PUT\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                displayed_name: values.displayed_name,\n                phone: values.phone,\n                email: values.email,\n                zipcode: values.zipcode,\n                headline: values.headline,\n                dob: values.dob,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            EventBus.dispatchEvent(\"reload_min_profile\");\n            EventBus.dispatchEvent(\"reload_articles\");\n            message.success(\"Update successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    return (\n        <>\n            <MyMediaMenu/>\n            <Row gutter={{xs: 0, sm: 0, md: 0, lg: 0, xl: 0}} style={style}>\n                <Col className=\"gutter-row\" xs={0} sm={0} md={0} lg={6} xl={6}/>\n                <Col className=\"gutter-row\" xs={24} sm={24} md={24} lg={12} xl={12}>\n                    <Card>\n                        <Divider orientation=\"left\">Avatar</Divider>\n                        <AvatarUploader/>\n\n                        <Divider orientation=\"left\">Information</Divider>\n                        <Form {...formItemLayout}\n                            form={form}\n                            name=\"updateInformation\"\n                            autoComplete=\"off\"\n                            onFinish={onFinish}\n                        >\n                            <Form.Item name=\"username\"\n                                       label=\"Username\"\n                            >\n                                <span className=\"ant-form-text\" />\n                            </Form.Item>\n\n                            <Form.Item name=\"displayedName\"\n                                       label=\"Displayed Name\"\n                                       rules={[\n                                           {\n                                               pattern: /^[a-zA-Z][a-zA-Z0-9]*$/,\n                                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                                           },\n                                       ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                            <Form.Item name=\"headline\"\n                                       label=\"Headline\"\n                            >\n                                <Input.TextArea rows={4}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"email\"\n                                       label=\"E-mail\"\n                                       rules={[\n                                           {\n                                               type: 'email',\n                                               message: 'Please input your valid E-mail like a@b.co!',\n                                           },\n                                           {\n                                               required: true,\n                                               message: 'Please input your E-mail!',\n                                           },\n                                       ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                            <Form.Item name=\"phone\"\n                                       label=\"Phone Number\"\n                                       rules={[\n                                           {\n                                               pattern: /^[0-9]{10}$/,\n                                               message: 'Please input your phone number like 1231231234!'\n                                           },\n                                           {\n                                               required: true,\n                                               message: 'Please input your phone number!',\n                                           },\n                                       ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                            <Form.Item name=\"dob\"\n                                       label=\"Date of Birth\"\n                                       rules={[\n                                           {\n                                               required: true,\n                                               message: 'Please input your date of birth!',\n                                           },\n                                       ]}\n                                       extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n                            >\n                                <DatePicker format={'MM/DD/YYYY'}\n                                            style={{width: '100%'}}\n                                            disabledDate={disabledDate}/>\n                            </Form.Item>\n\n                            <Form.Item name=\"zipcode\"\n                                       label=\"Zipcode\"\n                                       rules={[\n                                           {\n                                               pattern: /^[0-9]{5}$/,\n                                               message: 'Please input your phone zipcode like 12345!'\n                                           },\n                                           {\n                                               required: true,\n                                               message: 'Please input your phone zipcode!',\n                                           },\n                                       ]}\n                            >\n                                <Input/>\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Update\n                                </Button>\n                            </Form.Item>\n                        </Form>\n\n                        <Divider orientation=\"left\">Linking your Google Account</Divider>\n                        <GoogleLinking/>\n\n                        <Divider orientation=\"left\">Password</Divider>\n                        <PasswordSetup/>\n\n                    </Card>\n                </Col>\n                <Col className=\"gutter-row\" xs={0} sm={0} md={0} lg={6} xl={6}/>\n            </Row>\n        </>\n    )\n}\n\nexport default Profile;\n","import React, {useEffect, useState} from \"react\";\nimport {Avatar, Button, List, message} from \"antd\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst Following = (props) => {\n\n    message.config({\n        rtl: false,\n    });\n\n    const [username, setUsername] = useState(props.username);\n    const [avatar, setAvatar] = useState(\"\");\n    const [displayedName, setDisplayedName] = useState(\"\");\n    const [headline, setHeadline] = useState(\"\");\n\n    const load = async () => {\n        if (!username) return;\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile/\" + username, {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setAvatar(res.avatar);\n            setDisplayedName(res.displayedName);\n            setHeadline(res.headline);\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const onClick = async () => {\n        props.action(username)();\n    }\n\n    return (\n        <List.Item actions={[\n            <Button type=\"text\" onClick={onClick}>\n                {props.actionSymbol}\n            </Button>,\n        ]}>\n            <List.Item.Meta\n                avatar={<Avatar src={avatar}/>}\n                title={displayedName}\n                description={headline}\n            />\n        </List.Item>\n    )\n};\n\nexport default Following;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {Card, List, Input, Divider, message} from \"antd\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport Following from \"./Following\";\nimport {CloseCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\n\nconst Followings = () => {\n\n    message.config({\n        rtl: false,\n    });\n    const [followings, setFollowings] = useState([]);\n    const [searchUserList, setSearchUserList] = useState([]);\n    const [showSearchUserList, setShowSearchUserList] = useState(false);\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/following\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setFollowings(followings => res.followings);\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const showSearchResult = async (value) => {\n        if (value === \"\") {\n            setShowSearchUserList(false);\n            setSearchUserList([]);\n        } else {\n            setShowSearchUserList(true);\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/following/search\", {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    keyWord: value,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                setSearchUserList(searchUserList => res.searchResult);\n            }).catch(err => message.error(err, 1));\n        }\n    }\n\n    const addNewFollowing = (value) => async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/following/\" + value, {\n            method: \"PUT\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            message.success(\"Added a new following user\");\n            setFollowings(followings => res.followings);\n            setSearchUserList(searchUserList => searchUserList.filter(item => item !== value));\n            EventBus.dispatchEvent(\"reload_articles\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const deleteFollowing = (value) => async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/following/\" + value, {\n            method: \"DELETE\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            message.success(\"Delete a followed user\");\n            setFollowings(followings => followings.filter(item => item !== value));\n            EventBus.dispatchEvent(\"reload_articles\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const MemoList = (props) => {\n        return (\n            <List\n                dataSource={props.userList}\n                renderItem={(item) => <Following\n                    username={item}\n                    action={props.action}\n                    actionSymbol={props.symbol}\n                />}\n                pagination={{\n                    position: \"bottom\",\n                    pageSize: 5\n                }}\n            />\n        )\n    }\n\n    const areEqualMemoList = (prevProps, nextProps) => {\n        return stringArrayEqual(prevProps.commentIdList, nextProps.commentIdList);\n    }\n\n    memo(MemoList, areEqualMemoList);\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">My followings</Divider>\n            <Input.Search\n                allowClear\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={showSearchResult}\n            />\n            <div hidden={!showSearchUserList}>\n                <Card bordered={true}>\n                    <MemoList userList={searchUserList} symbol={<PlusCircleOutlined />} action={addNewFollowing}/>\n                </Card>\n            </div>\n            <MemoList userList={followings} symbol={<CloseCircleOutlined />} action={deleteFollowing}/>\n        </Card>\n    )\n}\n\nexport default Followings;\n","import React, {useEffect, useState} from \"react\";\nimport {Avatar, Card, Input, Button, Space, Divider, message} from \"antd\";\nimport {CheckOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst MinProfile = () => {\n    message.config({\n        rtl: false,\n    });\n    const [editing, setEditing] = useState(false);\n    const [headline, setHeadline] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [displayedName, setDisplayedName] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setHeadline(res.headline);\n            setAvatar(res.avatar);\n            setDisplayedName(res.displayedName);\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const onClick = async (values) => {\n        if (editing) {\n            setEditing(false);\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/headline\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    headline: headline,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => EventBus.dispatchEvent(\"reload_profile\"))\n                .catch(err => message.error(err, 1));\n        } else {\n            setEditing(true);\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">Me</Divider>\n            <Card.Meta\n                avatar={<Avatar src={avatar}/>}\n                title={displayedName}\n                description={\n                    <Space size={0}>\n                        <Button type=\"text\" onClick={onClick}> {\n                            editing ? <CheckOutlined/> : <EditOutlined/>\n                        }\n                        </Button> {\n                            editing ? <Input value={headline} onChange={(e) => {\n                                setHeadline(e.target.value);\n                            }}/> :\n                            <span>{headline}</span>}\n                    </Space>\n                }\n            />\n        </Card>\n    )\n}\n\nexport default MinProfile;\n","// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, {memo, useEffect, useState} from \"react\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {Modal, Upload} from \"antd\";\nimport EventBus from \"../util/EventBus\";\nimport {stringArrayEqual} from \"../util/Functions\";\n\n\nconst getBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst urlsToFiles = (urls) => {\n    if (urls) {\n        return urls.map((item) => {\n            let fileName = item.split(\"/\").slice(-1)[0];\n            let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n            return {\n                uid: fileUid,\n                name: fileName,\n                status: 'done',\n                url: item,\n            }\n        })\n    } else {\n        return [];\n    }\n}\n\nconst ImagesWall = (props) => {\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState(\"\");\n    const [previewTitle, setPreviewTitle] = useState(\"\");\n    const [fileList, setFileList] = useState(urlsToFiles(props.imageUrlsList));\n\n    useEffect(() => {\n        setFileList(fileList => urlsToFiles(props.imageUrlsList));\n    }, [props]);\n\n    const handleCancel = () => {\n        setPreviewVisible(false);\n    }\n\n    const handlePreview = async (file) => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n        setPreviewTitle(\n            file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n        );\n    };\n\n    const handleChange = ({ fileList }) => {\n        setFileList(fileList);\n        let fileListStatus = [];\n        fileList.forEach(item => fileListStatus.push(item.status));\n        if (fileListStatus.every(item => item === \"done\")) {\n            let curImageUrlsList = [];\n            for (let file of fileList) {\n                curImageUrlsList.push(file.url || file.response.url);\n            }\n            props.action(imageUrlsList => curImageUrlsList);\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Upload\n                name=\"image\"\n                action=\"https://comp531-rw48-mymedia-backend.herokuapp.com/upload/image\"\n                withCredentials={true}\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n            >\n                {fileList.length >= 8 ? null : uploadButton}\n            </Upload>\n            <Modal\n                visible={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n};\n\nconst areEqualImagesWall = (prevProps, nextProps) => {\n    return stringArrayEqual(prevProps.imageUrlsList, nextProps.imageUrlsList);\n}\n\nexport default memo(ImagesWall, areEqualImagesWall);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {Input, Button, Form, Card, Divider, message} from \"antd\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\nimport ImagesWall from \"./ImageWall\";\n\n\n// TODO: React.lazy\nconst SubmitOrEditArticle = (props) => {\n    message.config({\n        rtl: false,\n    });\n    const [form] = Form.useForm();\n    const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n\n    useEffect(() => {\n        form.setFieldsValue({\n            \"title\": props.title,\n            \"text\": props.text,\n        });\n        setImageUrlsList(imageUrlsList => props.imageUrlsList);\n    }, [form, props]);\n\n    const onFinish = async (values) => {\n        if (props.id) {\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/article/\" + props.id, {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                message.success(\"Edit Successfully\");\n                props.action({\n                    id: res._id,\n                    title: res.title,\n                    text: res.text,\n                    timestamp: res.timestamp,\n                    images: res.images,\n                });\n            }).catch(err => message.error(err, 1));\n        } else {\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/article\", {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                message.success(\"Submit Successfully\", 1);\n                props.action(res._id);\n            }).catch(err => message.error(err, 1));\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">{\n                props.id ? \"Edit this article\" : \"Add new article\"\n            }</Divider>\n            <Form onFinish={onFinish} form={form}>\n                <Form.Item name=\"title\">\n                    <Input/>\n                </Form.Item>\n                <Form.Item name=\"text\">\n                    <Input.TextArea/>\n                </Form.Item>\n                <Form.Item>\n                    <ImagesWall\n                        imageUrlsList={imageUrlsList}\n                        action={setImageUrlsList} />\n                </Form.Item>\n                <Form.Item>\n                    <Button style={{width: \"50%\"}} htmlType=\"submit\" type=\"primary\">\n                        Submit\n                    </Button>\n                    <Button style={{width: \"50%\"}} htmlType=\"reset\" type=\"default\">\n                        Clear\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}\n\nconst areEqualSubmitOrEditArticle = (prevProps, nextProps) => {\n    return prevProps.id === nextProps.id\n        && prevProps.title === nextProps.title\n        && prevProps.text === nextProps.text\n        && stringArrayEqual(prevProps.imageUrlsList, nextProps.imageUrlsList);\n}\n\nexport default memo(SubmitOrEditArticle, areEqualSubmitOrEditArticle);\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Input, Comment as AntdComment, message} from \"antd\";\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {showBackendMessage} from \"../util/Functions\";\n\nconst Comment = (props) => {\n    message.config({\n        rtl: false,\n    });\n\n    const [hideEditor, setHideEditor] = useState(true);\n    const [id, setId] = useState(props.id);\n    const [username, setUsername] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [timeStamp, setTimeStamp] = useState(0);\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/comment/\" + id, {\n            method: \"GET\",\n            credentials: \"include\"\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(async res => {\n            setAuthor(res.author);\n            setUsername(res.username);\n            setText(res.text);\n            setTimeStamp(res.timestamp);\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile/\" + res.author, {\n                method: \"GET\",\n                credentials: \"include\",\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                setAuthorDisplayedName(res.displayedName);\n                setAvatar(res.avatar);\n            }).catch(err => message.error(err, 1));\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onDelete = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/comment/\" + id, {\n            method: \"DELETE\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                articleId: props.articleId,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            props.deleteAction(props.id);\n            message.success(\"Delete successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const onSubmit = async (value) => {\n        if (!value) {\n            message.error(\"Please input your comment!\", 1);\n            return;\n        }\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/comment/\" + id, {\n            method: \"PUT\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                text: value,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setText(res.text);\n            message.success(\"Update successfully!\");\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n\n    return (\n        <li>\n        <AntdComment\n            author={authorDisplayedName}\n            avatar={avatar}\n            content={text}\n            actions={\n                username === author ? [\n                    <Button type=\"link\" onClick={() => setHideEditor(!hideEditor)}>\n                        <EditOutlined/>Edit\n                    </Button>,\n                    <Button type=\"link\" onClick={async () => {\n                        setHideEditor(true)\n                        await onDelete();\n                    }}>\n                        <DeleteOutlined/>Delete\n                    </Button>\n                ] : []\n            }\n            datetime={(new Date(timeStamp)).toLocaleString()}\n        />\n        <div hidden={hideEditor}>\n            <Input.Search\n                allowClear\n                onSearch={onSubmit}\n                defaultValue={text}\n                enterButton=\"Comment\"\n            />\n        </div>\n        </li>\n    )\n};\n\nexport default Comment;\n","import React, {memo, useEffect, useRef, useState} from \"react\";\nimport {Card, Input, List, message} from \"antd\";\nimport Comment from \"./Comment\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\n\n\n// TODO: Comments sort\nconst Comments = (props) => {\n    message.config({\n        rtl: false,\n    });\n\n    const commentRef = useRef();\n    const [commentIdList, setCommentIdList] = useState(props.commentIdList);\n\n    useEffect(() => {\n        setCommentIdList(commentIdList => props.commentIdList.reverse());\n    }, [props]);\n\n    const addNewComment = async (value) => {\n        if (!value) {\n            message.error(\"Please input your comment!\", 1);\n            return;\n        }\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/comment\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                articleID: props.articleId,\n                text: value,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setCommentIdList(commentIdList => res.comments.reverse());\n            commentRef.current.setValue(\"\");\n            message.success(\"Comment Successfully!\", 1);\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onDeleteComment = (id) => {\n        setCommentIdList(commentIdList => commentIdList.filter((item) => {\n            return item !== id;\n        }));\n    }\n\n\n    const MemoList = (_props) => {\n        return (\n            <List\n                header={`${_props.commentIdList ? _props.commentIdList.length : 0} replies`}\n                itemLayout=\"horizontal\"\n                dataSource={_props.commentIdList}\n                renderItem={item => <Comment articleId={props.articleId}\n                                             id={item}\n                                             deleteAction={onDeleteComment}/>}\n            />\n        )\n    }\n\n    const areEqualMemoList = (prevProps, nextProps) => {\n        return stringArrayEqual(prevProps.commentIdList, nextProps.commentIdList);\n    }\n\n    memo(MemoList, areEqualMemoList);\n\n    return (\n        <Card>\n            <MemoList commentIdList={commentIdList}/>\n            <Input.Search\n                allowClear\n                onSearch={addNewComment}\n                ref={commentRef}\n                enterButton=\"Comment\"/>\n        </Card>\n    )\n}\n\n// const areEqualComments = (prevProps, nextProps) => {\n//     return stringArrayEqual(prevProps.commentIdList, nextProps.commentIdList);\n// }\n//\n// export default memo(Comments, areEqualComments);\n\nexport default Comments;\n","import React, {useState} from \"react\";\nimport {Image} from \"antd\";\n\nconst Images = (props) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <>\n            <Image\n                preview={{ visible: false }}\n                src={props.images[0]}\n                onClick={() => setVisible(true)}\n                style={{\n                    width: \"200px\"\n                }}\n            />\n            <div style={{ display: 'none' }}>\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\n                    {props.images.map(item => <Image src={item} />)}\n                </Image.PreviewGroup>\n            </div>\n        </>\n    );\n}\n\nexport default Images;\n","import React, {useEffect, useState} from \"react\";\nimport {Avatar, Button, Card, List, message} from \"antd\";\nimport {DeleteOutlined, EditOutlined, MessageOutlined} from \"@ant-design/icons\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport Comments from \"./Comments\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport Images from \"./Images\";\n\n\nconst Article = (props) => {\n    message.config({\n        rtl: false,\n    });\n\n    const [id, setId] = useState(props.id);\n    const [author, setAuthor] = useState(\"\");\n    const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [hideComments, setHideComments] = useState(true);\n    const [hideEditor, setHideEditor] = useState(true);\n    const [title, setTitle] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [timestamp, setTimeStamp] = useState(\"\");\n    const [imageUrlList, setImageUrlList] = useState([]);\n    const [commentIdList, setCommentIdList] = useState([]);\n\n\n\n    useEffect(() => {\n        const load = async () => {\n            await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/article/\" + id, {\n                method: \"GET\",\n                credentials: \"include\",\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(async res => {\n                setAuthor(res.author);\n                setTitle(res.title);\n                setText(res.text);\n                setTimeStamp(new Date(res.timestamp).toLocaleString());\n                setImageUrlList(imageUrlList => res.imageUrlList);\n                setCommentIdList(commentIdList => res.commentIdList);\n                await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/profile/\" + res.author, {\n                    method: \"GET\",\n                    credentials: \"include\",\n                }).then(res => {\n                    if (res.ok) {\n                        showBackendMessage();\n                        return res.json();\n                    } else {\n                        throw res.statusText;\n                    }\n                }).then(res => {\n                    setAuthorDisplayedName(res.displayedName);\n                    setAvatar(res.avatar);\n                });\n            }).catch(err => message.error(err, 1));\n        };\n        load();\n    }, [props.id]);\n\n    const onDelete = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/article/\" + id, {\n            method: \"DELETE\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            props.deleteAction(props.id);\n            message.success(\"Delete successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const onEditArticle = (values) => {\n        setTitle(values.title);\n        setText(values.text);\n        setTimeStamp(values.timestamp);\n        setImageUrlList(imageUrlList => values.images);\n        setHideEditor(true);\n    };\n\n    return (\n        <div>\n            <List.Item\n                key={props.title}\n                actions={\n                    props.username === author ? [\n                        <Button type=\"link\" onClick={() => setHideComments(!hideComments)}>\n                            <MessageOutlined/>Comment\n                        </Button>,\n                        <Button type=\"link\" onClick={() => setHideEditor(!hideEditor)}>\n                            <EditOutlined/>Edit\n                        </Button>,\n                        <Button type=\"link\" onClick={async () => {\n                            setHideComments(true);\n                            setHideEditor(true);\n                            await onDelete();\n                        }}>\n                            <DeleteOutlined />Delete\n                        </Button>,\n                    ] : [\n                        <Button type=\"link\" onClick={() => setHideComments(!hideComments)}>\n                            <MessageOutlined/>Comment\n                        </Button>,\n                    ]\n                }\n                extra={\n                    imageUrlList && imageUrlList.length !== 0 ?\n                    <Images images={imageUrlList}/> :\n                    <></>\n                }\n            >\n                <List.Item.Meta\n                    avatar={<Avatar src={avatar}/>}\n                    title={title}\n                    description={\n                        <div>\n                            <span>\n                                {authorDisplayedName},\n                            </span>\n                            <span>\n                                {(new Date(timestamp)).toLocaleString()}\n                            </span>\n                        </div>\n                    }/>\n                {text}\n            </List.Item>\n            <div hidden={hideEditor}>\n                <Card border=\"true\">\n                    <SubmitOrEditArticle\n                        action={onEditArticle}\n                        id={props.id}\n                        title={title}\n                        text={text}\n                        imageUrlsList={imageUrlList}\n                    />\n                </Card>\n            </div>\n            <div hidden={hideComments}>\n                <Card border=\"true\">\n                    <Comments commentIdList={commentIdList} articleId={id}/>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default Article;","import React, {memo, useEffect, useState} from \"react\";\nimport {Card, Divider, Input, List, message, Space} from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst Articles = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const [selectedArticleIds, setSelectedArticleIds] = useState([]);\n    const [username, setUsername] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setUsername(res.username);\n            setSelectedArticleIds(selectedArticleIds => res.ids);\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_articles\", load);\n    const onSearch = async (value) => {\n        await fetch(\"https://comp531-rw48-mymedia-backend.herokuapp.com/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                keyWord: value,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setSelectedArticleIds(selectedArticleIds => res.ids);\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onSubmitArticle = (id) => {\n        setSelectedArticleIds(selectedArticleIds => [id, ...selectedArticleIds]);\n    }\n\n    const onDeleteArticle = (id) => {\n        setSelectedArticleIds(selectedArticleIds => selectedArticleIds.filter((item) => item !== id));\n    }\n\n    const ArticleList = (props) => {\n        return (\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={props.selectedArticleIds}\n                renderItem={item => <Article id={item} username={username} deleteAction={onDeleteArticle}/>}\n                pagination={{\n                    position: \"top\",\n                    pageSize: 5\n                }}\n            />\n        );\n    }\n\n    const areEqualArticleList = (prevProps, nextProps) => {\n        return stringArrayEqual(prevProps.selectedArticleIds, nextProps.selectedArticleIds);\n    }\n\n    memo(ArticleList, areEqualArticleList);\n\n    return (\n        <Space direction=\"vertical\" style={{width: \"100%\"}}>\n            <SubmitOrEditArticle action={onSubmitArticle}/>\n\n            <Card bordered={true}>\n                <Input.Search\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={onSearch}\n                />\n                <Divider orientation=\"left\">Posts</Divider>\n                <ArticleList selectedArticleIds={selectedArticleIds}/>\n            </Card>\n        </Space>\n    )\n}\n\nexport default Articles;\n","import \"../App.css\"\nimport React, {useEffect} from \"react\";\nimport {Col, message, Row, Space} from \"antd\";\nimport MyMediaMenu from \"./Menu\";\nimport Followings from \"./Followings\";\nimport MinProfile from \"./MinProfile\";\nimport Articles from \"./Articles\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst Home = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const style = {padding: '46px 0'};\n\n    useEffect(showBackendMessage, []);\n\n    return (\n        <>\n            <MyMediaMenu/>\n            <Row gutter={{xs: 8, sm: 16, md: 24, lg: 32}} style={style}>\n                <Col className=\"gutter-row\" xs={0} sm={0} md={3} lg={3} xl={3}/>\n                <Col className=\"gutter-row\" xs={24} sm={24} md={6} lg={6} xl={6}>\n                    <Space direction=\"vertical\" style={{width: \"100%\"}}>\n                        <MinProfile/>\n                        <Followings/>\n                    </Space>\n                </Col>\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} lg={12} xl={12}>\n                    <Articles/>\n                </Col>\n                <Col className=\"gutter-row\" xs={0} sm={0} md={3} lg={3} xl={3}/>\n            </Row>\n        </>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {Card, message} from \"antd\";\nimport '../App.css';\nimport RegisterForm from \"./RegisterForm\";\n\n\nconst RegisterWithGoogle = () => {\n    message.config({\n        rtl: false,\n    });\n    return (\n        <Card style={{\n            width: '44%',\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)'\n        }}\n              bordered={true}\n        >\n            <RegisterForm />\n        </Card>\n    );\n}\n\nexport default RegisterWithGoogle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Landing from './component/Landing';\nimport Profile from \"./component/Profile\";\nimport Home from \"./component/Home\";\nimport RegisterWithGoogle from \"./component/RegisterWithGoogle\";\nimport {Redirect} from \"react-router\";\nimport {isLoggedInAsCookie, isRegisteringWithGoogle} from \"./util/Functions\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" render={\n                    () => {\n                        if (isLoggedInAsCookie()) {\n                            return <Redirect to=\"/home\"/>;\n                        } else {\n                            return <Redirect to=\"/landing\"/>;\n                        }\n                    }\n                }/>\n\n                <Route exact path=\"/landing\" render={\n                    () => {\n                        if (isLoggedInAsCookie()) {\n                            return <Redirect to=\"/home\"/>;\n                        } else {\n                            return <Landing/>;\n                        }\n                    }\n                }/>\n\n                <Route exact path=\"/home\" render={\n                    () => {\n                        if (isLoggedInAsCookie())  {\n                            return <Home/>;\n                        } else {\n                            return <Redirect to=\"/landing\"/>;\n                        }\n                    }\n                }/>\n\n                <Route exact path=\"/profile\" render={\n                    () => {\n                        if (isLoggedInAsCookie()) {\n                            return <Profile/>;\n                        } else {\n                            return <Redirect to=\"/landing\"/>;\n                        }\n                    }\n                }/>\n\n                <Route exact path=\"/register_with_google\" render={\n                    () => {\n                        if (isLoggedInAsCookie()) {\n                            return <Redirect to=\"/home\"/>;\n                        } else if (!isRegisteringWithGoogle()) {\n                            return <Redirect to=\"/landing\"/>;\n                        } else {\n                            return <RegisterWithGoogle/>;\n                        }\n                    }\n                }/>\n\n            </Switch>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}