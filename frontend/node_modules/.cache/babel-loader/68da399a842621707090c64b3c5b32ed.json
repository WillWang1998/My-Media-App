{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, DatePicker, Form, Input, message, Space } from \"antd\";\nimport { formItemLayout, tailFormItemLayout } from \"./Landing\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../actions\";\nimport { store } from \"../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const disabledDate = current => {\n  let nowTime = new Date(Date.now());\n  let nowYear = nowTime.getFullYear(),\n      nowMonth = nowTime.getMonth(),\n      nowDate = nowTime.getDate();\n\n  if (current) {\n    let selectYear = current.year(),\n        selectMonth = current.month(),\n        selectDate = current.date();\n    return nowYear - selectYear < 18 || nowYear - selectYear === 18 && nowMonth < selectMonth || nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate;\n  }\n\n  return false;\n}; // TODO: Refactor with hook\n\nconst RegisterForm = props => {\n  _s();\n\n  const history = useHistory();\n  message.config({\n    rtl: false\n  });\n\n  const onFinish = values => {\n    props.register({\n      userName: values.userName,\n      email: values.email,\n      phone: values.phone,\n      DOB: values.DOB,\n      zipcode: values.zipcode,\n      displayName: values.displayName,\n      password: values.password\n    });\n    let curState = store.getState();\n\n    if (curState.isAuthenticated) {\n      message.success(curState.logInOrRegisterMessage, 1).then(r => {\n        history.push({\n          pathname: \"/home\"\n        });\n      });\n    } else {\n      message.error(curState.logInOrRegisterMessage).then();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    name: \"register\",\n    layout: \"horizontal\",\n    autoComplete: \"off\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"userName\",\n      label: \"Username\",\n      rules: [{\n        pattern: /[a-zA-Z][a-zA-Z0-9]*/,\n        message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n      }, {\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"displayName\",\n      label: \"Display Name\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'Please input your valid E-mail like a@b.co!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"a@b.co\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        pattern: /^[0-9]{10}$/,\n        message: 'Please input your phone number like 1231231234!'\n      }, {\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"1231231234\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"DOB\",\n      label: \"Date of Birth\",\n      rules: [{\n        required: true,\n        message: 'Please input your date of birth!'\n      }],\n      extra: \"Only individuals 18 years of age or older on the day of registration are allowed to register.\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        format: 'MM/DD/YYYY',\n        style: {\n          width: '100%'\n        },\n        disabledDate: disabledDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"zipcode\",\n      label: \"Zipcode\",\n      rules: [{\n        pattern: /^[0-9]{5}$/,\n        message: 'Please input your phone zipcode like 12345!'\n      }, {\n        required: true,\n        message: 'Please input your phone zipcode!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"12345\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"passwordConfirmation\",\n      label: \"Password Confirmation\",\n      dependencies: ['password'],\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords you entered do not match!'));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 8,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegisterForm;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: values => dispatch(register(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/RegisterForm.js"],"names":["React","Button","DatePicker","Form","Input","message","Space","formItemLayout","tailFormItemLayout","useHistory","connect","register","store","disabledDate","current","nowTime","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDate","getDate","selectYear","year","selectMonth","month","selectDate","date","RegisterForm","props","history","config","rtl","onFinish","values","userName","email","phone","DOB","zipcode","displayName","password","curState","getState","isAuthenticated","success","logInOrRegisterMessage","then","r","push","pathname","error","pattern","required","type","width","getFieldValue","validator","_","value","Promise","resolve","reject","Error","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, DatePicker, Form, Input, message, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"./Landing\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {register} from \"../actions\";\nimport {store} from \"../index\";\n\nexport const disabledDate = (current) => {\n    let nowTime = new Date(Date.now());\n    let nowYear = nowTime.getFullYear(),\n        nowMonth = nowTime.getMonth(),\n        nowDate = nowTime.getDate();\n    if (current) {\n        let selectYear = current.year(),\n            selectMonth = current.month(),\n            selectDate = current.date();\n        return (nowYear - selectYear < 18)\n            || (nowYear - selectYear === 18 && nowMonth < selectMonth)\n            || (nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate);\n    }\n    return false;\n}\n\n// TODO: Refactor with hook\n\nconst RegisterForm = (props) => {\n    const history = useHistory();\n\n    message.config({\n        rtl: false,\n    });\n\n    const onFinish = (values) => {\n        props.register({\n            userName: values.userName,\n            email: values.email,\n            phone: values.phone,\n            DOB: values.DOB,\n            zipcode: values.zipcode,\n            displayName: values.displayName,\n            password: values.password\n        });\n        let curState = store.getState();\n        if (curState.isAuthenticated) {\n            message.success(curState.logInOrRegisterMessage, 1).then(r => {\n                history.push({\n                    pathname: \"/home\",\n                });\n            });\n        } else {\n            message.error(curState.logInOrRegisterMessage).then();\n        }\n    };\n\n    return (\n        <Form {...formItemLayout}\n              name=\"register\"\n              layout=\"horizontal\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n        >\n            <Form.Item name=\"userName\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               pattern: /[a-zA-Z][a-zA-Z0-9]*/,\n                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"displayName\"\n                       label=\"Display Name\"\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"email\"\n                       label=\"E-mail\"\n                       rules={[\n                           {\n                               type: 'email',\n                               message: 'Please input your valid E-mail like a@b.co!',\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your E-mail!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"a@b.co\"/>\n            </Form.Item>\n\n            <Form.Item name=\"phone\"\n                       label=\"Phone Number\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{10}$/,\n                               message: 'Please input your phone number like 1231231234!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone number!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"1231231234\"/>\n            </Form.Item>\n\n            <Form.Item name=\"DOB\"\n                       label=\"Date of Birth\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your date of birth!',\n                           },\n                       ]}\n                       extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n            >\n                <DatePicker format={'MM/DD/YYYY'}\n                            style={{width: '100%'}}\n                            disabledDate={disabledDate}/>\n            </Form.Item>\n\n            <Form.Item name=\"zipcode\"\n                       label=\"Zipcode\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{5}$/,\n                               message: 'Please input your phone zipcode like 12345!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone zipcode!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"12345\"/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"passwordConfirmation\"\n                label=\"Password Confirmation\"\n                dependencies={['password']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                    <Button htmlType=\"reset\">\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        register: (values) => dispatch(register(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}