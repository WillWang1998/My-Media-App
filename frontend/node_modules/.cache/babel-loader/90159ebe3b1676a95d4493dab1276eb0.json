{"ast":null,"code":"import React from\"react\";import{Card,Avatar,List,Input,Button,Divider,message}from\"antd\";import{connect}from\"react-redux\";import{addNewFollowing as _addNewFollowing,unfollow as _unfollow}from\"../actions\";import{CloseCircleOutlined}from\"@ant-design/icons\";import{store}from\"../index\";// TODO: 1. Virtualization for performance\n//       2. Sticky\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Followings=function Followings(props){var addNewFollowing=function addNewFollowing(userName){props.addNewFollowing({userName:userName});var curState=store.getState();if(curState.addFollowingMessage){message.config({rtl:false});message.success(curState.addFollowingMessage,1).then();}};var createUnfollow=function createUnfollow(userName){return function(){props.unfollow({userName:userName});};};return/*#__PURE__*/_jsxs(Card,{bordered:true,children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"My followings\"}),/*#__PURE__*/_jsx(Input.Search,{allowClear:true,enterButton:\"Add Following\",size:\"large\",onSearch:addNewFollowing}),/*#__PURE__*/_jsx(List,{dataSource:props.followings,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(List.Item,{actions:[/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:createUnfollow(item.userName),children:/*#__PURE__*/_jsx(CloseCircleOutlined,{})})],children:/*#__PURE__*/_jsx(List.Item.Meta,{avatar:/*#__PURE__*/_jsx(Avatar,{src:item.avatar}),title:item.userName,description:item.status})});}})]});};var mapStateToProps=function mapStateToProps(state){return{followings:state.followings};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addNewFollowing:function addNewFollowing(values){return dispatch(_addNewFollowing(values));},unfollow:function unfollow(values){return dispatch(_unfollow(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(Followings);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Followings.js"],"names":["React","Card","Avatar","List","Input","Button","Divider","message","connect","addNewFollowing","unfollow","CloseCircleOutlined","store","Followings","props","userName","curState","getState","addFollowingMessage","config","rtl","success","then","createUnfollow","followings","item","avatar","status","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,MAAd,CAAsBC,IAAtB,CAA4BC,KAA5B,CAAmCC,MAAnC,CAA2CC,OAA3C,CAAoDC,OAApD,KAAkE,MAAlE,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,eAAe,GAAfA,CAAAA,gBAAR,CAAyBC,QAAQ,GAARA,CAAAA,SAAzB,KAAwC,YAAxC,CACA,OAAQC,mBAAR,KAAkC,mBAAlC,CACA,OAAQC,KAAR,KAAoB,UAApB,CAEA;AACA;wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE1B,GAAML,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACM,QAAD,CAAc,CAClCD,KAAK,CAACL,eAAN,CAAsB,CAClBM,QAAQ,CAAEA,QADQ,CAAtB,EAGA,GAAIC,CAAAA,QAAQ,CAAGJ,KAAK,CAACK,QAAN,EAAf,CACA,GAAID,QAAQ,CAACE,mBAAb,CAAkC,CAC9BX,OAAO,CAACY,MAAR,CAAe,CACXC,GAAG,CAAE,KADM,CAAf,EAGAb,OAAO,CAACc,OAAR,CAAgBL,QAAQ,CAACE,mBAAzB,CAA8C,CAA9C,EAAiDI,IAAjD,GACH,CACJ,CAXD,CAaA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACR,QAAD,CAAc,CACjC,MAAO,WAAM,CACTD,KAAK,CAACJ,QAAN,CAAe,CACXK,QAAQ,CAAEA,QADC,CAAf,EAGH,CAJD,CAKH,CAND,CAQA,mBACI,MAAC,IAAD,EAAM,QAAQ,CAAE,IAAhB,wBACI,KAAC,OAAD,EAAS,WAAW,CAAC,MAArB,2BADJ,cAEI,KAAC,KAAD,CAAO,MAAP,EACI,UAAU,KADd,CAEI,WAAW,CAAC,eAFhB,CAGI,IAAI,CAAC,OAHT,CAII,QAAQ,CAAEN,eAJd,EAFJ,cAQI,KAAC,IAAD,EACI,UAAU,CAAEK,KAAK,CAACU,UADtB,CAEI,UAAU,CAAE,oBAACC,IAAD,qBACR,KAAC,IAAD,CAAM,IAAN,EAAW,OAAO,CAAE,cAChB,KAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,OAAO,CAAEF,cAAc,CAACE,IAAI,CAACV,QAAN,CAA3C,uBACI,KAAC,mBAAD,IADJ,EADgB,CAApB,uBAII,KAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACI,MAAM,cAAE,KAAC,MAAD,EAAQ,GAAG,CAAEU,IAAI,CAACC,MAAlB,EADZ,CAEI,KAAK,CAAED,IAAI,CAACV,QAFhB,CAGI,WAAW,CAAEU,IAAI,CAACE,MAHtB,EAJJ,EADQ,EAFhB,EARJ,GADJ,CA0BH,CAjDD,CAmDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHL,UAAU,CAAEK,KAAK,CAACL,UADf,CAAP,CAGH,CAJD,CAMA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHtB,eAAe,CAAE,yBAACuB,MAAD,QAAYD,CAAAA,QAAQ,CAACtB,gBAAe,CAACuB,MAAD,CAAhB,CAApB,EADd,CAEHtB,QAAQ,CAAE,kBAACsB,MAAD,QAAYD,CAAAA,QAAQ,CAACrB,SAAQ,CAACsB,MAAD,CAAT,CAApB,EAFP,CAAP,CAIH,CALD,CAOA,cAAexB,CAAAA,OAAO,CAACoB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CjB,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {Card, Avatar, List, Input, Button, Divider, message} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {addNewFollowing, unfollow} from \"../actions\";\nimport {CloseCircleOutlined} from \"@ant-design/icons\";\nimport {store} from \"../index\";\n\n// TODO: 1. Virtualization for performance\n//       2. Sticky\n\nconst Followings = (props) => {\n\n    const addNewFollowing = (userName) => {\n        props.addNewFollowing({\n            userName: userName,\n        });\n        let curState = store.getState();\n        if (curState.addFollowingMessage) {\n            message.config({\n                rtl: false,\n            });\n            message.success(curState.addFollowingMessage, 1).then();\n        }\n    }\n\n    const createUnfollow = (userName) => {\n        return () => {\n            props.unfollow({\n                userName: userName,\n            });\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">My followings</Divider>\n            <Input.Search\n                allowClear\n                enterButton=\"Add Following\"\n                size=\"large\"\n                onSearch={addNewFollowing}\n            />\n            <List\n                dataSource={props.followings}\n                renderItem={(item) => (\n                    <List.Item actions={[\n                        <Button type=\"text\" onClick={createUnfollow(item.userName)}>\n                            <CloseCircleOutlined/>\n                        </Button>]}>\n                        <List.Item.Meta\n                            avatar={<Avatar src={item.avatar}/>}\n                            title={item.userName}\n                            description={item.status}\n                        />\n                    </List.Item>\n                )}\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        followings: state.followings\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNewFollowing: (values) => dispatch(addNewFollowing(values)),\n        unfollow: (values) => dispatch(unfollow(values))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Followings);\n"]},"metadata":{},"sourceType":"module"}