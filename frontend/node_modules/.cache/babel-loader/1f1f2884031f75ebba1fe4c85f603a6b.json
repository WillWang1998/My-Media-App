{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, DatePicker, Form, Input, message, Space } from \"antd\";\nimport { formItemLayout, tailFormItemLayout } from \"../util/Layout\";\nimport { useHistory } from \"react-router-dom\";\nimport { disabledDate, getCookie, handleResponse, showError } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = props => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [displayedName, setDisplayedName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const load = () => {\n    console.log(\"register load\");\n    setUsername(getCookie(\"usernameForGoogle\"));\n    setDisplayedName(getCookie(\"displayedNameForGoogle\"));\n    setEmail(getCookie(\"emailForGoogle\"));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"clear_all_states\", () => {\n    setUsername(\"\");\n    setDisplayedName(\"\");\n    setEmail(\"\");\n  });\n  EventBus.addEventListener(\"reload_all\", load);\n\n  const onFinish = async values => {\n    await fetch(\"https://localhost:4000/register\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        email: values.email,\n        phone: values.phone,\n        dob: values.dob,\n        zipcode: values.zipcode,\n        displayedName: values.displayedName,\n        password: values.password\n      })\n    }).then(res => handleResponse(res)).then(() => {\n      history.push({\n        pathname: \"/home\"\n      });\n      message.success(\"Register successfully!\");\n    }).catch(err => showError(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    name: \"register\",\n    layout: \"horizontal\",\n    autoComplete: \"off\",\n    onFinish: onFinish,\n    initialValues: {\n      \"username\": username,\n      \"email\": email,\n      \"displayedName\": displayedName\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        pattern: /[a-zA-Z][a-zA-Z0-9]*/,\n        message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n      }, {\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"displayedName\",\n      label: \"Displayed Name\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'Please input your valid E-mail like a@b.co!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"a@b.co\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        pattern: /^[0-9]{10}$/,\n        message: 'Please input your phone number like 1231231234!'\n      }, {\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"1231231234\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"dob\",\n      label: \"Date of Birth\",\n      rules: [{\n        required: true,\n        message: 'Please input your date of birth!'\n      }],\n      extra: \"Only individuals 18 years of age or older on the day of registration are allowed to register.\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        format: 'MM/DD/YYYY',\n        style: {\n          width: '100%'\n        },\n        disabledDate: disabledDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"zipcode\",\n      label: \"Zipcode\",\n      rules: [{\n        pattern: /^[0-9]{5}$/,\n        message: 'Please input your phone zipcode like 12345!'\n      }, {\n        required: true,\n        message: 'Please input your phone zipcode!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"12345\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"PasswordSetup\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.PasswordSetup, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"passwordConfirmation\",\n      label: \"PasswordSetup Confirmation\",\n      dependencies: ['password'],\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords you entered do not match!'));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.PasswordSetup, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 8,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"U1Zt/9CIdCziVVmD+nPj9Nzmw5Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/RegisterForm.js"],"names":["React","useEffect","useState","Button","DatePicker","Form","Input","message","Space","formItemLayout","tailFormItemLayout","useHistory","disabledDate","getCookie","handleResponse","showError","EventBus","RegisterForm","props","history","username","setUsername","displayedName","setDisplayedName","email","setEmail","load","console","log","addEventListener","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","phone","dob","zipcode","password","then","res","push","pathname","success","catch","err","pattern","required","type","width","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Button, DatePicker, Form, Input, message, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport {useHistory} from \"react-router-dom\";\nimport {disabledDate, getCookie, handleResponse, showError} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst RegisterForm = (props) => {\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [displayedName, setDisplayedName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n\n    const load = () => {\n        console.log(\"register load\")\n        setUsername(getCookie(\"usernameForGoogle\"));\n        setDisplayedName(getCookie(\"displayedNameForGoogle\"));\n        setEmail(getCookie(\"emailForGoogle\"));\n    };\n\n    useEffect(() => load(), []);\n\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setUsername(\"\");\n        setDisplayedName(\"\");\n        setEmail(\"\");\n    });\n    EventBus.addEventListener(\"reload_all\", load);\n\n    const onFinish = async (values) => {\n        await fetch(\"https://localhost:4000/register\",{\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                    username: values.username,\n                    email: values.email,\n                    phone: values.phone,\n                    dob: values.dob,\n                    zipcode: values.zipcode,\n                    displayedName: values.displayedName,\n                    password: values.password\n            }),\n        }).then(res => handleResponse(res)).then(() => {\n            history.push({\n                pathname:\"/home\"\n            });\n            message.success(\"Register successfully!\");\n        }).catch(err => showError(err));\n    };\n\n    return (\n        <Form {...formItemLayout}\n              name=\"register\"\n              layout=\"horizontal\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n              initialValues={{\n                  \"username\": username,\n                  \"email\": email,\n                  \"displayedName\": displayedName,\n              }}\n        >\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               pattern: /[a-zA-Z][a-zA-Z0-9]*/,\n                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"displayedName\"\n                       label=\"Displayed Name\"\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"email\"\n                       label=\"E-mail\"\n                       rules={[\n                           {\n                               type: 'email',\n                               message: 'Please input your valid E-mail like a@b.co!',\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your E-mail!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"a@b.co\"/>\n            </Form.Item>\n\n            <Form.Item name=\"phone\"\n                       label=\"Phone Number\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{10}$/,\n                               message: 'Please input your phone number like 1231231234!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone number!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"1231231234\"/>\n            </Form.Item>\n\n            <Form.Item name=\"dob\"\n                       label=\"Date of Birth\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your date of birth!',\n                           },\n                       ]}\n                       extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n            >\n                <DatePicker format={'MM/DD/YYYY'}\n                            style={{width: '100%'}}\n                            disabledDate={disabledDate}/>\n            </Form.Item>\n\n            <Form.Item name=\"zipcode\"\n                       label=\"Zipcode\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{5}$/,\n                               message: 'Please input your phone zipcode like 12345!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone zipcode!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"12345\"/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"PasswordSetup\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n\n            >\n                <Input.PasswordSetup visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"passwordConfirmation\"\n                label=\"PasswordSetup Confirmation\"\n                dependencies={['password']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.PasswordSetup visibilityToggle={false}/>\n            </Form.Item>\n\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                    <Button htmlType=\"reset\">\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}