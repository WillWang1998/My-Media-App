{"ast":null,"code":"import React from\"react\";import{Menu,ConfigProvider}from'antd';import{HomeOutlined,UserOutlined,LogoutOutlined}from'@ant-design/icons';import{useHistory,useLocation}from\"react-router-dom\";import{changeTab as _changeTab,logOut as _logOut}from\"../actions\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyMediaMenu=function MyMediaMenu(props){var location=useLocation();var history=useHistory();var onSelect=function onSelect(info){var curPath=location.pathname.slice(1);if(curPath!==info.key){if(info.key===\"logout\"){props.logOut(undefined);history.push({pathname:\"/landing\"});}else if(info.key===\"profile\"){props.changeTab({menuState:\"profile\"});history.push({pathname:\"/profile\"});}else{props.changeTab({menuState:\"home\"});history.push({pathname:\"/home\"});}}};return/*#__PURE__*/ (// TODO: Sticky\n_jsx(ConfigProvider,{direction:\"rtl\",children:/*#__PURE__*/_jsxs(Menu,{theme:\"dark\",mode:\"horizontal\",onSelect:onSelect,selectedKeys:[props.menuState],children:[/*#__PURE__*/_jsxs(Menu.Item,{children:[/*#__PURE__*/_jsx(LogoutOutlined,{}),\"Log Out\"]},\"logout\"),/*#__PURE__*/_jsxs(Menu.Item,{children:[/*#__PURE__*/_jsx(UserOutlined,{}),\"Profile\"]},\"profile\"),/*#__PURE__*/_jsxs(Menu.Item,{children:[/*#__PURE__*/_jsx(HomeOutlined,{}),\"Home\"]},\"home\")]})}));};var mapStateToProps=function mapStateToProps(state){return{menuState:state.menuState};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logOut:function logOut(values){return dispatch(_logOut(values));},changeTab:function changeTab(values){return dispatch(_changeTab(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(MyMediaMenu);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Menu.js"],"names":["React","Menu","ConfigProvider","HomeOutlined","UserOutlined","LogoutOutlined","useHistory","useLocation","changeTab","logOut","connect","MyMediaMenu","props","location","history","onSelect","info","curPath","pathname","slice","key","undefined","push","menuState","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,cAAd,KAAmC,MAAnC,CACA,OACIC,YADJ,CAEIC,YAFJ,CAGIC,cAHJ,KAIO,mBAJP,CAKA,OAAQC,UAAR,CAAoBC,WAApB,KAAsC,kBAAtC,CACA,OAAQC,SAAS,GAATA,CAAAA,UAAR,CAAmBC,MAAM,GAANA,CAAAA,OAAnB,KAAgC,YAAhC,CACA,OAAQC,OAAR,KAAsB,aAAtB,C,wFAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CACA,GAAMS,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACvB,GAAIC,CAAAA,OAAO,CAAGJ,QAAQ,CAACK,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAAd,CACA,GAAIF,OAAO,GAAKD,IAAI,CAACI,GAArB,CAA0B,CACtB,GAAIJ,IAAI,CAACI,GAAL,GAAa,QAAjB,CAA2B,CACvBR,KAAK,CAACH,MAAN,CAAaY,SAAb,EACAP,OAAO,CAACQ,IAAR,CAAa,CACTJ,QAAQ,CAAE,UADD,CAAb,EAGH,CALD,IAKO,IAAIF,IAAI,CAACI,GAAL,GAAa,SAAjB,CAA4B,CAC/BR,KAAK,CAACJ,SAAN,CAAgB,CACZe,SAAS,CAAE,SADC,CAAhB,EAGAT,OAAO,CAACQ,IAAR,CAAa,CACTJ,QAAQ,CAAE,UADD,CAAb,EAGH,CAPM,IAOA,CACHN,KAAK,CAACJ,SAAN,CAAgB,CACZe,SAAS,CAAE,MADC,CAAhB,EAGAT,OAAO,CAACQ,IAAR,CAAa,CACTJ,QAAQ,CAAE,OADD,CAAb,EAGH,CACJ,CACJ,CAxBD,CA0BA,oBACI;AACA,KAAC,cAAD,EAAgB,SAAS,CAAC,KAA1B,uBACI,MAAC,IAAD,EACI,KAAK,CAAC,MADV,CAEI,IAAI,CAAC,YAFT,CAGI,QAAQ,CAAEH,QAHd,CAII,YAAY,CAAE,CAACH,KAAK,CAACW,SAAP,CAJlB,wBAKI,MAAC,IAAD,CAAM,IAAN,yBACI,KAAC,cAAD,IADJ,aAAe,QAAf,CALJ,cAQI,MAAC,IAAD,CAAM,IAAN,yBACI,KAAC,YAAD,IADJ,aAAe,SAAf,CARJ,cAWI,MAAC,IAAD,CAAM,IAAN,yBACI,KAAC,YAAD,IADJ,UAAe,MAAf,CAXJ,GADJ,EAFJ,EAoBH,CAjDD,CAmDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHF,SAAS,CAAEE,KAAK,CAACF,SADd,CAAP,CAGH,CAJD,CAMA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHlB,MAAM,CAAE,gBAACmB,MAAD,QAAYD,CAAAA,QAAQ,CAAClB,OAAM,CAACmB,MAAD,CAAP,CAApB,EADL,CAEHpB,SAAS,CAAE,mBAACoB,MAAD,QAAYD,CAAAA,QAAQ,CAACnB,UAAS,CAACoB,MAAD,CAAV,CAApB,EAFR,CAAP,CAIH,CALD,CAOA,cAAelB,CAAAA,OAAO,CAACc,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {Menu, ConfigProvider} from 'antd';\nimport {\n    HomeOutlined,\n    UserOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {changeTab, logOut} from \"../actions\";\nimport {connect} from \"react-redux\";\n\n\nconst MyMediaMenu = (props) => {\n    const location = useLocation();\n    const history = useHistory();\n    const onSelect = (info) => {\n        let curPath = location.pathname.slice(1);\n        if (curPath !== info.key) {\n            if (info.key === \"logout\") {\n                props.logOut(undefined);\n                history.push({\n                    pathname: \"/landing\",\n                })\n            } else if (info.key === \"profile\") {\n                props.changeTab({\n                    menuState: \"profile\",\n                });\n                history.push({\n                    pathname: \"/profile\",\n                });\n            } else {\n                props.changeTab({\n                    menuState: \"home\",\n                });\n                history.push({\n                    pathname: \"/home\",\n                })\n            }\n        }\n    }\n\n    return (\n        // TODO: Sticky\n        <ConfigProvider direction=\"rtl\">\n            <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                onSelect={onSelect}\n                selectedKeys={[props.menuState]}>\n                <Menu.Item key=\"logout\">\n                    <LogoutOutlined/>Log Out\n                </Menu.Item>\n                <Menu.Item key=\"profile\">\n                    <UserOutlined/>Profile\n                </Menu.Item>\n                <Menu.Item key=\"home\">\n                    <HomeOutlined/>Home\n                </Menu.Item>\n            </Menu>\n        </ConfigProvider>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        menuState: state.menuState,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logOut: (values) => dispatch(logOut(values)),\n        changeTab: (values) => dispatch(changeTab(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyMediaMenu);"]},"metadata":{},"sourceType":"module"}