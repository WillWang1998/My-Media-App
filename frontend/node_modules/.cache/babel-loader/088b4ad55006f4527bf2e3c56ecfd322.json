{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/ImageWall.js\",\n    _s = $RefreshSig$();\n\n// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, { useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Modal, Upload } from \"antd\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n};\n\nconst ImagesWall = props => {\n  _s();\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n  const [fileList, setFileList] = useState(props.imageUrlsList ? props.imageUrlsList.map(item => {\n    let fileName = item.split(\"/\").slice(-1)[0];\n    let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n    return {\n      uid: fileUid,\n      name: fileName,\n      status: 'done',\n      url: item\n    };\n  }) : []);\n  EventBus.addEventListener(\"reload_all\", () => {\n    setPreviewImage(\"\");\n    setPreviewTitle(\"\");\n    setImageUrlsList([]);\n    setFileList([]);\n  });\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    console.log(file);\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = ({\n    fileList\n  }) => {\n    setFileList(fileList);\n    let curImageUrlsList = [];\n\n    for (let file of fileList) {\n      console.log(\"file\", file);\n      curImageUrlsList.push(file.url || file.response.url);\n    }\n\n    setImageUrlsList(curImageUrlsList);\n    props.action(imageUrlsList);\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      action: \"http://localhost:4000/upload/image\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: handlePreview,\n      onChange: handleChange,\n      children: fileList.length >= 8 ? null : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesWall, \"3TlJRpYARTLYkjbon8k/gUcOjfU=\");\n\n_c = ImagesWall;\nexport default ImagesWall;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesWall\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/ImageWall.js"],"names":["React","useState","PlusOutlined","Modal","Upload","EventBus","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ImagesWall","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","imageUrlsList","setImageUrlsList","fileList","setFileList","map","item","fileName","split","slice","fileUid","join","uid","name","status","url","addEventListener","handleCancel","handlePreview","preview","originFileObj","console","log","substring","lastIndexOf","handleChange","curImageUrlsList","push","response","action","uploadButton","marginTop","length","width"],"mappings":"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","sourcesContent":["// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, {useState} from \"react\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {Modal, Upload} from \"antd\";\nimport EventBus from \"../util/EventBus\";\n\n\nconst getBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst ImagesWall = (props) => {\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState(\"\");\n    const [previewTitle, setPreviewTitle] = useState(\"\");\n    const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n    const [fileList, setFileList] = useState(\n        props.imageUrlsList ?\n            props.imageUrlsList.map((item) => {\n                let fileName = item.split(\"/\").slice(-1)[0];\n                let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n                return {\n                    uid: fileUid,\n                    name: fileName,\n                    status: 'done',\n                    url: item,\n                }\n            }) :\n            []\n    );\n\n    EventBus.addEventListener(\"reload_all\", () => {\n        setPreviewImage(\"\");\n        setPreviewTitle(\"\");\n        setImageUrlsList([]);\n        setFileList([]);\n    });\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = async (file) => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n\n        console.log(file);\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n        setPreviewTitle(\n            file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n        );\n    };\n\n    const handleChange = ({ fileList }) => {\n        setFileList(fileList);\n        let curImageUrlsList = [];\n        for (let file of fileList) {\n            console.log(\"file\", file);\n            curImageUrlsList.push(file.url || file.response.url);\n        }\n        setImageUrlsList(curImageUrlsList);\n        props.action(imageUrlsList);\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Upload\n                action=\"http://localhost:4000/upload/image\"\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n            >\n                {fileList.length >= 8 ? null : uploadButton}\n            </Upload>\n            <Modal\n                visible={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n};\n\nexport default ImagesWall;\n"]},"metadata":{},"sourceType":"module"}