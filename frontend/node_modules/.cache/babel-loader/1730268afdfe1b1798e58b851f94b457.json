{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Menu, ConfigProvider, message } from 'antd';\nimport { HomeOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Sticky from 'react-stickynode';\nimport { showBackendMessage } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyMediaMenu = () => {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  const curPath = location.pathname.slice(1);\n\n  const onSelect = async info => {\n    if (curPath !== info.key) {\n      if (info.key === \"logout\") {\n        await fetch(\"http://localhost:4000/logout\", {\n          method: \"PUT\",\n          credentials: \"include\"\n        }).then(res => {\n          if (res.ok) {\n            showBackendMessage().then();\n            return res.json();\n          } else {\n            throw res.statusText;\n          }\n        }).then(() => {\n          history.push({\n            pathname: \"/landing\"\n          });\n          EventBus.dispatchEvent(\"clear_all_states\");\n        }).catch(err => message.config({\n          rtl: false\n        }).error(err, 1));\n      } else if (info.key === \"profile\") {\n        history.push({\n          pathname: \"/profile\"\n        });\n      } else {\n        history.push({\n          pathname: \"/home\"\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sticky, {\n    innerZ: \"1\",\n    children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n      direction: \"rtl\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        theme: \"dark\",\n        mode: \"horizontal\",\n        onSelect: onSelect,\n        selectedKeys: [curPath],\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), \"Log Out\"]\n        }, \"logout\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), \"Profile\"]\n        }, \"profile\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(HomeOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \"Home\"]\n        }, \"home\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyMediaMenu, \"4MA4xKwbe/GsHm2ZZQRFLsGTqdU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = MyMediaMenu;\nexport default MyMediaMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMediaMenu\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Menu.js"],"names":["React","Menu","ConfigProvider","message","HomeOutlined","UserOutlined","LogoutOutlined","useHistory","useLocation","Sticky","showBackendMessage","EventBus","MyMediaMenu","location","history","curPath","pathname","slice","onSelect","info","key","fetch","method","credentials","then","res","ok","json","statusText","push","dispatchEvent","catch","err","config","rtl","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Menu, ConfigProvider, message} from 'antd';\nimport {\n    HomeOutlined,\n    UserOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport Sticky from 'react-stickynode';\nimport {showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst MyMediaMenu = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const curPath = location.pathname.slice(1);\n    const onSelect = async (info) => {\n        if (curPath !== info.key) {\n            if (info.key === \"logout\") {\n                await fetch(\"http://localhost:4000/logout\", {\n                    method: \"PUT\",\n                    credentials: \"include\",\n                }).then(res => {\n                    if (res.ok) {\n                        showBackendMessage().then();\n                        return res.json();\n                    } else {\n                        throw res.statusText;\n                    }\n                }).then(() => {\n                    history.push({\n                        pathname: \"/landing\",\n                    });\n                    EventBus.dispatchEvent(\"clear_all_states\");\n                }).catch(err => message.config({rtl: false,}).error(err, 1));\n            } else if (info.key === \"profile\") {\n                history.push({\n                    pathname: \"/profile\",\n                });\n            } else {\n                history.push({\n                    pathname: \"/home\",\n                })\n            }\n        }\n    }\n\n    return (\n        <Sticky innerZ=\"1\">\n            <ConfigProvider direction=\"rtl\">\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    onSelect={onSelect}\n                    selectedKeys={[curPath]}>\n                    <Menu.Item key=\"logout\">\n                        <LogoutOutlined/>Log Out\n                    </Menu.Item>\n                    <Menu.Item key=\"profile\">\n                        <UserOutlined/>Profile\n                    </Menu.Item>\n                    <Menu.Item key=\"home\">\n                        <HomeOutlined/>Home\n                    </Menu.Item>\n                </Menu>\n            </ConfigProvider>\n        </Sticky>\n    )\n}\n\nexport default MyMediaMenu;\n"]},"metadata":{},"sourceType":"module"}