{"ast":null,"code":"import _regeneratorRuntime from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// TODO: Uploader animation\nimport React,{useEffect,useState}from\"react\";import{beforeUpload,showBackendMessage}from\"../util/Functions\";import EventBus from\"../util/EventBus\";import{LoadingOutlined,PlusOutlined}from\"@ant-design/icons\";import{Button,message,Upload,Space,Row}from\"antd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AvatarUploader=function AvatarUploader(){message.config({rtl:false});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),imageUrl=_useState4[0],setImageUrl=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),uploaded=_useState6[0],setUploaded=_useState6[1];var load=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:4000/avatar\",{method:\"GET\",credentials:\"include\"}).then(function(res){if(res.ok){showBackendMessage();return res.json();}else{throw res.statusText;}}).then(function(res){setImageUrl(res.avatar);}).catch(function(err){return message.error(err,1);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function load(){return _ref.apply(this,arguments);};}();useEffect(function(){return load();},[]);EventBus.addEventListener(\"reload_avatar_uploader\",load);var handleChange=function handleChange(info){if(info.file.status==='uploading'){setLoading(true);return;}if(info.file.status==='done'){setImageUrl(info.file.response.url);setLoading(false);setUploaded(true);}};var uploadButton=/*#__PURE__*/_jsxs(\"div\",{children:[loading?/*#__PURE__*/_jsx(LoadingOutlined,{}):/*#__PURE__*/_jsx(PlusOutlined,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:8},children:\"Upload\"})]});var update=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!uploaded){_context2.next=3;break;}_context2.next=3;return fetch(\"http://localhost:4000/avatar\",{method:\"PUT\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({avatar:imageUrl})}).then(function(res){if(res.ok){showBackendMessage();return res.json();}else{throw res.statusText;}}).then(function(){message.success(\"Update successfully!\",1);EventBus.dispatchEvent(\"reload_min_profile\");EventBus.dispatchEvent(\"reload_articles\");}).catch(function(err){return message.error(err,1);});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function update(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Row,{justify:\"center\",children:/*#__PURE__*/_jsxs(Space,{align:\"center\",direction:\"vertical\",children:[/*#__PURE__*/_jsx(Upload,{name:\"avatar\",listType:\"picture-card\",className:\"avatar-uploader\",showUploadList:false,action:\"http://localhost:4000/upload/avatar\",withCredentials:true,beforeUpload:beforeUpload,onChange:handleChange,children:imageUrl?/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:\"avatar\",style:{width:'100%'}}):uploadButton}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:update,children:\"Click the avatar to upload a new one, and then click here to submit the update.\"})]})});};export default AvatarUploader;","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/AvatarUploader.js"],"names":["React","useEffect","useState","beforeUpload","showBackendMessage","EventBus","LoadingOutlined","PlusOutlined","Button","message","Upload","Space","Row","AvatarUploader","config","rtl","loading","setLoading","imageUrl","setImageUrl","uploaded","setUploaded","load","fetch","method","credentials","then","res","ok","json","statusText","avatar","catch","err","error","addEventListener","handleChange","info","file","status","response","url","uploadButton","marginTop","update","headers","body","JSON","stringify","success","dispatchEvent","width"],"mappings":"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","sourcesContent":["// TODO: Uploader animation\nimport React, {useEffect, useState} from \"react\";\nimport {beforeUpload, showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport {LoadingOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {Button, message, Upload, Space, Row} from \"antd\";\n\nconst AvatarUploader = () => {\n\n    message.config({\n        rtl: false,\n    })\n\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploaded, setUploaded] = useState(false);\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/avatar\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setImageUrl(res.avatar);\n        }).catch(err => message.error(err, 1));\n    };\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setImageUrl(info.file.response.url);\n            setLoading(false);\n            setUploaded(true);\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    const update = async () => {\n        if (uploaded) {\n            await fetch(\"http://localhost:4000/avatar\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    avatar: imageUrl,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => {\n                message.success(\"Update successfully!\", 1);\n                EventBus.dispatchEvent(\"reload_min_profile\");\n                EventBus.dispatchEvent(\"reload_articles\");\n            }).catch(err => message.error(err, 1));\n        }\n    };\n\n    return (\n        <Row justify=\"center\">\n            <Space align=\"center\" direction=\"vertical\">\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"http://localhost:4000/upload/avatar\"\n                    withCredentials={true}\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    {imageUrl ? (\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\n                    ) : (\n                        uploadButton\n                    )}\n                </Upload>\n                <Button type=\"primary\" onClick={update}>\n                    Click the avatar to upload a new one, and then click here to submit the update.\n                </Button>\n            </Space>\n        </Row>\n    );\n};\n\nexport default AvatarUploader;\n"]},"metadata":{},"sourceType":"module"}