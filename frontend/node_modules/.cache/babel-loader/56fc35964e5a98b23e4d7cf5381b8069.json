{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/Followings.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { Card, List, Input, Divider, message } from \"antd\";\nimport { showBackendMessage, stringArrayEqual } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport Following from \"./Following\";\nimport { CloseCircleOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Followings = () => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const [followings, setFollowings] = useState([]);\n  const [searchUserList, setSearchUserList] = useState([]);\n  const [showSearchUserList, setShowSearchUserList] = useState(false);\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/following\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      console.log(\"followings load res\", res);\n      console.log(\"res.followings.reverse()\", res.followings.reverse());\n      setFollowings(followings => res.followings);\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n\n  const showSearchResult = async value => {\n    if (value === \"\") {\n      setShowSearchUserList(false);\n      setSearchUserList([]);\n    } else {\n      setShowSearchUserList(true);\n      await fetch(\"http://localhost:4000/following/search\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          keyWord: value\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(res => {\n        console.log(\"res\", res);\n        setSearchUserList(searchUserList => res.searchResult);\n      }).catch(err => message.error(err, 1));\n    }\n  };\n\n  const addNewFollowing = value => async () => {\n    await fetch(\"http://localhost:4000/following/\" + value, {\n      method: \"PUT\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      console.log(\"addNewFollowing res\", value, res);\n      message.success(\"Added a new following user\");\n      setFollowings(followings => res.followings);\n      setSearchUserList(searchUserList => searchUserList.filter(item => item !== value));\n      EventBus.dispatchEvent(\"reload_articles\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const deleteFollowing = value => async () => {\n    await fetch(\"http://localhost:4000/following/\" + value, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(() => {\n      message.success(\"Delete a followed user\");\n      setFollowings(followings => followings.filter(item => item !== value));\n      EventBus.dispatchEvent(\"reload_articles\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const MemoList = props => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      dataSource: props.userList,\n      renderItem: item => /*#__PURE__*/_jsxDEV(Following, {\n        username: item,\n        action: props.action,\n        actionSymbol: props.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 39\n      }, this),\n      pagination: {\n        position: \"bottom\",\n        pageSize: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n\n  const areEqualMemoList = (prevProps, nextProps) => {\n    return stringArrayEqual(prevProps.commentIdList, nextProps.commentIdList);\n  };\n\n  /*#__PURE__*/\n  memo(MemoList, areEqualMemoList);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: \"My followings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input.Search, {\n      allowClear: true,\n      enterButton: \"Search\",\n      size: \"large\",\n      onSearch: showSearchResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: !showSearchUserList,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bordered: true,\n        children: /*#__PURE__*/_jsxDEV(MemoList, {\n          userList: searchUserList,\n          symbol: /*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 65\n          }, this),\n          action: addNewFollowing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MemoList, {\n      userList: followings,\n      symbol: /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 53\n      }, this),\n      action: deleteFollowing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Followings, \"5tczo9+O4r2q1Urk31IotbWM1Gk=\");\n\n_c = Followings;\nexport default Followings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Followings\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/Followings.js"],"names":["React","memo","useEffect","useState","Card","List","Input","Divider","message","showBackendMessage","stringArrayEqual","EventBus","Following","CloseCircleOutlined","PlusCircleOutlined","Followings","config","rtl","followings","setFollowings","searchUserList","setSearchUserList","showSearchUserList","setShowSearchUserList","load","fetch","method","credentials","then","res","ok","json","statusText","console","log","reverse","catch","err","error","showSearchResult","value","headers","body","JSON","stringify","keyWord","searchResult","addNewFollowing","success","filter","item","dispatchEvent","deleteFollowing","MemoList","props","userList","action","symbol","position","pageSize","areEqualMemoList","prevProps","nextProps","commentIdList"],"mappings":"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","sourcesContent":["import React, {memo, useEffect, useState} from \"react\";\nimport {Card, List, Input, Divider, message} from \"antd\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport Following from \"./Following\";\nimport {CloseCircleOutlined, PlusCircleOutlined} from \"@ant-design/icons\";\n\nconst Followings = () => {\n\n    message.config({\n        rtl: false,\n    });\n    const [followings, setFollowings] = useState([]);\n    const [searchUserList, setSearchUserList] = useState([]);\n    const [showSearchUserList, setShowSearchUserList] = useState(false);\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/following\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            console.log(\"followings load res\", res);\n            console.log(\"res.followings.reverse()\", res.followings.reverse());\n            setFollowings(followings => res.followings);\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const showSearchResult = async (value) => {\n        if (value === \"\") {\n            setShowSearchUserList(false);\n            setSearchUserList([]);\n        } else {\n            setShowSearchUserList(true);\n            await fetch(\"http://localhost:4000/following/search\", {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    keyWord: value,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                console.log(\"res\", res);\n                setSearchUserList(searchUserList => res.searchResult);\n            }).catch(err => message.error(err, 1));\n        }\n    }\n\n    const addNewFollowing = (value) => async () => {\n        await fetch(\"http://localhost:4000/following/\" + value, {\n            method: \"PUT\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            console.log(\"addNewFollowing res\", value, res);\n            message.success(\"Added a new following user\");\n            setFollowings(followings => res.followings);\n            setSearchUserList(searchUserList => searchUserList.filter(item => item !== value));\n            EventBus.dispatchEvent(\"reload_articles\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const deleteFollowing = (value) => async () => {\n        await fetch(\"http://localhost:4000/following/\" + value, {\n            method: \"DELETE\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            message.success(\"Delete a followed user\");\n            setFollowings(followings => followings.filter(item => item !== value));\n            EventBus.dispatchEvent(\"reload_articles\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const MemoList = (props) => {\n        return (\n            <List\n                dataSource={props.userList}\n                renderItem={(item) => <Following\n                    username={item}\n                    action={props.action}\n                    actionSymbol={props.symbol}\n                />}\n                pagination={{\n                    position: \"bottom\",\n                    pageSize: 5\n                }}\n            />\n        )\n    }\n\n    const areEqualMemoList = (prevProps, nextProps) => {\n        return stringArrayEqual(prevProps.commentIdList, nextProps.commentIdList);\n    }\n\n    memo(MemoList, areEqualMemoList);\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">My followings</Divider>\n            <Input.Search\n                allowClear\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={showSearchResult}\n            />\n            <div hidden={!showSearchUserList}>\n                <Card bordered={true}>\n                    <MemoList userList={searchUserList} symbol={<PlusCircleOutlined />} action={addNewFollowing}/>\n                </Card>\n            </div>\n            <MemoList userList={followings} symbol={<CloseCircleOutlined />} action={deleteFollowing}/>\n        </Card>\n    )\n}\n\nexport default Followings;\n"]},"metadata":{},"sourceType":"module"}