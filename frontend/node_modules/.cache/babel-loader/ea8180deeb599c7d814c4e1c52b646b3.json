{"ast":null,"code":"import _slicedToArray from\"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Card,Divider,Input,List,Comment}from\"antd\";import{connect}from\"react-redux\";import{EditOutlined,MessageOutlined}from\"@ant-design/icons\";import Avatar from\"antd/es/avatar/avatar\";import{search as _search}from\"../actions\";// TODO: Real Comments\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Posts=function Posts(props){var onSearch=function onSearch(value){props.search({searchWord:value});};var Post=function Post(propsPost){propsPost=propsPost.propsPost;// ???\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),showComments=_useState2[0],setShowComments=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(List.Item,{actions:propsPost.userName===props.userName?[/*#__PURE__*/_jsxs(Button,{type:\"link\",children:[/*#__PURE__*/_jsx(EditOutlined,{}),\"Edit\"]}),/*#__PURE__*/_jsxs(Button,{type:\"link\",onClick:function onClick(){return setShowComments(!showComments);},children:[/*#__PURE__*/_jsx(MessageOutlined,{}),\"Comment\"]})]:[/*#__PURE__*/_jsxs(Button,{type:\"link\",onClick:function onClick(){return setShowComments(!showComments);},children:[/*#__PURE__*/_jsx(MessageOutlined,{}),\"Comment\"]})],extra:propsPost.image?/*#__PURE__*/_jsx(\"img\",{src:propsPost.image,alt:propsPost.title}):/*#__PURE__*/_jsx(_Fragment,{}),children:[/*#__PURE__*/_jsx(List.Item.Meta,{avatar:/*#__PURE__*/_jsx(Avatar,{src:propsPost.avatar}),title:propsPost.title,description:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:propsPost.userName}),\", \",/*#__PURE__*/_jsx(\"span\",{children:new Date(propsPost.timestamp).toLocaleString()})]})}),propsPost.body]},propsPost.title),/*#__PURE__*/_jsxs(\"div\",{hidden:showComments,children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(List,{header:\"\".concat(propsPost.comments.length,\" replies\"),itemLayout:\"horizontal\",dataSource:propsPost.comments,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Comment,{author:item.author,avatar:item.avatar,content:item.content})});}}),/*#__PURE__*/_jsx(Input.Search,{allowClear:true,enterButton:\"Comment\"})]}),/*#__PURE__*/_jsx(Divider,{})]})]});};return/*#__PURE__*/_jsxs(Card,{bordered:true,children:[/*#__PURE__*/_jsx(Input.Search,{defaultValue:props.searchWord,allowClear:true,enterButton:\"Search\",size:\"large\",onSearch:onSearch}),/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"Posts\"}),/*#__PURE__*/_jsx(List,{itemLayout:\"vertical\",size:\"large\",dataSource:props.selectedPosts,renderItem:function renderItem(item){return/*#__PURE__*/_jsx(Post,{propsPost:item});}})]});};var mapStateToProps=function mapStateToProps(state){return{selectedPosts:state.selectedPosts,userName:state.userName,searchWord:state.searchWord};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{search:function search(values){return dispatch(_search(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Posts.js"],"names":["React","useState","Button","Card","Divider","Input","List","Comment","connect","EditOutlined","MessageOutlined","Avatar","search","Posts","props","onSearch","value","searchWord","Post","propsPost","showComments","setShowComments","userName","image","title","avatar","Date","timestamp","toLocaleString","body","comments","length","item","author","content","selectedPosts","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Card, Divider, Input, List, Comment} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {EditOutlined, MessageOutlined} from \"@ant-design/icons\";\nimport Avatar from \"antd/es/avatar/avatar\";\nimport {search} from \"../actions\";\n\n// TODO: Real Comments\n\nconst Posts = (props) => {\n\n    const onSearch = (value) => {\n        props.search({\n            searchWord: value\n        });\n    }\n\n    const Post = (propsPost) => {\n        propsPost = propsPost.propsPost; // ???\n        const [showComments, setShowComments] = useState(true);\n\n        return (\n            <div>\n                <List.Item\n                    key={propsPost.title}\n                    actions={\n                        propsPost.userName === props.userName ? [\n                            <Button type=\"link\">\n                                <EditOutlined/>Edit\n                            </Button>,\n                            <Button type=\"link\" onClick={() => setShowComments(!showComments)}>\n                                <MessageOutlined/>Comment\n                            </Button>,\n                        ] : [\n                            <Button type=\"link\" onClick={() => setShowComments(!showComments)}>\n                                <MessageOutlined/>Comment\n                            </Button>,\n                        ]\n                    }\n                    extra={\n                        propsPost.image ?\n                            <img src={propsPost.image} alt={propsPost.title}/> :\n                            <></>\n                    }\n                >\n                    <List.Item.Meta\n                        avatar={<Avatar src={propsPost.avatar}/>}\n                        title={propsPost.title}\n                        description={\n                            <div>\n                                <span>\n                                    {propsPost.userName}\n                                </span>\n                                , <span>\n                                    {(new Date(propsPost.timestamp)).toLocaleString()}\n                                </span>\n                            </div>\n                        }/>\n                    {propsPost.body}\n                </List.Item>\n                <div hidden={showComments}>\n                    <Card>\n                        <List\n                            header={`${propsPost.comments.length} replies`}\n                            itemLayout=\"horizontal\"\n                            dataSource={propsPost.comments}\n                            renderItem={item => (\n                                <li>\n                                    <Comment\n                                        author={item.author}\n                                        avatar={item.avatar}\n                                        content={item.content}\n                                    />\n                                </li>\n                            )}\n                        />\n                        <Input.Search\n                            allowClear\n                            enterButton=\"Comment\"/>\n                    </Card>\n                    <Divider/>\n                </div>\n\n            </div>\n        );\n    }\n\n    return (\n        <Card bordered={true}>\n            <Input.Search\n                defaultValue={props.searchWord}\n                allowClear\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={onSearch}\n            />\n            <Divider orientation=\"left\">Posts</Divider>\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={props.selectedPosts}\n                renderItem={item => <Post propsPost={item}/>}\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedPosts: state.selectedPosts,\n        userName: state.userName,\n        searchWord: state.searchWord,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        search: (values) => dispatch(search(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}