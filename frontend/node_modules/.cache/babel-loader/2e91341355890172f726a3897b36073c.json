{"ast":null,"code":"import _slicedToArray from\"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Avatar,Card,Input,Button,Space,Divider}from\"antd\";import{CheckOutlined,EditOutlined}from\"@ant-design/icons\";import{connect}from\"react-redux\";import{updateStatus as _updateStatus}from\"../actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MinProfile=function MinProfile(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),editing=_React$useState2[0],setEditing=_React$useState2[1];var _React$useState3=React.useState(props.status),_React$useState4=_slicedToArray(_React$useState3,2),status=_React$useState4[0],setStatus=_React$useState4[1];return/*#__PURE__*/_jsxs(Card,{bordered:true,children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"Me\"}),/*#__PURE__*/_jsx(Card.Meta,{avatar:/*#__PURE__*/_jsx(Avatar,{src:props.avatar}),title:props.userName,description:/*#__PURE__*/_jsxs(Space,{size:0,children:[/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:function onClick(){if(editing){setEditing(false);props.updateStatus({status:status});}else{setEditing(true);}},children:editing?/*#__PURE__*/_jsx(CheckOutlined,{}):/*#__PURE__*/_jsx(EditOutlined,{})}),editing?/*#__PURE__*/_jsx(Input,{value:status,onChange:function onChange(e){setStatus(e.target.value);}}):/*#__PURE__*/_jsx(\"span\",{children:props.status})]})})]});};var mapStateToProps=function mapStateToProps(state){return{avatar:state.avatar,userName:state.userName,status:state.status};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateStatus:function updateStatus(values){return dispatch(_updateStatus(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(MinProfile);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/MinProfile.js"],"names":["React","Avatar","Card","Input","Button","Space","Divider","CheckOutlined","EditOutlined","connect","updateStatus","MinProfile","props","useState","editing","setEditing","status","setStatus","avatar","userName","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,KAAtB,CAA6BC,MAA7B,CAAqCC,KAArC,CAA4CC,OAA5C,KAA0D,MAA1D,CACA,OAAQC,aAAR,CAAuBC,YAAvB,KAA0C,mBAA1C,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,YAAY,GAAZA,CAAAA,aAAR,KAA2B,YAA3B,C,wFAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE1B,oBAA8BZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA,qBAA4Bf,KAAK,CAACa,QAAN,CAAeD,KAAK,CAACI,MAArB,CAA5B,qDAAOA,MAAP,qBAAeC,SAAf,qBAEA,mBACI,MAAC,IAAD,EAAM,QAAQ,CAAE,IAAhB,wBACI,KAAC,OAAD,EAAS,WAAW,CAAC,MAArB,gBADJ,cAEI,KAAC,IAAD,CAAM,IAAN,EACI,MAAM,cAAE,KAAC,MAAD,EAAQ,GAAG,CAAEL,KAAK,CAACM,MAAnB,EADZ,CAEI,KAAK,CAAEN,KAAK,CAACO,QAFjB,CAGI,WAAW,cACP,MAAC,KAAD,EAAO,IAAI,CAAE,CAAb,wBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,OAAO,CAAE,kBAAM,CAC/B,GAAIL,OAAJ,CAAa,CACTC,UAAU,CAAC,KAAD,CAAV,CACAH,KAAK,CAACF,YAAN,CAAmB,CACfM,MAAM,CAAEA,MADO,CAAnB,EAGH,CALD,IAKO,CACHD,UAAU,CAAC,IAAD,CAAV,CACH,CACJ,CATD,UAUKD,OAAO,cACJ,KAAC,aAAD,IADI,cAEJ,KAAC,YAAD,IAZR,EADJ,CAeKA,OAAO,cACJ,KAAC,KAAD,EAAO,KAAK,CAAEE,MAAd,CAAsB,QAAQ,CAAE,kBAACI,CAAD,CAAO,CACnCH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACH,CAFD,EADI,cAIJ,sBAAOV,KAAK,CAACI,MAAb,EAnBR,GAJR,EAFJ,GADJ,CAgCH,CArCD,CAuCA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHN,MAAM,CAAEM,KAAK,CAACN,MADX,CAEHC,QAAQ,CAAEK,KAAK,CAACL,QAFb,CAGHH,MAAM,CAAEQ,KAAK,CAACR,MAHX,CAAP,CAKH,CAND,CAQA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHhB,YAAY,CAAE,sBAACiB,MAAD,QAAYD,CAAAA,QAAQ,CAAChB,aAAY,CAACiB,MAAD,CAAb,CAApB,EADX,CAAP,CAGH,CAJD,CAMA,cAAelB,CAAAA,OAAO,CAACc,eAAD,CAAkBE,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {Avatar, Card, Input, Button, Space, Divider} from \"antd\";\nimport {CheckOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {connect} from \"react-redux\";\nimport {updateStatus} from \"../actions\";\n\n\nconst MinProfile = (props) => {\n\n    const [editing, setEditing] = React.useState(false);\n    const [status, setStatus] = React.useState(props.status);\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">Me</Divider>\n            <Card.Meta\n                avatar={<Avatar src={props.avatar}/>}\n                title={props.userName}\n                description={\n                    <Space size={0}>\n                        <Button type=\"text\" onClick={() => {\n                            if (editing) {\n                                setEditing(false);\n                                props.updateStatus({\n                                    status: status,\n                                })\n                            } else {\n                                setEditing(true);\n                            }\n                        }}>\n                            {editing ?\n                                <CheckOutlined/> :\n                                <EditOutlined/>}\n                        </Button>\n                        {editing ?\n                            <Input value={status} onChange={(e) => {\n                                setStatus(e.target.value);\n                            }}/> :\n                            <span>{props.status}</span>}\n                    </Space>\n                }\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        avatar: state.avatar,\n        userName: state.userName,\n        status: state.status,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateStatus: (values) => dispatch(updateStatus(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MinProfile);\n\n"]},"metadata":{},"sourceType":"module"}