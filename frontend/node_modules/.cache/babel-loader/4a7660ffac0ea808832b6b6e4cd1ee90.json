{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Divider, Input, List } from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport { handleResponse } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Articles = () => {\n  _s();\n\n  const [selectedArticleIds, setSelectedArticleIds] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(res => handleResponse(res)).then(res => {\n      setUsername(res.username);\n      setSelectedArticleIds(res.ids);\n    });\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_articles\", load);\n  EventBus.addEventListener(\"reload_all\", load);\n  EventBus.addEventListener(\"clear_all_states\", () => {\n    setSelectedArticleIds([]);\n  });\n\n  const onSearch = async value => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        keyWord: value\n      })\n    }).then(res => handleResponse(res)).then(res => {\n      setSelectedArticleIds(res.ids);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubmitOrEditArticle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n        allowClear: true,\n        enterButton: \"Search\",\n        size: \"large\",\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        dataSource: selectedArticleIds,\n        renderItem: item => /*#__PURE__*/_jsxDEV(Article, {\n          id: item,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Articles, \"4I/L7nOUr6tXhbXsY4MpYIKW4Hw=\");\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js"],"names":["React","useEffect","useState","Card","Divider","Input","List","Article","SubmitOrEditArticle","handleResponse","EventBus","Articles","selectedArticleIds","setSelectedArticleIds","username","setUsername","load","fetch","method","credentials","then","res","ids","addEventListener","onSearch","value","headers","body","JSON","stringify","keyWord","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Card, Divider, Input, List} from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport {handleResponse} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst Articles = () => {\n    const [selectedArticleIds, setSelectedArticleIds] = useState([]);\n    const [username, setUsername] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n        }).then(res => handleResponse(res)).then(res => {\n            setUsername(res.username);\n            setSelectedArticleIds(res.ids);\n        });\n    }\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_articles\", load);\n    EventBus.addEventListener(\"reload_all\", load);\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setSelectedArticleIds([]);\n    })\n\n    const onSearch = async (value) => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                keyWord: value,\n            })\n        }).then(res => handleResponse(res)).then(res => {\n            setSelectedArticleIds(res.ids);\n        });\n    }\n\n    return (\n        <>\n            <SubmitOrEditArticle/>\n            <Card bordered={true}>\n                <Input.Search\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={onSearch}\n                />\n                <Divider orientation=\"left\">Posts</Divider>\n                <List\n                    itemLayout=\"vertical\"\n                    size=\"large\"\n                    dataSource={selectedArticleIds}\n                    renderItem={item => <Article id={item} username={username}/>}\n                />\n            </Card>\n        </>\n    )\n}\n\nexport default Articles;"]},"metadata":{},"sourceType":"module"}