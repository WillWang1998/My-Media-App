{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Posts.js\";\nimport React, { useState } from \"react\";\nimport { Button, Card, Divider, Input, List, Comment } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { EditOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport Avatar from \"antd/es/avatar/avatar\";\nimport { post, search } from \"../actions\"; // TODO: Real Comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  var _s = $RefreshSig$();\n\n  const onSearch = value => {\n    props.search({\n      searchWord: value\n    });\n  };\n\n  const Post = propsPost => {\n    _s();\n\n    const [listComments, setListComments] = useState(true);\n    console.log(propsPost);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(List.Item, {\n        actions: propsPost.userName === props.userName ? [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          children: [/*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          onClick: () => setListComments(!listComments),\n          children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), \"Comment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)] : [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          onClick: () => setListComments(!listComments),\n          children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), \"Comment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this)],\n        extra: propsPost.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: propsPost.image,\n          alt: propsPost.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n        children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: propsPost.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this),\n          title: propsPost.title,\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: propsPost.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Date(propsPost.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), propsPost.body]\n      }, propsPost.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        hidden: listComments,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          header: `${propsPost.comments.length} replies`,\n          itemLayout: \"horizontal\",\n          dataSource: propsPost.comments,\n          renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.author,\n              avatar: item.avatar,\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input.Search, {\n          allowClear: true,\n          enterButton: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(Post, \"5pUrHc2yYa0DdbZAbiKekL6pZmc=\");\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n      defaultValue: props.searchWord,\n      allowClear: true,\n      enterButton: \"Search\",\n      size: \"large\",\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      dataSource: props.selectedPosts,\n      renderItem: item => Post(item)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Posts;\n\nconst mapStateToProps = state => {\n  return {\n    selectedPosts: state.selectedPosts,\n    userName: state.userName,\n    searchWord: state.searchWord\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    post: values => dispatch(post(values)),\n    search: values => dispatch(search(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Posts.js"],"names":["React","useState","Button","Card","Divider","Input","List","Comment","connect","EditOutlined","MessageOutlined","Avatar","post","search","Posts","props","onSearch","value","searchWord","Post","propsPost","listComments","setListComments","console","log","userName","image","title","avatar","Date","timestamp","toLocaleString","body","comments","length","item","author","content","selectedPosts","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Card, Divider, Input, List, Comment} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {EditOutlined, MessageOutlined} from \"@ant-design/icons\";\nimport Avatar from \"antd/es/avatar/avatar\";\nimport {post, search} from \"../actions\";\n\n// TODO: Real Comments\n\nconst Posts = (props) => {\n\n    const onSearch = (value) => {\n        props.search({\n            searchWord: value\n        });\n    }\n\n    const Post = (propsPost) => {\n        const [listComments, setListComments] = useState(true);\n        console.log(propsPost);\n        return (\n            <div>\n                <List.Item\n                    key={propsPost.title}\n                    actions={\n                        propsPost.userName === props.userName ? [\n                            <Button type=\"link\">\n                                <EditOutlined/>Edit\n                            </Button>,\n                            <Button type=\"link\" onClick={() => setListComments(!listComments)}>\n                                <MessageOutlined/>Comment\n                            </Button>,\n                        ] : [\n                            <Button type=\"link\" onClick={() => setListComments(!listComments)}>\n                                <MessageOutlined/>Comment\n                            </Button>,\n                        ]\n                    }\n                    extra={\n                        propsPost.image ?\n                            <img src={propsPost.image} alt={propsPost.title}/> :\n                            <></>\n                    }\n                >\n                    <List.Item.Meta\n                        avatar={<Avatar src={propsPost.avatar}/>}\n                        title={propsPost.title}\n                        description={\n                            <div>\n                                <span>\n                                    {propsPost.userName}\n                                </span>\n                                , <span>\n                                    {(new Date(propsPost.timestamp)).toLocaleString()}\n                                </span>\n                            </div>\n                        }/>\n                    {propsPost.body}\n                </List.Item>\n                <Card hidden={listComments}>\n                    <List\n                        header={`${propsPost.comments.length} replies`}\n                        itemLayout=\"horizontal\"\n                        dataSource={propsPost.comments}\n                        renderItem={item => (\n                            <li>\n                                <Comment\n                                    author={item.author}\n                                    avatar={item.avatar}\n                                    content={item.content}\n                                />\n                            </li>\n                        )}\n                    />\n                    <Input.Search\n                        allowClear\n                        enterButton=\"Comment\"/>\n                    <Divider/>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <Card bordered={true}>\n            <Input.Search\n                defaultValue={props.searchWord}\n                allowClear\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={onSearch}\n            />\n            <Divider orientation=\"left\">Posts</Divider>\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={props.selectedPosts}\n                renderItem={item => Post(item)}\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedPosts: state.selectedPosts,\n        userName: state.userName,\n        searchWord: state.searchWord,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        post: (values) => dispatch(post(values)),\n        search: (values) => dispatch(search(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}