{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Menu, ConfigProvider } from 'antd';\nimport { HomeOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { changeTab, logOut } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyMediaMenu = props => {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const onSelect = info => {\n    let curPath = location.pathname.slice(1);\n\n    if (curPath !== info.key) {\n      if (info.key === \"logout\") {\n        props.logOut(undefined);\n        history.push({\n          pathname: \"/landing\"\n        });\n      } else if (info.key === \"profile\") {\n        props.changeTab({\n          menuState: \"profile\"\n        });\n        history.push({\n          pathname: \"/profile\"\n        });\n      } else {\n        props.changeTab({\n          menuState: \"home\"\n        });\n        history.push({\n          pathname: \"/home\"\n        });\n      }\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // TODO: Sticky\n    _jsxDEV(ConfigProvider, {\n      direction: \"rtl\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        theme: \"dark\",\n        mode: \"horizontal\",\n        onSelect: onSelect,\n        selectedKeys: [props.menuState],\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), \"Log Out\"]\n        }, \"logout\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), \"Profile\"]\n        }, \"profile\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(HomeOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), \"Home\"]\n        }, \"home\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(MyMediaMenu, \"4MA4xKwbe/GsHm2ZZQRFLsGTqdU=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = MyMediaMenu;\n\nconst mapStateToProps = state => {\n  return {\n    menuState: state.menuState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: values => dispatch(logOut(values)),\n    changeTab: values => dispatch(changeTab(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyMediaMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMediaMenu\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Menu.js"],"names":["React","Menu","ConfigProvider","HomeOutlined","UserOutlined","LogoutOutlined","useHistory","useLocation","changeTab","logOut","connect","MyMediaMenu","props","location","history","onSelect","info","curPath","pathname","slice","key","undefined","push","menuState","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Menu, ConfigProvider} from 'antd';\nimport {\n    HomeOutlined,\n    UserOutlined,\n    LogoutOutlined\n} from '@ant-design/icons';\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {changeTab, logOut} from \"../actions\";\nimport {connect} from \"react-redux\";\n\n\nconst MyMediaMenu = (props) => {\n    const location = useLocation();\n    const history = useHistory();\n    const onSelect = (info) => {\n        let curPath = location.pathname.slice(1);\n        if (curPath !== info.key) {\n            if (info.key === \"logout\") {\n                props.logOut(undefined);\n                history.push({\n                    pathname: \"/landing\",\n                })\n            } else if (info.key === \"profile\") {\n                props.changeTab({\n                    menuState: \"profile\",\n                });\n                history.push({\n                    pathname: \"/profile\",\n                });\n            } else {\n                props.changeTab({\n                    menuState: \"home\",\n                });\n                history.push({\n                    pathname: \"/home\",\n                })\n            }\n        }\n    }\n\n    return (\n        // TODO: Sticky\n        <ConfigProvider direction=\"rtl\">\n            <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                onSelect={onSelect}\n                selectedKeys={[props.menuState]}>\n                <Menu.Item key=\"logout\">\n                    <LogoutOutlined/>Log Out\n                </Menu.Item>\n                <Menu.Item key=\"profile\">\n                    <UserOutlined/>Profile\n                </Menu.Item>\n                <Menu.Item key=\"home\">\n                    <HomeOutlined/>Home\n                </Menu.Item>\n            </Menu>\n        </ConfigProvider>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        menuState: state.menuState,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logOut: (values) => dispatch(logOut(values)),\n        changeTab: (values) => dispatch(changeTab(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyMediaMenu);"]},"metadata":{},"sourceType":"module"}