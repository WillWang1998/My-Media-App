{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Images.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Image } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Images = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      preview: {\n        visible: false\n      },\n      src: props.images[0],\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n        preview: {\n          visible,\n          onVisibleChange: vis => setVisible(vis)\n        },\n        children: props.images.map(item => /*#__PURE__*/_jsxDEV(Image, {\n          src: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Images, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = Images;\n\nconst areEqualImages = (prevProps, nextProps) => {\n  for (let image of prevProps.images) {\n    let index = nextProps.images.indexof(image);\n\n    if (index === -1) {\n      return false;\n    }\n  }\n\n  for (let image of nextProps.images) {\n    let index = prevProps.images.indexof(image);\n\n    if (index === -1) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport default _c2 = /*#__PURE__*/React.memo(Images, areEqualImages);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Images\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Images.js"],"names":["React","useState","Image","Images","props","visible","setVisible","images","display","onVisibleChange","vis","map","item","areEqualImages","prevProps","nextProps","image","index","indexof","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,MAApB;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,sBACI;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,OAAO,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OADb;AAEI,MAAA,GAAG,EAAED,KAAK,CAACG,MAAN,CAAa,CAAb,CAFT;AAGI,MAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,IAAD;AAH7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,6BACI,QAAC,KAAD,CAAO,YAAP;AAAoB,QAAA,OAAO,EAAE;AAAEH,UAAAA,OAAF;AAAWI,UAAAA,eAAe,EAAEC,GAAG,IAAIJ,UAAU,CAACI,GAAD;AAA7C,SAA7B;AAAA,kBACKN,KAAK,CAACG,MAAN,CAAaI,GAAb,CAAiBC,IAAI,iBAAI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAAzB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAcH,CAhBD;;GAAMT,M;;KAAAA,M;;AAkBN,MAAMU,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC7C,OAAK,IAAIC,KAAT,IAAkBF,SAAS,CAACP,MAA5B,EAAoC;AAChC,QAAIU,KAAK,GAAGF,SAAS,CAACR,MAAV,CAAiBW,OAAjB,CAAyBF,KAAzB,CAAZ;;AACA,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,aAAO,KAAP;AACH;AACJ;;AACD,OAAK,IAAID,KAAT,IAAkBD,SAAS,CAACR,MAA5B,EAAoC;AAChC,QAAIU,KAAK,GAAGH,SAAS,CAACP,MAAV,CAAiBW,OAAjB,CAAyBF,KAAzB,CAAZ;;AACA,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAdD;;AAgBA,kCAAejB,KAAK,CAACmB,IAAN,CAAWhB,MAAX,EAAmBU,cAAnB,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Image} from \"antd\";\n\nconst Images = (props) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <>\n            <Image\n                preview={{ visible: false }}\n                src={props.images[0]}\n                onClick={() => setVisible(true)}\n            />\n            <div style={{ display: 'none' }}>\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\n                    {props.images.map(item => <Image src={item} />)}\n                </Image.PreviewGroup>\n            </div>\n        </>\n    );\n}\n\nconst areEqualImages = (prevProps, nextProps) => {\n    for (let image of prevProps.images) {\n        let index = nextProps.images.indexof(image);\n        if (index === -1) {\n            return false\n        }\n    }\n    for (let image of nextProps.images) {\n        let index = prevProps.images.indexof(image);\n        if (index === -1) {\n            return false\n        }\n    }\n    return true;\n}\n\nexport default React.memo(Images, areEqualImages);"]},"metadata":{},"sourceType":"module"}