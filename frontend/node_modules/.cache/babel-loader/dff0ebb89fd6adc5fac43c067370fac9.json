{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { message, Button, Form, Input } from \"antd\";\nimport { formItemLayout, tailFormItemLayout } from '../util/Layout';\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { handleResponse } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogInForm = props => {\n  _s();\n\n  const history = useHistory();\n\n  const onFinish = async values => {\n    await fetch(\"https://localhost:4000/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password\n      })\n    }).then(res => handleResponse(res)).then(() => {\n      EventBus.dispatchEvent(\"reload_all\");\n      history.push({\n        pathname: \"/home\"\n      });\n      message.success(\"Login Successfully!\");\n    }).catch(err => {\n      message.error(err, 1);\n    });\n  };\n\n  const googleLogin = () => {\n    window.location.href = \"https://localhost:4000/auth/google/login\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    name: \"logIn\",\n    autoComplete: \"off\",\n    layout: \"horizontal\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"PasswordSetup\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"default\",\n        htmlType: \"button\",\n        onClick: googleLogin,\n        children: /*#__PURE__*/_jsxDEV(GoogleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogInForm;\nexport default LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/LogInForm.js"],"names":["React","message","Button","Form","Input","formItemLayout","tailFormItemLayout","GoogleOutlined","useHistory","handleResponse","EventBus","LogInForm","props","history","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","username","password","then","res","dispatchEvent","push","pathname","success","catch","err","error","googleLogin","window","location","href","required"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {message, Button, Form, Input} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from '../util/Layout';\nimport {GoogleOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {handleResponse} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\n\nconst LogInForm = (props) => {\n    const history = useHistory();\n\n    const onFinish = async (values) => {\n        await fetch(\"https://localhost:4000/login\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: values.username,\n                password: values.password,\n            }),\n        }).then(res => handleResponse(res)).then(() => {\n            EventBus.dispatchEvent(\"reload_all\");\n            history.push({\n                pathname: \"/home\"\n            });\n            message.success(\"Login Successfully!\");\n        }).catch(err => {\n            message.error(err, 1);\n        });\n    };\n\n    const googleLogin =  () => {\n        window.location.href = \"https://localhost:4000/auth/google/login\";\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"logIn\"\n              autoComplete=\"off\"\n              layout=\"horizontal\"\n              onFinish={onFinish}\n        >\n\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"PasswordSetup\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Log in\n                </Button>\n                <Button type=\"default\" htmlType=\"button\" onClick={googleLogin}>\n                    <GoogleOutlined />\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default LogInForm;"]},"metadata":{},"sourceType":"module"}