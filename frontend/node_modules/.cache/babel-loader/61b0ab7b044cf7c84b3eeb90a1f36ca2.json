{"ast":null,"code":"import { message } from \"antd\";\nimport Cookies from 'js-cookie';\nexport const isLoggedInAsCookie = () => {\n  return !!Cookies.get(\"isLoggedIn\");\n};\nexport const isRegisteringWithGoogle = () => {\n  return !!Cookies.get(\"usernameForGoogle\");\n};\nexport const disabledDate = current => {\n  let nowTime = new Date(Date.now());\n  let nowYear = nowTime.getFullYear(),\n      nowMonth = nowTime.getMonth(),\n      nowDate = nowTime.getDate();\n\n  if (current) {\n    let selectYear = current.year(),\n        selectMonth = current.month(),\n        selectDate = current.date();\n    return nowYear - selectYear < 18 || nowYear - selectYear === 18 && nowMonth < selectMonth || nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate;\n  }\n\n  return false;\n};\nexport const beforeUpload = async file => {\n  const isImage = file.type.split(\"/\")[0] === 'image';\n\n  if (!isImage) {\n    await message.config({\n      rtl: false\n    }).error('You can only upload image!', 1);\n  }\n\n  return isImage;\n};\nexport const showBackendMessage = async () => {\n  let backendMessage = Cookies.get(\"backendMessage\");\n\n  if (backendMessage) {\n    let backendMessageList = backendmessage.config({\n      rtl: false\n    }).split(\"#\");\n\n    if (backendMessageList[0] === \"error\") {\n      message.config({\n        rtl: false\n      }).error(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"success\") {\n      message.config({\n        rtl: false\n      }).success(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"info\") {\n      message.config({\n        rtl: false\n      }).info(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"warning\") {\n      message.config({\n        rtl: false\n      }).warning(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"loading\") {\n      message.config({\n        rtl: false\n      }).loading(backendMessageList[1], 1);\n    }\n\n    Cookies.remove(\"backendMessage\");\n  }\n};","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/util/Functions.js"],"names":["message","Cookies","isLoggedInAsCookie","get","isRegisteringWithGoogle","disabledDate","current","nowTime","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDate","getDate","selectYear","year","selectMonth","month","selectDate","date","beforeUpload","file","isImage","type","split","config","rtl","error","showBackendMessage","backendMessage","backendMessageList","backendmessage","success","info","warning","loading","remove"],"mappings":"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","sourcesContent":["import {message} from \"antd\";\nimport Cookies from 'js-cookie'\n\nexport const isLoggedInAsCookie = () => {\n    return !!Cookies.get(\"isLoggedIn\");\n}\n\nexport const isRegisteringWithGoogle = () => {\n    return !!Cookies.get(\"usernameForGoogle\");\n}\n\nexport const disabledDate = (current) => {\n    let nowTime = new Date(Date.now());\n    let nowYear = nowTime.getFullYear(),\n        nowMonth = nowTime.getMonth(),\n        nowDate = nowTime.getDate();\n    if (current) {\n        let selectYear = current.year(),\n            selectMonth = current.month(),\n            selectDate = current.date();\n        return (nowYear - selectYear < 18)\n            || (nowYear - selectYear === 18 && nowMonth < selectMonth)\n            || (nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate);\n    }\n    return false;\n}\n\nexport const beforeUpload = async (file) => {\n    const isImage = file.type.split(\"/\")[0] === 'image';\n    if (!isImage) {\n        await message.config({rtl: false,}).error('You can only upload image!', 1);\n    }\n    return isImage;\n}\n\nexport const showBackendMessage = async () => {\n    let backendMessage = Cookies.get(\"backendMessage\");\n    if (backendMessage) {\n        let backendMessageList = backendmessage.config({rtl: false,}).split(\"#\");\n        if (backendMessageList[0] === \"error\") {\n            message.config({rtl: false,}).error(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"success\") {\n            message.config({rtl: false,}).success(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"info\") {\n            message.config({rtl: false,}).info(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"warning\") {\n            message.config({rtl: false,}).warning(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"loading\") {\n            message.config({rtl: false,}).loading(backendMessageList[1], 1);\n        }\n        Cookies.remove(\"backendMessage\");\n    }\n}\n"]},"metadata":{},"sourceType":"module"}