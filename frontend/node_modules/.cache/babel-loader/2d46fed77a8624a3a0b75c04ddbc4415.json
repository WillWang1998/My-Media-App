{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Article.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useReducer } from \"react\";\nimport { Avatar, Button, Card, Image, List, message } from \"antd\";\nimport { DeleteOutlined, EditOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport Comments from \"./Comments\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Images = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      preview: {\n        visible: false\n      },\n      src: props[0],\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Image.PreviewGroup, {\n        preview: {\n          visible,\n          onVisibleChange: vis => setVisible(vis)\n        },\n        children: props.map(item => /*#__PURE__*/_jsxDEV(Image, {\n          src: item.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Images, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = Images;\n\nconst Article = props => {\n  _s2();\n\n  const [id, setId] = useState(props.id);\n  const [author, setAuthor] = useState(\"\");\n  const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [hideComments, setHideComments] = useState(true);\n  const [hideEditor, setHideEditor] = useState(true);\n  const [hideArticle, setHideArticle] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [timestamp, setTimeStamp] = useState(\"\");\n  const [complexStates, dispatch] = useReducer((state, action) => {\n    if (action.type === \"setImageUrlList\") {\n      return { ...state,\n        imageUrlList: action.imageUrlList\n      };\n    } else if (action.type === \"setCommentIdList\") {\n      return { ...state,\n        commentIdList: action.commentIdList\n      };\n    } else if (action.type === \"pushFrontCommentIdList\") {\n      let newCommentIdList = [action.newCommentId, ...state.commentIdList];\n      return { ...state,\n        commentIdList: newCommentIdList\n      };\n    }\n  }, {\n    imageUrlList: [],\n    commentIdList: []\n  });\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/article/\" + id, {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(async res => {\n      setAuthor(res.author);\n      setTitle(res.title);\n      setText(res.text);\n      setTimeStamp(new Date(res.timestamp).toLocaleString());\n      dispatch({\n        type: \"setImageUrlList\",\n        imageUrlList: res.imageUrlList\n      });\n      dispatch({\n        type: \"setCommentIdList\",\n        commentIdList: res.commentIdList\n      });\n      console.log(\"title id comments res.commentIdList \", title, \" \", id, \" \", complexStates.commentIdList, \" \", res.commentIdList);\n      await fetch(\"http://localhost:4000/profile/\" + res.username, {\n        method: \"GET\",\n        credentials: \"include\"\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(res => {\n        setAuthorDisplayedName(res.displayedName);\n        setAvatar(res.avatar);\n      });\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n\n  const onDelete = async () => {\n    await fetch(\"http://localhost:4000/article/\" + id, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setHideArticle(true);\n      message.success(\"Delete successfully!\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const onEditArticle = values => {\n    setTitle(values.title);\n    setText(values.text);\n    setTimeStamp(values.timestamp);\n    dispatch({\n      type: \"setImageUrlList\",\n      imageUrlList: values.images\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    hidden: hideArticle,\n    children: [/*#__PURE__*/_jsxDEV(List.Item, {\n      actions: props.username === author ? [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: () => setHideComments(!hideComments),\n        children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), \"Comment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: () => setHideEditor(!hideEditor),\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), \"Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: async () => {\n          setHideComments(true);\n          setHideEditor(true);\n          await onDelete();\n        },\n        children: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }, this)] : [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: () => setHideComments(!hideComments),\n        children: [/*#__PURE__*/_jsxDEV(MessageOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this), \"Comment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this)],\n      extra: complexStates.imageUrlList.length !== 0 ? /*#__PURE__*/_jsxDEV(Images, {\n        images: complexStates.imageUrlList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this),\n        title: title,\n        description: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [authorDisplayedName, \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), text]\n    }, props.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: hideEditor,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"true\",\n        children: /*#__PURE__*/_jsxDEV(SubmitOrEditArticle, {\n          action: onEditArticle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: hideComments,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Comments, {\n          commentIdList: complexStates.commentIdList,\n          articleId: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Article, \"c8TXPgUGFc0R3OVSkQImTMtjMCA=\");\n\n_c2 = Article;\nexport default Article;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Images\");\n$RefreshReg$(_c2, \"Article\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Article.js"],"names":["React","useEffect","useState","useReducer","Avatar","Button","Card","Image","List","message","DeleteOutlined","EditOutlined","MessageOutlined","SubmitOrEditArticle","Comments","showBackendMessage","Images","props","visible","setVisible","display","onVisibleChange","vis","map","item","url","Article","id","setId","author","setAuthor","authorDisplayedName","setAuthorDisplayedName","avatar","setAvatar","hideComments","setHideComments","hideEditor","setHideEditor","hideArticle","setHideArticle","title","setTitle","text","setText","timestamp","setTimeStamp","complexStates","dispatch","state","action","type","imageUrlList","commentIdList","newCommentIdList","newCommentId","load","fetch","method","credentials","then","res","ok","json","statusText","Date","toLocaleString","console","log","username","displayedName","catch","err","error","onDelete","success","onEditArticle","values","images","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useReducer} from \"react\";\nimport {Avatar, Button, Card, Image, List, message} from \"antd\";\nimport {DeleteOutlined, EditOutlined, MessageOutlined} from \"@ant-design/icons\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport Comments from \"./Comments\";\nimport {showBackendMessage} from \"../util/Functions\";\n\nconst Images = (props) => {\n    const [visible, setVisible] = useState(false);\n    return (\n        <>\n            <Image\n                preview={{ visible: false }}\n                src={props[0]}\n                onClick={() => setVisible(true)}\n            />\n            <div style={{ display: 'none' }}>\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\n                    {props.map(item => <Image src={item.url} />)}\n                </Image.PreviewGroup>\n            </div>\n        </>\n    );\n}\n\n\nconst Article = (props) => {\n    const [id, setId] = useState(props.id);\n    const [author, setAuthor] = useState(\"\");\n    const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [hideComments, setHideComments] = useState(true);\n    const [hideEditor, setHideEditor] = useState(true);\n    const [hideArticle, setHideArticle] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [timestamp, setTimeStamp] = useState(\"\");\n\n    const [complexStates, dispatch] = useReducer((state, action) => {\n        if (action.type === \"setImageUrlList\") {\n            return {\n                ...state,\n                imageUrlList: action.imageUrlList,\n            }\n        } else if (action.type === \"setCommentIdList\") {\n            return {\n                ...state,\n                commentIdList: action.commentIdList,\n            }\n        } else if (action.type === \"pushFrontCommentIdList\") {\n            let newCommentIdList = [action.newCommentId, ...state.commentIdList];\n            return {\n                ...state,\n                commentIdList: newCommentIdList,\n            }\n        }\n    }, {\n        imageUrlList: [],\n        commentIdList: [],\n    });\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/article/\" + id, {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(async res => {\n            setAuthor(res.author);\n            setTitle(res.title);\n            setText(res.text);\n            setTimeStamp(new Date(res.timestamp).toLocaleString());\n            dispatch({\n                type: \"setImageUrlList\",\n                imageUrlList: res.imageUrlList,\n            });\n            dispatch({\n                type: \"setCommentIdList\",\n                commentIdList: res.commentIdList,\n            });\n            console.log(\"title id comments res.commentIdList \", title, \" \", id, \" \", complexStates.commentIdList, \" \", res.commentIdList);\n            await fetch(\"http://localhost:4000/profile/\" + res.username, {\n                method: \"GET\",\n                credentials: \"include\",\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                setAuthorDisplayedName(res.displayedName);\n                setAvatar(res.avatar);\n            });\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n\n    const onDelete = async () => {\n        await fetch(\"http://localhost:4000/article/\" + id, {\n            method: \"DELETE\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setHideArticle(true);\n            message.success(\"Delete successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const onEditArticle = (values) => {\n        setTitle(values.title);\n        setText(values.text);\n        setTimeStamp(values.timestamp);\n        dispatch({\n            type: \"setImageUrlList\",\n            imageUrlList: values.images\n        });\n    };\n\n    return (\n        <div hidden={hideArticle}>\n            <List.Item\n                key={props.title}\n                actions={\n                    props.username === author ? [\n                        <Button type=\"link\" onClick={() => setHideComments(!hideComments)}>\n                            <MessageOutlined/>Comment\n                        </Button>,\n                        <Button type=\"link\" onClick={() => setHideEditor(!hideEditor)}>\n                            <EditOutlined/>Edit\n                        </Button>,\n                        <Button type=\"link\" onClick={async () => {\n                            setHideComments(true);\n                            setHideEditor(true);\n                            await onDelete();\n                        }}>\n                            <DeleteOutlined />Delete\n                        </Button>,\n                    ] : [\n                        <Button type=\"link\" onClick={() => setHideComments(!hideComments)}>\n                            <MessageOutlined/>Comment\n                        </Button>,\n                    ]\n                }\n                extra={\n                    complexStates.imageUrlList.length !== 0 ?\n                    <Images images={complexStates.imageUrlList}/> :\n                    <></>\n                }\n            >\n                <List.Item.Meta\n                    avatar={<Avatar src={avatar}/>}\n                    title={title}\n                    description={\n                        <div>\n                            <span>\n                                {authorDisplayedName},\n                            </span>\n                            <span>\n                                {(new Date(timestamp)).toLocaleString()}\n                            </span>\n                        </div>\n                    }/>\n                {text}\n            </List.Item>\n            <div hidden={hideEditor}>\n                <Card border=\"true\">\n                    <SubmitOrEditArticle action={onEditArticle}/>\n                </Card>\n            </div>\n            <div hidden={hideComments}>\n                <Card border=\"true\">\n                    <Comments commentIdList={complexStates.commentIdList} articleId={id}/>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}