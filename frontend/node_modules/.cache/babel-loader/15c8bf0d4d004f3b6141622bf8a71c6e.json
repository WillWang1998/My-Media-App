{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { Card, Divider, Input, List, message } from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport { showBackendMessage, stringArrayEqual } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Articles = () => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const [selectedArticleIds, setSelectedArticleIds] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setUsername(res.username);\n      setSelectedArticleIds(selectedArticleIds => res.ids);\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_articles\", load);\n\n  const onSearch = async value => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        keyWord: value\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setSelectedArticleIds(selectedArticleIds => res.ids);\n    }).catch(err => message.error(err, 1));\n  };\n\n  const onSubmitArticle = id => {\n    let newSelectedArticleIds = [id].concat(selectedArticleIds);\n    setSelectedArticleIds(newSelectedArticleIds);\n  };\n\n  const onDeleteArticle = id => {\n    setSelectedArticleIds(selectedArticleIds => selectedArticleIds.filter(item => item !== id));\n  };\n\n  const ArticleList = props => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      dataSource: props.selectedArticleIds,\n      renderItem: item => /*#__PURE__*/_jsxDEV(Article, {\n        id: item,\n        username: username,\n        deleteAction: onDeleteArticle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }, this),\n      pagination: {\n        position: \"top\",\n        pageSize: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  };\n\n  const areEqualArticleList = (prevProps, nextProps) => {\n    return stringArrayEqual(prevProps.selectedArticleIds, nextProps.selectedArticleIds);\n  };\n\n  /*#__PURE__*/\n  memo(ArticleList, areEqualArticleList);\n  useEffect(() => {}, [selectedArticleIds]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubmitOrEditArticle, {\n      action: onSubmitArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n        allowClear: true,\n        enterButton: \"Search\",\n        size: \"large\",\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArticleList, {\n        selectedArticleIds: selectedArticleIds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Articles, \"RscVo0Qy7AvMeug5z8aZh2XVYl0=\");\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js"],"names":["React","memo","useEffect","useState","Card","Divider","Input","List","message","Article","SubmitOrEditArticle","showBackendMessage","stringArrayEqual","EventBus","Articles","config","rtl","selectedArticleIds","setSelectedArticleIds","username","setUsername","load","fetch","method","credentials","then","res","ok","json","statusText","ids","catch","err","error","addEventListener","onSearch","value","headers","body","JSON","stringify","keyWord","onSubmitArticle","id","newSelectedArticleIds","concat","onDeleteArticle","filter","item","ArticleList","props","position","pageSize","areEqualArticleList","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React, {memo, useEffect, useState} from \"react\";\nimport {Card, Divider, Input, List, message} from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport {showBackendMessage, stringArrayEqual} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst Articles = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const [selectedArticleIds, setSelectedArticleIds] = useState([]);\n    const [username, setUsername] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setUsername(res.username);\n            setSelectedArticleIds(selectedArticleIds => res.ids);\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_articles\", load);\n    const onSearch = async (value) => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                keyWord: value,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setSelectedArticleIds(selectedArticleIds => res.ids);\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onSubmitArticle = (id) => {\n        let newSelectedArticleIds = [id].concat(selectedArticleIds);\n        setSelectedArticleIds(newSelectedArticleIds);\n    }\n\n    const onDeleteArticle = (id) => {\n        setSelectedArticleIds(selectedArticleIds => selectedArticleIds.filter((item) => item !== id));\n    }\n\n    const ArticleList = (props) => {\n        return (\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={props.selectedArticleIds}\n                renderItem={item => <Article id={item} username={username} deleteAction={onDeleteArticle}/>}\n                pagination={{\n                    position: \"top\",\n                    pageSize: 5\n                }}\n            />\n        );\n    }\n\n    const areEqualArticleList = (prevProps, nextProps) => {\n        return stringArrayEqual(prevProps.selectedArticleIds, nextProps.selectedArticleIds);\n    }\n\n    memo(ArticleList, areEqualArticleList);\n\n    useEffect(() => {\n\n    }, [selectedArticleIds]);\n\n    return (\n        <>\n            <SubmitOrEditArticle action={onSubmitArticle}/>\n            <Card bordered={true}>\n                <Input.Search\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={onSearch}\n                />\n                <Divider orientation=\"left\">Posts</Divider>\n                <ArticleList selectedArticleIds={selectedArticleIds}/>\n            </Card>\n        </>\n    )\n}\n\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}