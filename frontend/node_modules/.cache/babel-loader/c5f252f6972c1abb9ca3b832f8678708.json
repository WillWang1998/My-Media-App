{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/AvatarUploader.js\",\n    _s = $RefreshSig$();\n\n// TODO: Uploader animation\nimport React, { useEffect, useState } from \"react\";\nimport { beforeUpload, showBackendMessage } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, message, Upload } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AvatarUploader = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [uploaded, setUploaded] = useState(false);\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/avatar\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setImageUrl(res.avatar);\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      setImageUrl(info.file.url);\n      setLoading(false);\n      setUploaded(true);\n    }\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n\n  const update = async () => {\n    if (uploaded) {\n      await fetch(\"http://localhost:4000/avatar\", {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: imageUrl\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(() => {\n        message.success(\"Update successfully!\", 1);\n        EventBus.dispatchEvent(\"reload_min_profile\");\n        EventBus.dispatchEvent(\"reload_articles\");\n      }).catch(err => message.error(err, 1));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"http://localhost:4000/upload/image\",\n      beforeUpload: beforeUpload,\n      onChange: handleChange,\n      style: {\n        position: \"absolute\",\n        left: \"50%\",\n        transform: \"translate(0, -50%)\"\n      },\n      children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"avatar\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this) : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: update,\n      style: {\n        position: \"absolute\",\n        left: \"50%\",\n        transform: \"translate(0, -50%)\"\n      },\n      children: \"Click here to update the new avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AvatarUploader, \"doavD8pIR+lzV6SidDI0HAVONtM=\");\n\n_c = AvatarUploader;\nexport default AvatarUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarUploader\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/AvatarUploader.js"],"names":["React","useEffect","useState","beforeUpload","showBackendMessage","EventBus","LoadingOutlined","PlusOutlined","Button","message","Upload","AvatarUploader","loading","setLoading","imageUrl","setImageUrl","uploaded","setUploaded","load","fetch","method","credentials","then","res","ok","json","statusText","avatar","catch","err","error","addEventListener","handleChange","info","file","status","url","uploadButton","marginTop","update","headers","body","JSON","stringify","success","dispatchEvent","position","left","transform","width"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,YAAR,EAAsBC,kBAAtB,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAQC,eAAR,EAAyBC,YAAzB,QAA4C,mBAA5C;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,MAAzB,QAAsC,MAAtC;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMgB,IAAI,GAAG,YAAY;AACrB,UAAMC,KAAK,CAAC,8BAAD,EAAiC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,WAAW,EAAE;AAF2B,KAAjC,CAAL,CAGHC,IAHG,CAGEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,EAAR,EAAY;AACRpB,QAAAA,kBAAkB,GAAGkB,IAArB;AACA,eAAOC,GAAG,CAACE,IAAJ,EAAP;AACH,OAHD,MAGO;AACH,cAAMF,GAAG,CAACG,UAAV;AACH;AACJ,KAVK,EAUHJ,IAVG,CAUEC,GAAG,IAAI;AACXR,MAAAA,WAAW,CAACQ,GAAG,CAACI,MAAL,CAAX;AACH,KAZK,EAYHC,KAZG,CAYGC,GAAG,IAAIpB,OAAO,CAACqB,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAZV,CAAN;AAaH,GAdD;;AAeA5B,EAAAA,SAAS,CAAC,MAAMiB,IAAI,EAAX,EAAe,EAAf,CAAT;AACAb,EAAAA,QAAQ,CAAC0B,gBAAT,CAA0B,wBAA1B,EAAoDb,IAApD;;AAEA,QAAMc,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AAClCtB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACH;;AACD,QAAIoB,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC7BpB,MAAAA,WAAW,CAACkB,IAAI,CAACC,IAAL,CAAUE,GAAX,CAAX;AACAvB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GAVD;;AAYA,QAAMoB,YAAY,gBACd;AAAA,eACKzB,OAAO,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADrC,eAEI;AAAK,MAAA,KAAK,EAAE;AAAE0B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,QAAMC,MAAM,GAAG,YAAY;AACvB,QAAIvB,QAAJ,EAAc;AACV,YAAMG,KAAK,CAAC,8BAAD,EAAiC;AACxCC,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,WAAW,EAAE,SAF2B;AAGxCmB,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAH+B;AAIxCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,UAAAA,MAAM,EAAEb;AADS,SAAf;AAJkC,OAAjC,CAAL,CAOHQ,IAPG,CAOEC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,EAAR,EAAY;AACRpB,UAAAA,kBAAkB,GAAGkB,IAArB;AACA,iBAAOC,GAAG,CAACE,IAAJ,EAAP;AACH,SAHD,MAGO;AACH,gBAAMF,GAAG,CAACG,UAAV;AACH;AACJ,OAdK,EAcHJ,IAdG,CAcE,MAAM;AACVb,QAAAA,OAAO,CAACmC,OAAR,CAAgB,sBAAhB,EAAwC,CAAxC;AACAvC,QAAAA,QAAQ,CAACwC,aAAT,CAAuB,oBAAvB;AACAxC,QAAAA,QAAQ,CAACwC,aAAT,CAAuB,iBAAvB;AACH,OAlBK,EAkBHjB,KAlBG,CAkBGC,GAAG,IAAIpB,OAAO,CAACqB,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAlBV,CAAN;AAmBH;AACJ,GAtBD;;AAwBA,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,QAAQ,EAAC,cAFb;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,cAAc,EAAE,KAJpB;AAKI,MAAA,MAAM,EAAC,oCALX;AAMI,MAAA,YAAY,EAAE1B,YANlB;AAOI,MAAA,QAAQ,EAAE6B,YAPd;AAQI,MAAA,KAAK,EAAE;AACHc,QAAAA,QAAQ,EAAE,UADP;AAEHC,QAAAA,IAAI,EAAE,KAFH;AAGHC,QAAAA,SAAS,EAAE;AAHR,OARX;AAAA,gBAcKlC,QAAQ,gBACL;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAoB,QAAA,GAAG,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAE;AAAEmC,UAAAA,KAAK,EAAE;AAAT;AAAxC;AAAA;AAAA;AAAA;AAAA,cADK,GAGLZ;AAjBR;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEE,MAAhC;AAAwC,MAAA,KAAK,EAAE;AAC3CO,QAAAA,QAAQ,EAAE,UADiC;AAE3CC,QAAAA,IAAI,EAAE,KAFqC;AAG3CC,QAAAA,SAAS,EAAE;AAHgC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA,kBADJ;AA+BH,CAjGD;;GAAMrC,c;;KAAAA,c;AAmGN,eAAeA,cAAf","sourcesContent":["// TODO: Uploader animation\nimport React, {useEffect, useState} from \"react\";\nimport {beforeUpload, showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport {LoadingOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {Button, message, Upload} from \"antd\";\n\nconst AvatarUploader = () => {\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploaded, setUploaded] = useState(false);\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/avatar\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setImageUrl(res.avatar);\n        }).catch(err => message.error(err, 1));\n    };\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setImageUrl(info.file.url);\n            setLoading(false);\n            setUploaded(true);\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    const update = async () => {\n        if (uploaded) {\n            await fetch(\"http://localhost:4000/avatar\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    avatar: imageUrl,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => {\n                message.success(\"Update successfully!\", 1);\n                EventBus.dispatchEvent(\"reload_min_profile\");\n                EventBus.dispatchEvent(\"reload_articles\");\n            }).catch(err => message.error(err, 1));\n        }\n    };\n\n    return (\n        <>\n            <Upload\n                name=\"avatar\"\n                listType=\"picture-card\"\n                className=\"avatar-uploader\"\n                showUploadList={false}\n                action=\"http://localhost:4000/upload/image\"\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n                style={{\n                    position: \"absolute\",\n                    left: \"50%\",\n                    transform: \"translate(0, -50%)\"\n                }}\n            >\n                {imageUrl ? (\n                    <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\n                ) : (\n                    uploadButton\n                )}\n            </Upload>\n            <Button type=\"primary\" onClick={update} style={{\n                position: \"absolute\",\n                left: \"50%\",\n                transform: \"translate(0, -50%)\"\n            }}>\n                Click here to update the new avatar\n            </Button>\n        </>\n    );\n};\n\nexport default AvatarUploader;\n"]},"metadata":{},"sourceType":"module"}