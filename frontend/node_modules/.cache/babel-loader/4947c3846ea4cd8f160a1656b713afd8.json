{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { message, Button, Form, Input, Space } from \"antd\";\nimport { formItemLayout, tailFormItemLayout } from '../util/Layout';\nimport { GoogleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogInForm = () => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const history = useHistory();\n\n  const onFinish = async values => {\n    await fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: values.username,\n        password: values.password\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(() => {\n      history.push({\n        pathname: \"/home\"\n      });\n      message.config({\n        rtl: false\n      });\n      message.success(\"Login Successfully!\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const googleLogin = () => {\n    window.location.href = \"http://localhost:4000/auth/google\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    name: \"logIn\",\n    autoComplete: \"off\",\n    layout: \"horizontal\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        size: 8,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          htmlType: \"button\",\n          onClick: googleLogin,\n          children: [\"Log in with \", /*#__PURE__*/_jsxDEV(GoogleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogInForm;\nexport default LogInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/LogInForm.js"],"names":["React","message","Button","Form","Input","Space","formItemLayout","tailFormItemLayout","GoogleOutlined","useHistory","showBackendMessage","LogInForm","config","rtl","history","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","username","password","then","res","ok","json","statusText","push","pathname","success","catch","err","error","googleLogin","window","location","href","required"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {message, Button, Form, Input, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from '../util/Layout';\nimport {GoogleOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst LogInForm = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const history = useHistory();\n\n    const onFinish = async (values) => {\n        await fetch(\"http://localhost:4000/login\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: values.username,\n                password: values.password,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            history.push({\n                pathname: \"/home\"\n            });\n            message.config({\n                rtl: false,\n            });\n            message.success(\"Login Successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const googleLogin =  () => {\n        window.location.href = \"http://localhost:4000/auth/google\";\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"logIn\"\n              autoComplete=\"off\"\n              layout=\"horizontal\"\n              onFinish={onFinish}\n        >\n\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                    <Button type=\"default\" htmlType=\"button\" onClick={googleLogin}>\n                        Log in with <GoogleOutlined />\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default LogInForm;"]},"metadata":{},"sourceType":"module"}