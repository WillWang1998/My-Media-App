{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/MinProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, Card, Input, Button, Space, Divider, message } from \"antd\";\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MinProfile = () => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [headline, setHeadline] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [displayedName, setDisplayedName] = useState(\"\");\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setHeadline(res.headline);\n      setAvatar(res.avatar);\n      console.log(\"avatar\", avatar);\n      setDisplayedName(res.displayed_name);\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_min_profile\", load);\n  EventBus.addEventListener(\"clear_all_states\", () => {\n    setAvatar(\"\");\n    setDisplayedName(\"\");\n    setHeadline(\"\");\n  });\n  EventBus.addEventListener(\"reload_all\", load);\n\n  const onClick = async values => {\n    if (editing) {\n      setEditing(false);\n      await fetch(\"http://localhost:4000/headline\", {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          headline: headline\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(() => EventBus.dispatchEvent(\"reload_profile\")).catch(err => message.error(err, 1));\n    } else {\n      setEditing(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: \"Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this),\n      title: displayedName,\n      description: /*#__PURE__*/_jsxDEV(Space, {\n        size: 0,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          onClick: onClick,\n          children: [\" \", editing ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), \" \", editing ? /*#__PURE__*/_jsxDEV(Input, {\n          value: headline,\n          onChange: e => {\n            setHeadline(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: headline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MinProfile, \"F3zcRcqW/9+VYak5TJUJAdhy8G4=\");\n\n_c = MinProfile;\nexport default MinProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinProfile\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/MinProfile.js"],"names":["React","useEffect","useState","Avatar","Card","Input","Button","Space","Divider","message","CheckOutlined","EditOutlined","showBackendMessage","EventBus","MinProfile","editing","setEditing","headline","setHeadline","avatar","setAvatar","displayedName","setDisplayedName","load","fetch","method","credentials","then","res","ok","json","statusText","console","log","displayed_name","catch","err","error","addEventListener","onClick","values","headers","body","JSON","stringify","dispatchEvent","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Avatar, Card, Input, Button, Space, Divider, message} from \"antd\";\nimport {CheckOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst MinProfile = () => {\n    const [editing, setEditing] = useState(false);\n    const [headline, setHeadline] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [displayedName, setDisplayedName] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/profile\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setHeadline(res.headline);\n            setAvatar(res.avatar);\n            console.log(\"avatar\", avatar);\n            setDisplayedName(res.displayed_name);\n        }).catch(err => message.error(err, 1));\n    };\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_min_profile\", load);\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setAvatar(\"\");\n        setDisplayedName(\"\");\n        setHeadline(\"\");\n    });\n    EventBus.addEventListener(\"reload_all\", load);\n\n    const onClick = async (values) => {\n        if (editing) {\n            setEditing(false);\n            await fetch(\"http://localhost:4000/headline\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    headline: headline,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => EventBus.dispatchEvent(\"reload_profile\"))\n                .catch(err => message.error(err, 1));\n        } else {\n            setEditing(true);\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">Me</Divider>\n            <Card.Meta\n                avatar={<Avatar src={avatar}/>}\n                title={displayedName}\n                description={\n                    <Space size={0}>\n                        <Button type=\"text\" onClick={onClick}> {\n                            editing ? <CheckOutlined/> : <EditOutlined/>\n                        }\n                        </Button> {\n                            editing ? <Input value={headline} onChange={(e) => {\n                                setHeadline(e.target.value);\n                            }}/> :\n                            <span>{headline}</span>}\n                    </Space>\n                }\n            />\n        </Card>\n    )\n}\n\nexport default MinProfile;\n"]},"metadata":{},"sourceType":"module"}