{"ast":null,"code":"import { message } from \"antd\";\nexport const isLoggedInAsCookie = () => {\n  console.log(\"cookie\", document.cookie);\n  console.log(!!getCookie(\"login\"));\n  return !!getCookie(\"login\");\n};\nexport const isRegisteringWithGoogle = () => {\n  return !!getCookie(\"googleToken\");\n};\nexport const disabledDate = current => {\n  let nowTime = new Date(Date.now());\n  let nowYear = nowTime.getFullYear(),\n      nowMonth = nowTime.getMonth(),\n      nowDate = nowTime.getDate();\n\n  if (current) {\n    let selectYear = current.year(),\n        selectMonth = current.month(),\n        selectDate = current.date();\n    return nowYear - selectYear < 18 || nowYear - selectYear === 18 && nowMonth < selectMonth || nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate;\n  }\n\n  return false;\n};\nexport const getCookie = name => {\n  const reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n  let arr = document.cookie.match(reg);\n\n  if (arr) {\n    return unescape(arr[2]);\n  } else {\n    return null;\n  }\n};\nexport const deleteCookie = name => {\n  let exp = new Date();\n  exp.setTime(exp.getTime() - 1);\n  let val = getCookie(name);\n\n  if (val != null) {\n    document.cookie = name + \"=\" + val + \";expires=\" + exp.toString();\n  }\n};\nexport const beforeUpload = async file => {\n  const isImage = file.type.split(\"/\")[0] === 'image';\n\n  if (!isImage) {\n    await message.error('You can only upload image!', 1);\n  }\n\n  return isImage;\n};\nexport const showBackendMessage = async () => {\n  console.log(\"cookie\", document.cookie);\n  let backendMessage = getCookie(\"backendMessage\");\n\n  if (backendMessage) {\n    let backendMessageList = backendMessage.split(\"#\");\n\n    if (backendMessageList[0] === \"error\") {\n      message.error(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"success\") {\n      message.success(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"info\") {\n      message.info(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"warning\") {\n      message.warning(backendMessageList[1], 1);\n    } else if (backendMessageList[0] === \"loading\") {\n      message.loading(backendMessageList[1], 1);\n    }\n\n    deleteCookie(\"backendMessage\");\n  }\n};","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/util/Functions.js"],"names":["message","isLoggedInAsCookie","console","log","document","cookie","getCookie","isRegisteringWithGoogle","disabledDate","current","nowTime","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDate","getDate","selectYear","year","selectMonth","month","selectDate","date","name","reg","RegExp","arr","match","unescape","deleteCookie","exp","setTime","getTime","val","toString","beforeUpload","file","isImage","type","split","error","showBackendMessage","backendMessage","backendMessageList","success","info","warning","loading"],"mappings":"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","sourcesContent":["import {message} from \"antd\";\n\nexport const isLoggedInAsCookie = () => {\n    console.log(\"cookie\", document.cookie);\n    console.log(!!getCookie(\"login\"));\n    return !!getCookie(\"login\");\n}\n\nexport const isRegisteringWithGoogle = () => {\n    return !!getCookie(\"googleToken\");\n}\n\nexport const disabledDate = (current) => {\n    let nowTime = new Date(Date.now());\n    let nowYear = nowTime.getFullYear(),\n        nowMonth = nowTime.getMonth(),\n        nowDate = nowTime.getDate();\n    if (current) {\n        let selectYear = current.year(),\n            selectMonth = current.month(),\n            selectDate = current.date();\n        return (nowYear - selectYear < 18)\n            || (nowYear - selectYear === 18 && nowMonth < selectMonth)\n            || (nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate);\n    }\n    return false;\n}\n\n\n\nexport const getCookie = (name) => {\n    const reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n    let arr = document.cookie.match(reg);\n    if (arr) {\n        return unescape(arr[2])\n    } else {\n        return null;\n    }\n}\n\nexport const deleteCookie = (name) => {\n    let exp = new Date();\n    exp.setTime(exp.getTime() - 1);\n    let val = getCookie(name);\n    if (val != null) {\n        document.cookie = name + \"=\" + val + \";expires=\" + exp.toString();\n    }\n}\n\nexport const beforeUpload = async (file) => {\n    const isImage = file.type.split(\"/\")[0] === 'image';\n    if (!isImage) {\n        await message.error('You can only upload image!', 1);\n    }\n    return isImage;\n}\n\nexport const showBackendMessage = async () => {\n    console.log(\"cookie\", document.cookie);\n    let backendMessage = getCookie(\"backendMessage\");\n    if (backendMessage) {\n        let backendMessageList = backendMessage.split(\"#\");\n        if (backendMessageList[0] === \"error\") {\n            message.error(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"success\") {\n            message.success(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"info\") {\n            message.info(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"warning\") {\n            message.warning(backendMessageList[1], 1);\n        } else if (backendMessageList[0] === \"loading\") {\n            message.loading(backendMessageList[1], 1);\n        }\n        deleteCookie(\"backendMessage\");\n    }\n}\n"]},"metadata":{},"sourceType":"module"}