{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/AvatarUploader.js\",\n    _s = $RefreshSig$();\n\n// TODO: Uploader animation\nimport React, { useEffect, useState } from \"react\";\nimport { beforeUpload, showBackendMessage } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, message, Upload, Space, Row } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nconst AvatarUploader = () => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [uploaded, setUploaded] = useState(false);\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/avatar\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setImageUrl(res.avatar);\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n  const handleChange = info => {\n    console.log(info);\n\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      getBase64(info.file.originFileObj, imageUrl => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        setUploaded(true);\n      });\n    }\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n\n  const update = async () => {\n    if (uploaded) {\n      await fetch(\"http://localhost:4000/avatar\", {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          avatar: imageUrl\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(() => {\n        message.success(\"Update successfully!\", 1);\n        EventBus.dispatchEvent(\"reload_min_profile\");\n        EventBus.dispatchEvent(\"reload_articles\");\n      }).catch(err => message.error(err, 1));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      align: \"center\",\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        name: \"avatar\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: \"http://localhost:4000/upload/avatar\",\n        withCredentials: true,\n        beforeUpload: beforeUpload,\n        onChange: handleChange,\n        children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"avatar\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this) : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: update,\n        children: \"Click the avatar to upload a new one, and then click here to submit the update.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvatarUploader, \"doavD8pIR+lzV6SidDI0HAVONtM=\");\n\n_c = AvatarUploader;\nexport default AvatarUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarUploader\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/AvatarUploader.js"],"names":["React","useEffect","useState","beforeUpload","showBackendMessage","EventBus","LoadingOutlined","PlusOutlined","Button","message","Upload","Space","Row","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","AvatarUploader","config","rtl","loading","setLoading","imageUrl","setImageUrl","uploaded","setUploaded","load","fetch","method","credentials","then","res","ok","json","statusText","avatar","catch","err","error","handleChange","info","console","log","file","status","originFileObj","uploadButton","marginTop","update","headers","body","JSON","stringify","success","dispatchEvent","width"],"mappings":"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","sourcesContent":["// TODO: Uploader animation\nimport React, {useEffect, useState} from \"react\";\nimport {beforeUpload, showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport {LoadingOutlined, PlusOutlined} from \"@ant-design/icons\";\nimport {Button, message, Upload, Space, Row} from \"antd\";\n\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n}\n\nconst AvatarUploader = () => {\n\n    message.config({\n        rtl: false,\n    })\n\n    const [loading, setLoading] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploaded, setUploaded] = useState(false);\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/avatar\", {\n            method: \"GET\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setImageUrl(res.avatar);\n        }).catch(err => message.error(err, 1));\n    };\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_avatar_uploader\", load);\n\n    const handleChange = (info) => {\n        console.log(info);\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            getBase64(info.file.originFileObj, imageUrl => {\n                setImageUrl(imageUrl);\n                setLoading(false);\n                setUploaded(true);\n            });\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    const update = async () => {\n        if (uploaded) {\n            await fetch(\"http://localhost:4000/avatar\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    avatar: imageUrl,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(() => {\n                message.success(\"Update successfully!\", 1);\n                EventBus.dispatchEvent(\"reload_min_profile\");\n                EventBus.dispatchEvent(\"reload_articles\");\n            }).catch(err => message.error(err, 1));\n        }\n    };\n\n    return (\n        <Row justify=\"center\">\n            <Space align=\"center\" direction=\"vertical\">\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    action=\"http://localhost:4000/upload/avatar\"\n                    withCredentials={true}\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    {imageUrl ? (\n                        <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\n                    ) : (\n                        uploadButton\n                    )}\n                </Upload>\n                <Button type=\"primary\" onClick={update}>\n                    Click the avatar to upload a new one, and then click here to submit the update.\n                </Button>\n            </Space>\n        </Row>\n    );\n};\n\nexport default AvatarUploader;\n"]},"metadata":{},"sourceType":"module"}