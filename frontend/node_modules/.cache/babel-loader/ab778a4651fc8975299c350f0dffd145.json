{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Divider, Input, List, message } from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Articles = () => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const [selectedArticleIdsString, setSelectedArticleIdsString] = useState(\"[]\");\n  const [username, setUsername] = useState(\"\");\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setUsername(res.username);\n      setSelectedArticleIdsString(\"[\" + res.ids.toString() + \"]\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  EventBus.addEventListener(\"reload_articles\", load);\n  EventBus.addEventListener(\"reload_all\", load);\n  EventBus.addEventListener(\"clear_all_states\", () => {\n    setSelectedArticleIdsString(\"[]\");\n  });\n\n  const onSearch = async value => {\n    await fetch(\"http://localhost:4000/search/article\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        keyWord: value\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setSelectedArticleIdsString(\"[\" + res.ids.toString() + \"]\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const onSubmitArticle = async values => {\n    let newSelectedArticleIds = selectedArticleIdsString;\n    newSelectedArticleIds = [values.id].concat(newSelectedArticleIds);\n    setSelectedArticleIdsString(\"[\" + newSelectedArticleIds.toString() + \"]\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SubmitOrEditArticle, {\n      action: onSubmitArticle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n        allowClear: true,\n        enterButton: \"Search\",\n        size: \"large\",\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        dataSource: Function('\"use strict\";return (' + selectedArticleIdsString + ')')(),\n        renderItem: item => /*#__PURE__*/_jsxDEV(Article, {\n          id: item,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Articles, \"N3taBheDCGxYFoUUzzGvXI84fp4=\");\n\n_c = Articles;\nexport default Articles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/Articles.js"],"names":["React","useEffect","useState","Card","Divider","Input","List","message","Article","SubmitOrEditArticle","showBackendMessage","EventBus","Articles","config","rtl","selectedArticleIdsString","setSelectedArticleIdsString","username","setUsername","load","fetch","method","credentials","then","res","ok","json","statusText","ids","toString","catch","err","error","addEventListener","onSearch","value","headers","body","JSON","stringify","keyWord","onSubmitArticle","values","newSelectedArticleIds","id","concat","Function","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Card, Divider, Input, List, message} from \"antd\";\nimport Article from \"./Article\";\nimport SubmitOrEditArticle from \"./SubmitOrEditArticle\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport EventBus from \"../util/EventBus\";\n\nconst Articles = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const [selectedArticleIdsString, setSelectedArticleIdsString] = useState(\"[]\");\n    const [username, setUsername] = useState(\"\");\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setUsername(res.username);\n            setSelectedArticleIdsString(\"[\" + res.ids.toString() + \"]\");\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n    EventBus.addEventListener(\"reload_articles\", load);\n    EventBus.addEventListener(\"reload_all\", load);\n    EventBus.addEventListener(\"clear_all_states\", () => {\n        setSelectedArticleIdsString(\"[]\");\n    })\n\n    const onSearch = async (value) => {\n        await fetch(\"http://localhost:4000/search/article\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                keyWord: value,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setSelectedArticleIdsString(\"[\" + res.ids.toString() + \"]\");\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onSubmitArticle = async (values) => {\n        let newSelectedArticleIds = selectedArticleIdsString;\n        newSelectedArticleIds = [values.id].concat(newSelectedArticleIds);\n        setSelectedArticleIdsString(\"[\" + newSelectedArticleIds.toString() + \"]\");\n    }\n\n    return (\n        <>\n            <SubmitOrEditArticle action={onSubmitArticle}/>\n            <Card bordered={true}>\n                <Input.Search\n                    allowClear\n                    enterButton=\"Search\"\n                    size=\"large\"\n                    onSearch={onSearch}\n                />\n                <Divider orientation=\"left\">Posts</Divider>\n                <List\n                    itemLayout=\"vertical\"\n                    size=\"large\"\n                    dataSource={Function('\"use strict\";return (' + selectedArticleIdsString + ')')()}\n                    renderItem={item => <Article id={item} username={username}/>}\n                />\n            </Card>\n        </>\n    )\n}\n\nexport default Articles;"]},"metadata":{},"sourceType":"module"}