{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/ImageWall.js\",\n    _s = $RefreshSig$();\n\n// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, { memo, useEffect, useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Modal, Upload } from \"antd\";\nimport EventBus from \"../util/EventBus\";\nimport { stringArrayEqual } from \"../util/Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n};\n\nconst urlsToFiles = urls => {\n  return urls.map(item => {\n    let fileName = item.split(\"/\").slice(-1)[0];\n    let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n    console.log({\n      uid: fileUid,\n      name: fileName,\n      status: 'done',\n      url: item\n    });\n    return {\n      uid: fileUid,\n      name: fileName,\n      status: 'done',\n      url: item\n    };\n  });\n};\n\nconst ImagesWall = props => {\n  _s();\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [fileList, setFileList] = useState(props.imageUrlsList ? urlsToFiles(props.imageUrlsList) : []);\n  useEffect(() => {\n    setFileList(fileList => urlsToFiles(props.imageUrlsList));\n  }, [props]);\n\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = ({\n    fileList\n  }) => {\n    setFileList(fileList);\n    console.log(\"fileList\", fileList);\n    let fileListStatus = [];\n    fileList.forEach(item => fileListStatus.push(item.status));\n\n    if (fileListStatus.every(item => item === \"done\")) {\n      let curImageUrlsList = [];\n\n      for (let file of fileList) {\n        curImageUrlsList.push(file.url || file.response.url);\n      }\n\n      console.log(\"curImageUrlsList\", curImageUrlsList);\n      props.action(imageUrlsList => curImageUrlsList);\n    }\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      name: \"image\",\n      action: \"http://localhost:4000/upload/image\",\n      withCredentials: true,\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: handlePreview,\n      onChange: handleChange,\n      children: fileList.length >= 8 ? null : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesWall, \"+bjwtFmMRoO4H6oNfahlC3MIAvA=\");\n\n_c = ImagesWall;\n\nconst areEqualImagesWall = (prevProps, nextProps) => {\n  console.log(\"prevProps, nextProps\", prevProps, nextProps);\n  return stringArrayEqual(prevProps.imageUrlsList, nextProps.imageUrlsList);\n};\n\nexport default _c2 = /*#__PURE__*/memo(ImagesWall, areEqualImagesWall);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImagesWall\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/ImageWall.js"],"names":["React","memo","useEffect","useState","PlusOutlined","Modal","Upload","EventBus","stringArrayEqual","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","urlsToFiles","urls","map","item","fileName","split","slice","fileUid","join","console","log","uid","name","status","url","ImagesWall","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","imageUrlsList","handleCancel","handlePreview","preview","originFileObj","substring","lastIndexOf","handleChange","fileListStatus","forEach","push","every","curImageUrlsList","response","action","uploadButton","marginTop","length","width","areEqualImagesWall","prevProps","nextProps"],"mappings":"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","sourcesContent":["// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, {memo, useEffect, useState} from \"react\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {Modal, Upload} from \"antd\";\nimport EventBus from \"../util/EventBus\";\nimport {stringArrayEqual} from \"../util/Functions\";\n\n\nconst getBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst urlsToFiles = (urls) => {\n    return urls.map((item) => {\n        let fileName = item.split(\"/\").slice(-1)[0];\n        let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n        console.log({\n            uid: fileUid,\n            name: fileName,\n            status: 'done',\n            url: item,\n        });\n        return {\n            uid: fileUid,\n            name: fileName,\n            status: 'done',\n            url: item,\n        }\n    })\n}\n\nconst ImagesWall = (props) => {\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState(\"\");\n    const [previewTitle, setPreviewTitle] = useState(\"\");\n    const [fileList, setFileList] = useState(\n        props.imageUrlsList ?\n            urlsToFiles(props.imageUrlsList) :\n            []\n    );\n\n    useEffect(() => {\n        setFileList(fileList => urlsToFiles(props.imageUrlsList));\n    }, [props]);\n\n    const handleCancel = () => {\n        setPreviewVisible(false);\n    }\n\n    const handlePreview = async (file) => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewImage(file.url || file.preview);\n        setPreviewVisible(true);\n        setPreviewTitle(\n            file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\n        );\n    };\n\n    const handleChange = ({ fileList }) => {\n        setFileList(fileList);\n        console.log(\"fileList\", fileList);\n        let fileListStatus = [];\n        fileList.forEach(item => fileListStatus.push(item.status));\n        if (fileListStatus.every(item => item === \"done\")) {\n            let curImageUrlsList = [];\n            for (let file of fileList) {\n                curImageUrlsList.push(file.url || file.response.url);\n            }\n            console.log(\"curImageUrlsList\", curImageUrlsList);\n            props.action(imageUrlsList => curImageUrlsList);\n        }\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Upload\n                name=\"image\"\n                action=\"http://localhost:4000/upload/image\"\n                withCredentials={true}\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n            >\n                {fileList.length >= 8 ? null : uploadButton}\n            </Upload>\n            <Modal\n                visible={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n};\n\nconst areEqualImagesWall = (prevProps, nextProps) => {\n    console.log(\"prevProps, nextProps\", prevProps, nextProps);\n    return stringArrayEqual(prevProps.imageUrlsList, nextProps.imageUrlsList);\n}\n\nexport default memo(ImagesWall, areEqualImagesWall);\n"]},"metadata":{},"sourceType":"module"}