{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/ImageWall.js\",\n    _s = $RefreshSig$();\n\n// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, { useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Modal, Upload } from \"antd\";\nimport EventBus from \"../util/EventBus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImagesWall = props => {\n  _s();\n\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n  const [fileList, setFileList] = useState(props.imageUrlsList ? props.imageUrlsList.map(item => {\n    let fileName = item.split(\"/\").slice(-1)[0];\n    let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n    return {\n      uid: fileUid,\n      name: fileName,\n      status: 'done',\n      url: item\n    };\n  }) : []);\n  EventBus.addEventListener(\"reload_all\", () => {\n    setPreviewImage(\"\");\n    setPreviewTitle(\"\");\n    setImageUrlsList([]);\n    setFileList([]);\n  });\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = file => {\n    setPreviewImage(file.url || file.response.url);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1) || file.response.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = ({\n    fileList\n  }) => {\n    setFileList(fileList);\n    let curImageUrlsList = [];\n\n    for (let file of fileList) {\n      curImageUrlsList.push(file.url || file.response.url);\n    }\n\n    setImageUrlsList(curImageUrlsList);\n    props.action(imageUrlsList);\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      action: \"http://localhost:4000/upload/image\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: handlePreview,\n      onChange: handleChange,\n      children: fileList.length >= 8 ? null : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImagesWall, \"3TlJRpYARTLYkjbon8k/gUcOjfU=\");\n\n_c = ImagesWall;\nexport default ImagesWall;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesWall\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/ImageWall.js"],"names":["React","useState","PlusOutlined","Modal","Upload","EventBus","ImagesWall","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","imageUrlsList","setImageUrlsList","fileList","setFileList","map","item","fileName","split","slice","fileUid","join","uid","name","status","url","addEventListener","handleCancel","handlePreview","file","response","substring","lastIndexOf","handleChange","curImageUrlsList","push","action","uploadButton","marginTop","length","width"],"mappings":"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","sourcesContent":["// TODO: The wall is using a \"stack\", need to become \"array(vector).\"\nimport React, {useState} from \"react\";\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport {Modal, Upload} from \"antd\";\nimport EventBus from \"../util/EventBus\";\n\n\nconst ImagesWall = (props) => {\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState(\"\");\n    const [previewTitle, setPreviewTitle] = useState(\"\");\n    const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n    const [fileList, setFileList] = useState(\n        props.imageUrlsList ?\n            props.imageUrlsList.map((item) => {\n                let fileName = item.split(\"/\").slice(-1)[0];\n                let fileUid = fileName.split(\".\").slice(0, -1).join(\"\");\n                return {\n                    uid: fileUid,\n                    name: fileName,\n                    status: 'done',\n                    url: item,\n                }\n            }) :\n            []\n    );\n\n    EventBus.addEventListener(\"reload_all\", () => {\n        setPreviewImage(\"\");\n        setPreviewTitle(\"\");\n        setImageUrlsList([]);\n        setFileList([]);\n    });\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = (file) => {\n        setPreviewImage(file.url || file.response.url);\n        setPreviewVisible(true);\n        setPreviewTitle(\n            file.name ||\n            file.url.substring(file.url.lastIndexOf('/') + 1) ||\n            file.response.url.substring(file.url.lastIndexOf('/') + 1)\n        );\n    };\n\n    const handleChange = ({ fileList }) => {\n        setFileList(fileList);\n        let curImageUrlsList = [];\n        for (let file of fileList) {\n            curImageUrlsList.push(file.url || file.response.url);\n        }\n        setImageUrlsList(curImageUrlsList);\n        props.action(imageUrlsList);\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Upload\n                action=\"http://localhost:4000/upload/image\"\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n            >\n                {fileList.length >= 8 ? null : uploadButton}\n            </Upload>\n            <Modal\n                visible={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n};\n\nexport default ImagesWall;\n"]},"metadata":{},"sourceType":"module"}