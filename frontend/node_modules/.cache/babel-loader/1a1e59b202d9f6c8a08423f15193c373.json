{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/PasswordSetup.js\";\nimport React from 'react';\nimport { Button, Form, Input, message } from \"antd\";\nimport { formItemLayout, tailFormItemLayout } from \"../util/Layout\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordSetup = () => {\n  message.config({\n    rtl: false\n  });\n\n  const onFinish = async values => {\n    await fetch(\"http://localhost:4000/password\", {\n      method: \"PUT\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        newPassword: values.newPassword,\n        oldPassword: values.curPassword\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage().then();\n        return res.json();\n      } else if (res.status === 401) {\n        throw new Error(\"The old password is wrong!\");\n      } else {\n        throw res.statusText;\n      }\n    }).then(() => {\n      message.success(\"Update successfully!\", 1);\n    }).catch(err => message.error(err, 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    name: \"updatePassword\",\n    autoComplete: \"off\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"curPassword\",\n      label: \"Current Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your current password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"newPassword\",\n      label: \"New Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your new password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"newPasswordConfirmation\",\n      label: \"Confirmation\",\n      dependencies: ['newPassword'],\n      rules: [{\n        required: true,\n        message: 'Please confirm your new password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('newPassword') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords you entered do not match!'));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        visibilityToggle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PasswordSetup;\nexport default PasswordSetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordSetup\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/PasswordSetup.js"],"names":["React","Button","Form","Input","message","formItemLayout","tailFormItemLayout","showBackendMessage","PasswordSetup","config","rtl","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","newPassword","oldPassword","curPassword","then","res","ok","json","status","Error","statusText","success","catch","err","error","required","getFieldValue","validator","_","value","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, Form, Input, message} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"../util/Layout\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\n\nconst PasswordSetup = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const onFinish = async (values) => {\n        await fetch(\"http://localhost:4000/password\", {\n            method: \"PUT\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                newPassword: values.newPassword,\n                oldPassword: values.curPassword,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage().then();\n                return res.json();\n            } else if (res.status === 401) {\n                throw new Error(\"The old password is wrong!\");\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            message.success(\"Update successfully!\", 1);\n        }).catch(err => message.error(err, 1));\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"updatePassword\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n        >\n            <Form.Item name=\"curPassword\"\n                       label=\"Current Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your current password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item name=\"newPassword\"\n                       label=\"New Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your new password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"newPasswordConfirmation\"\n                label=\"Confirmation\"\n                dependencies={['newPassword']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your new password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('newPassword') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Update\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default PasswordSetup;\n"]},"metadata":{},"sourceType":"module"}