{"ast":null,"code":"import _objectSpread from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import{message,Button,Form,Input,Space}from\"antd\";import{formItemLayout,tailFormItemLayout}from'../util/Layout';import{GoogleOutlined}from\"@ant-design/icons\";import{useHistory}from\"react-router-dom\";import{showBackendMessage}from\"../util/Functions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LogInForm=function LogInForm(){message.config({rtl:false});var history=useHistory();var onFinish=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:4000/login\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:values.username,password:values.password})}).then(function(res){if(res.ok){showBackendMessage();return res.json();}else{throw res.statusText;}}).then(function(){history.push({pathname:\"/home\"});message.config({rtl:false});message.success(\"Login Successfully!\");}).catch(function(err){return message.error(err,1);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function onFinish(_x){return _ref.apply(this,arguments);};}();var googleLogin=function googleLogin(){window.location.href=\"http://localhost:4000/auth/google\";};return/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({},formItemLayout),{},{name:\"logIn\",autoComplete:\"off\",layout:\"horizontal\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"username\",label:\"Username\",rules:[{required:true,message:'Please input your username!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},tailFormItemLayout),{},{children:/*#__PURE__*/_jsxs(Space,{size:8,children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Log in\"}),/*#__PURE__*/_jsxs(Button,{type:\"default\",htmlType:\"button\",onClick:googleLogin,children:[\"Log in with \",/*#__PURE__*/_jsx(GoogleOutlined,{})]})]})}))]}));};export default LogInForm;","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/LogInForm.js"],"names":["React","message","Button","Form","Input","Space","formItemLayout","tailFormItemLayout","GoogleOutlined","useHistory","showBackendMessage","LogInForm","config","rtl","history","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","username","password","then","res","ok","json","statusText","push","pathname","success","catch","err","error","googleLogin","window","location","href","required"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {message, Button, Form, Input, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from '../util/Layout';\nimport {GoogleOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport {showBackendMessage} from \"../util/Functions\";\n\n\nconst LogInForm = () => {\n    message.config({\n        rtl: false,\n    });\n\n    const history = useHistory();\n\n    const onFinish = async (values) => {\n        await fetch(\"http://localhost:4000/login\", {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n                username: values.username,\n                password: values.password,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            history.push({\n                pathname: \"/home\"\n            });\n            message.config({\n                rtl: false,\n            });\n            message.success(\"Login Successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const googleLogin =  () => {\n        window.location.href = \"http://localhost:4000/auth/google\";\n    }\n\n    return (\n        <Form {...formItemLayout}\n              name=\"logIn\"\n              autoComplete=\"off\"\n              layout=\"horizontal\"\n              onFinish={onFinish}\n        >\n\n            <Form.Item name=\"username\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Log in\n                    </Button>\n                    <Button type=\"default\" htmlType=\"button\" onClick={googleLogin}>\n                        Log in with <GoogleOutlined />\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default LogInForm;"]},"metadata":{},"sourceType":"module"}