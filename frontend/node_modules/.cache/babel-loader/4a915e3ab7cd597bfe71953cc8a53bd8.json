{"ast":null,"code":"import _objectSpread from\"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Button,Card,DatePicker,Divider,Form,Input,message,Upload}from\"antd\";import{connect}from\"react-redux\";import{formItemLayout,tailFormItemLayout}from\"./Landing\";import moment from\"moment\";import{updateInfo as _updateInfo,updatePassword as _updatePassword}from\"../actions\";import{disabledDate}from'./RegisterForm';import MyMediaMenu from\"./Menu\";import{store}from\"../index\";// TODO: 1. Change avatar\n//       2. Avatar hover\n//       3. Refactor with hook\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Profile=function Profile(props){message.config({rtl:false});var onInfoFinish=function onInfoFinish(values){props.updateInfo({email:values.email,status:values.status,phone:values.phone,DOB:values.DOB,zipcode:values.zipcode,displayName:values.displayName});var curState=store.getState();if(curState.isUpdateSuccessful){message.success(curState.updateProfileMessage,1).then();}};var onPasswordFinish=function onPasswordFinish(values){props.updatePassword({curPassword:values.curPassword,newPassword:values.newPassword});var curState=store.getState();if(curState.isUpdateSuccessful){message.success(curState.updateProfileMessage,1).then();}else{message.error(curState.updateProfileMessage,1).then();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MyMediaMenu,{}),/*#__PURE__*/_jsxs(Card,{style:{width:'50%',position:'absolute',left:'50%',top:'50%',transform:'translate(-50%, -50%)'},children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"Information\"}),/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({},formItemLayout),{},{name:\"updateInformation\",autoComplete:\"off\",onFinish:onInfoFinish,initialValues:{'displayName':props.displayName,'status':props.status,'email':props.email,'phone':props.phone,'DOB':moment(props.DOB?props.DOB:\"\",'MM/DD/YYYY'),'zipcode':props.zipcode},children:[/*#__PURE__*/_jsx(Form.Item,{name:\"avatar\",label:\"Avatar\",children:/*#__PURE__*/_jsx(Upload,{listType:\"picture-card\",showUploadList:false,children:/*#__PURE__*/_jsx(\"img\",{src:props.avatar,style:{width:'100%'},alt:\"avatar\"})})}),/*#__PURE__*/_jsx(Form.Item,{name:\"userName\",label:\"Username\",children:/*#__PURE__*/_jsx(\"span\",{className:\"ant-form-text\",children:props.userName})}),/*#__PURE__*/_jsx(Form.Item,{name:\"displayName\",label:\"Display Name\",children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"status\",label:\"Status\",children:/*#__PURE__*/_jsx(Input.TextArea,{rows:4})}),/*#__PURE__*/_jsx(Form.Item,{name:\"email\",label:\"E-mail\",rules:[{type:'email',message:'Please input your valid E-mail like a@b.co!'},{required:true,message:'Please input your E-mail!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"phone\",label:\"Phone Number\",rules:[{pattern:/^[0-9]{10}$/,message:'Please input your phone number like 1231231234!'},{required:true,message:'Please input your phone number!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"DOB\",label:\"Date of Birth\",rules:[{required:true,message:'Please input your date of birth!'}],extra:\"Only individuals 18 years of age or older on the day of registration are allowed to register.\",children:/*#__PURE__*/_jsx(DatePicker,{format:'MM/DD/YYYY',style:{width:'100%'},disabledDate:disabledDate})}),/*#__PURE__*/_jsx(Form.Item,{name:\"zipcode\",label:\"Zipcode\",rules:[{pattern:/^[0-9]{5}$/,message:'Please input your phone zipcode like 12345!'},{required:true,message:'Please input your phone zipcode!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},tailFormItemLayout),{},{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Update\"})}))]})),/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:\"Password\"}),/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({},formItemLayout),{},{name:\"updatePassword\",autoComplete:\"off\",onFinish:onPasswordFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"curPassword\",label:\"Current Password\",rules:[{required:true,message:'Please input your current password!'}],children:/*#__PURE__*/_jsx(Input.Password,{visibilityToggle:false})}),/*#__PURE__*/_jsx(Form.Item,{name:\"newPassword\",label:\"New Password\",rules:[{required:true,message:'Please input your new password!'}],children:/*#__PURE__*/_jsx(Input.Password,{visibilityToggle:false})}),/*#__PURE__*/_jsx(Form.Item,{name:\"newPasswordConfirmation\",label:\"New Password Confirmation\",dependencies:['newPassword'],rules:[{required:true,message:'Please confirm your new password!'},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(_,value){if(!value||getFieldValue('newPassword')===value){return Promise.resolve();}return Promise.reject(new Error('The two passwords you entered do not match!'));}};}],children:/*#__PURE__*/_jsx(Input.Password,{visibilityToggle:false})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},tailFormItemLayout),{},{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Update\"})}))]}))]})]});};var mapStateToProps=function mapStateToProps(state){return{userName:state.userName,avatar:state.avatar,status:state.status,displayName:state.displayName,email:state.email,phone:state.phone,DOB:state.DOB,zipcode:state.zipcode,password:state.password,updateProfileMessage:state.updateProfileMessage,menuState:state.menuState};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateInfo:function updateInfo(values){return dispatch(_updateInfo(values));},updatePassword:function updatePassword(values){return dispatch(_updatePassword(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Profile.js"],"names":["React","Button","Card","DatePicker","Divider","Form","Input","message","Upload","connect","formItemLayout","tailFormItemLayout","moment","updateInfo","updatePassword","disabledDate","MyMediaMenu","store","Profile","props","config","rtl","onInfoFinish","values","email","status","phone","DOB","zipcode","displayName","curState","getState","isUpdateSuccessful","success","updateProfileMessage","then","onPasswordFinish","curPassword","newPassword","error","width","position","left","top","transform","avatar","userName","type","required","pattern","getFieldValue","validator","_","value","Promise","resolve","reject","Error","mapStateToProps","state","password","menuState","mapDispatchToProps","dispatch"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,UAAtB,CAAkCC,OAAlC,CAA2CC,IAA3C,CAAiDC,KAAjD,CAAwDC,OAAxD,CAAiEC,MAAjE,KAA8E,MAA9E,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,cAAR,CAAwBC,kBAAxB,KAAiD,WAAjD,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAAQC,UAAU,GAAVA,CAAAA,WAAR,CAAoBC,cAAc,GAAdA,CAAAA,eAApB,KAAyC,YAAzC,CACA,OAAQC,YAAR,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,QAAxB,CACA,OAAQC,KAAR,KAAoB,UAApB,CAGA;AACA;AACA;6IACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAEvBZ,OAAO,CAACa,MAAR,CAAe,CACXC,GAAG,CAAE,KADM,CAAf,EAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAY,CAC7BJ,KAAK,CAACN,UAAN,CAAiB,CACbW,KAAK,CAAED,MAAM,CAACC,KADD,CAEbC,MAAM,CAAEF,MAAM,CAACE,MAFF,CAGbC,KAAK,CAAEH,MAAM,CAACG,KAHD,CAIbC,GAAG,CAAEJ,MAAM,CAACI,GAJC,CAKbC,OAAO,CAAEL,MAAM,CAACK,OALH,CAMbC,WAAW,CAAEN,MAAM,CAACM,WANP,CAAjB,EAQA,GAAIC,CAAAA,QAAQ,CAAGb,KAAK,CAACc,QAAN,EAAf,CACA,GAAID,QAAQ,CAACE,kBAAb,CAAiC,CAC7BzB,OAAO,CAAC0B,OAAR,CAAgBH,QAAQ,CAACI,oBAAzB,CAA+C,CAA/C,EAAkDC,IAAlD,GACH,CACJ,CAbD,CAeA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACb,MAAD,CAAY,CACjCJ,KAAK,CAACL,cAAN,CAAqB,CACjBuB,WAAW,CAAEd,MAAM,CAACc,WADH,CAEjBC,WAAW,CAAEf,MAAM,CAACe,WAFH,CAArB,EAIA,GAAIR,CAAAA,QAAQ,CAAGb,KAAK,CAACc,QAAN,EAAf,CACA,GAAID,QAAQ,CAACE,kBAAb,CAAiC,CAC7BzB,OAAO,CAAC0B,OAAR,CAAgBH,QAAQ,CAACI,oBAAzB,CAA+C,CAA/C,EAAkDC,IAAlD,GACH,CAFD,IAEO,CACH5B,OAAO,CAACgC,KAAR,CAAcT,QAAQ,CAACI,oBAAvB,CAA6C,CAA7C,EAAgDC,IAAhD,GACH,CACJ,CAXD,CAaA,mBACI,wCACI,KAAC,WAAD,IADJ,cAEI,MAAC,IAAD,EAAM,KAAK,CAAE,CACTK,KAAK,CAAE,KADE,CAETC,QAAQ,CAAE,UAFD,CAGTC,IAAI,CAAE,KAHG,CAITC,GAAG,CAAE,KAJI,CAKTC,SAAS,CAAE,uBALF,CAAb,wBAOI,KAAC,OAAD,EAAS,WAAW,CAAC,MAArB,yBAPJ,cAQI,MAAC,IAAD,gCAAUlC,cAAV,MACM,IAAI,CAAC,mBADX,CAEM,YAAY,CAAC,KAFnB,CAGM,QAAQ,CAAEY,YAHhB,CAIM,aAAa,CAAE,CACX,cAAeH,KAAK,CAACU,WADV,CAEX,SAAUV,KAAK,CAACM,MAFL,CAGX,QAASN,KAAK,CAACK,KAHJ,CAIX,QAASL,KAAK,CAACO,KAJJ,CAKX,MAAOd,MAAM,CAACO,KAAK,CAACQ,GAAN,CAAYR,KAAK,CAACQ,GAAlB,CAAwB,EAAzB,CAA6B,YAA7B,CALF,CAMX,UAAWR,KAAK,CAACS,OANN,CAJrB,wBAcI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,QAAhB,CACW,KAAK,CAAC,QADjB,uBAGI,KAAC,MAAD,EACI,QAAQ,CAAC,cADb,CAEI,cAAc,CAAE,KAFpB,uBAII,YAAK,GAAG,CAAET,KAAK,CAAC0B,MAAhB,CAAwB,KAAK,CAAE,CAACL,KAAK,CAAE,MAAR,CAA/B,CAAgD,GAAG,CAAC,QAApD,EAJJ,EAHJ,EAdJ,cAyBI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,UAAhB,CACW,KAAK,CAAC,UADjB,uBAGI,aAAM,SAAS,CAAC,eAAhB,UACKrB,KAAK,CAAC2B,QADX,EAHJ,EAzBJ,cAiCI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,aAAhB,CACW,KAAK,CAAC,cADjB,uBAGI,KAAC,KAAD,IAHJ,EAjCJ,cAuCI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,QAAhB,CACW,KAAK,CAAC,QADjB,uBAGI,KAAC,KAAD,CAAO,QAAP,EAAgB,IAAI,CAAE,CAAtB,EAHJ,EAvCJ,cA6CI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,OAAhB,CACW,KAAK,CAAC,QADjB,CAEW,KAAK,CAAE,CACH,CACIC,IAAI,CAAE,OADV,CAEIxC,OAAO,CAAE,6CAFb,CADG,CAKH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,2BAFb,CALG,CAFlB,uBAaI,KAAC,KAAD,IAbJ,EA7CJ,cA6DI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,OAAhB,CACW,KAAK,CAAC,cADjB,CAEW,KAAK,CAAE,CACH,CACI0C,OAAO,CAAE,aADb,CAEI1C,OAAO,CAAE,iDAFb,CADG,CAKH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,iCAFb,CALG,CAFlB,uBAaI,KAAC,KAAD,IAbJ,EA7DJ,cA6EI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,KAAhB,CACW,KAAK,CAAC,eADjB,CAEW,KAAK,CAAE,CACH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,kCAFb,CADG,CAFlB,CAQW,KAAK,CAAC,+FARjB,uBAUI,KAAC,UAAD,EAAY,MAAM,CAAE,YAApB,CACY,KAAK,CAAE,CAACiC,KAAK,CAAE,MAAR,CADnB,CAEY,YAAY,CAAEzB,YAF1B,EAVJ,EA7EJ,cA4FI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,SAAhB,CACW,KAAK,CAAC,SADjB,CAEW,KAAK,CAAE,CACH,CACIkC,OAAO,CAAE,YADb,CAEI1C,OAAO,CAAE,6CAFb,CADG,CAKH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,kCAFb,CALG,CAFlB,uBAaI,KAAC,KAAD,IAbJ,EA5FJ,cA6GI,KAAC,IAAD,CAAM,IAAN,gCAAeI,kBAAf,4BACI,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,oBADJ,GA7GJ,IARJ,cA2HI,KAAC,OAAD,EAAS,WAAW,CAAC,MAArB,sBA3HJ,cA4HI,MAAC,IAAD,gCAAUD,cAAV,MACM,IAAI,CAAC,gBADX,CAEM,YAAY,CAAC,KAFnB,CAGM,QAAQ,CAAE0B,gBAHhB,wBAKI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,aAAhB,CACW,KAAK,CAAC,kBADjB,CAEW,KAAK,CAAE,CACH,CACIY,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,qCAFb,CADG,CAFlB,uBAUI,KAAC,KAAD,CAAO,QAAP,EAAgB,gBAAgB,CAAE,KAAlC,EAVJ,EALJ,cAkBI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,aAAhB,CACW,KAAK,CAAC,cADjB,CAEW,KAAK,CAAE,CACH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,iCAFb,CADG,CAFlB,uBAUI,KAAC,KAAD,CAAO,QAAP,EAAgB,gBAAgB,CAAE,KAAlC,EAVJ,EAlBJ,cA+BI,KAAC,IAAD,CAAM,IAAN,EACI,IAAI,CAAC,yBADT,CAEI,KAAK,CAAC,2BAFV,CAGI,YAAY,CAAE,CAAC,aAAD,CAHlB,CAII,KAAK,CAAE,CACH,CACIyC,QAAQ,CAAE,IADd,CAEIzC,OAAO,CAAE,mCAFb,CADG,CAKH,kBAAE2C,CAAAA,aAAF,MAAEA,aAAF,OAAsB,CAClBC,SADkB,oBACRC,CADQ,CACLC,KADK,CACE,CAChB,GAAI,CAACA,KAAD,EAAUH,aAAa,CAAC,aAAD,CAAb,GAAiCG,KAA/C,CAAsD,CAClD,MAAOC,CAAAA,OAAO,CAACC,OAAR,EAAP,CACH,CACD,MAAOD,CAAAA,OAAO,CAACE,MAAR,CAAe,GAAIC,CAAAA,KAAJ,CAAU,6CAAV,CAAf,CAAP,CACH,CANiB,CAAtB,EALG,CAJX,uBAmBI,KAAC,KAAD,CAAO,QAAP,EAAgB,gBAAgB,CAAE,KAAlC,EAnBJ,EA/BJ,cAqDI,KAAC,IAAD,CAAM,IAAN,gCAAe9C,kBAAf,4BACI,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,oBADJ,GArDJ,IA5HJ,GAFJ,GADJ,CA6LH,CA/ND,CAiOA,GAAM+C,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHb,QAAQ,CAAEa,KAAK,CAACb,QADb,CAEHD,MAAM,CAAEc,KAAK,CAACd,MAFX,CAGHpB,MAAM,CAAEkC,KAAK,CAAClC,MAHX,CAIHI,WAAW,CAAE8B,KAAK,CAAC9B,WAJhB,CAKHL,KAAK,CAAEmC,KAAK,CAACnC,KALV,CAMHE,KAAK,CAAEiC,KAAK,CAACjC,KANV,CAOHC,GAAG,CAAEgC,KAAK,CAAChC,GAPR,CAQHC,OAAO,CAAE+B,KAAK,CAAC/B,OARZ,CASHgC,QAAQ,CAAED,KAAK,CAACC,QATb,CAUH1B,oBAAoB,CAAEyB,KAAK,CAACzB,oBAVzB,CAWH2B,SAAS,CAAEF,KAAK,CAACE,SAXd,CAAP,CAaH,CAdD,CAgBA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHlD,UAAU,CAAE,oBAACU,MAAD,QAAYwC,CAAAA,QAAQ,CAAClD,WAAU,CAACU,MAAD,CAAX,CAApB,EADT,CAEHT,cAAc,CAAE,wBAACS,MAAD,QAAYwC,CAAAA,QAAQ,CAACjD,eAAc,CAACS,MAAD,CAAf,CAApB,EAFb,CAAP,CAIH,CALD,CAOA,cAAed,CAAAA,OAAO,CAACiD,eAAD,CAAkBI,kBAAlB,CAAP,CAA6C5C,OAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {Button, Card, DatePicker, Divider, Form, Input, message, Upload} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {formItemLayout, tailFormItemLayout} from \"./Landing\";\nimport moment from \"moment\";\nimport {updateInfo, updatePassword} from \"../actions\";\nimport {disabledDate} from './RegisterForm'\nimport MyMediaMenu from \"./Menu\";\nimport {store} from \"../index\";\n\n\n// TODO: 1. Change avatar\n//       2. Avatar hover\n//       3. Refactor with hook\nconst Profile = (props) => {\n\n    message.config({\n        rtl: false,\n    });\n\n    const onInfoFinish = (values) => {\n        props.updateInfo({\n            email: values.email,\n            status: values.status,\n            phone: values.phone,\n            DOB: values.DOB,\n            zipcode: values.zipcode,\n            displayName: values.displayName,\n        });\n        let curState = store.getState();\n        if (curState.isUpdateSuccessful) {\n            message.success(curState.updateProfileMessage, 1).then();\n        }\n    };\n\n    const onPasswordFinish = (values) => {\n        props.updatePassword({\n            curPassword: values.curPassword,\n            newPassword: values.newPassword,\n        });\n        let curState = store.getState();\n        if (curState.isUpdateSuccessful) {\n            message.success(curState.updateProfileMessage, 1).then();\n        } else {\n            message.error(curState.updateProfileMessage, 1).then();\n        }\n    };\n\n    return (\n        <>\n            <MyMediaMenu/>\n            <Card style={{\n                width: '50%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n            }}>\n                <Divider orientation=\"left\">Information</Divider>\n                <Form {...formItemLayout}\n                      name=\"updateInformation\"\n                      autoComplete=\"off\"\n                      onFinish={onInfoFinish}\n                      initialValues={{\n                          'displayName': props.displayName,\n                          'status': props.status,\n                          'email': props.email,\n                          'phone': props.phone,\n                          'DOB': moment(props.DOB ? props.DOB : \"\", 'MM/DD/YYYY'),\n                          'zipcode': props.zipcode\n                      }}\n\n                >\n                    <Form.Item name=\"avatar\"\n                               label=\"Avatar\"\n                    >\n                        <Upload\n                            listType=\"picture-card\"\n                            showUploadList={false}\n                        >\n                            <img src={props.avatar} style={{width: '100%'}} alt=\"avatar\"/>\n                        </Upload>\n                    </Form.Item>\n\n                    <Form.Item name=\"userName\"\n                               label=\"Username\"\n                    >\n                        <span className=\"ant-form-text\">\n                            {props.userName}\n                        </span>\n                    </Form.Item>\n\n                    <Form.Item name=\"displayName\"\n                               label=\"Display Name\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"status\"\n                               label=\"Status\"\n                    >\n                        <Input.TextArea rows={4}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"email\"\n                               label=\"E-mail\"\n                               rules={[\n                                   {\n                                       type: 'email',\n                                       message: 'Please input your valid E-mail like a@b.co!',\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your E-mail!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"phone\"\n                               label=\"Phone Number\"\n                               rules={[\n                                   {\n                                       pattern: /^[0-9]{10}$/,\n                                       message: 'Please input your phone number like 1231231234!'\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your phone number!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"DOB\"\n                               label=\"Date of Birth\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your date of birth!',\n                                   },\n                               ]}\n                               extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n                    >\n                        <DatePicker format={'MM/DD/YYYY'}\n                                    style={{width: '100%'}}\n                                    disabledDate={disabledDate}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"zipcode\"\n                               label=\"Zipcode\"\n                               rules={[\n                                   {\n                                       pattern: /^[0-9]{5}$/,\n                                       message: 'Please input your phone zipcode like 12345!'\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your phone zipcode!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">Password</Divider>\n                <Form {...formItemLayout}\n                      name=\"updatePassword\"\n                      autoComplete=\"off\"\n                      onFinish={onPasswordFinish}\n                >\n                    <Form.Item name=\"curPassword\"\n                               label=\"Current Password\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your current password!',\n                                   }\n                               ]}\n\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"newPassword\"\n                               label=\"New Password\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your new password!',\n                                   }\n                               ]}\n\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"newPasswordConfirmation\"\n                        label=\"New Password Confirmation\"\n                        dependencies={['newPassword']}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your new password!',\n                            },\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('newPassword') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userName: state.userName,\n        avatar: state.avatar,\n        status: state.status,\n        displayName: state.displayName,\n        email: state.email,\n        phone: state.phone,\n        DOB: state.DOB,\n        zipcode: state.zipcode,\n        password: state.password,\n        updateProfileMessage: state.updateProfileMessage,\n        menuState: state.menuState,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateInfo: (values) => dispatch(updateInfo(values)),\n        updatePassword: (values) => dispatch(updatePassword(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}