{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/SubmitOrEditArticle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input, Button, Form, Card, Divider, message } from \"antd\";\nimport { handleResponse, showError } from \"../util/Functions\";\nimport ImagesWall from \"./ImageWall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubmitOrEditArticle = props => {\n  _s();\n\n  const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n\n  const onFinish = async values => {\n    if (props.id) {\n      await fetch(\"http://localhost:4000/article\", {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: values.title,\n          text: values.text,\n          images: imageUrlsList\n        })\n      }).then(res => handleResponse(res)).then(res => {\n        message.success(\"Edit Successfully\");\n        props.action({\n          title: res.title,\n          text: res.text,\n          timestamp: res.timestamp,\n          images: res.images\n        });\n      }).catch(err => showError(err));\n    } else {\n      await fetch(\"http://localhost:4000/article\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: values.title,\n          text: values.text,\n          images: imageUrlsList\n        })\n      }).then(res => handleResponse(res)).then(res => {\n        message.success(\"Submit Successfully\");\n        props.action({\n          title: res.title,\n          text: res.text,\n          timestamp: res.timestamp,\n          images: res.images\n        });\n      }).catch(err => showError(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: props.id ? \"Edit Post\" : \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Title\",\n          value: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"text\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          value: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(ImagesWall, {\n          imageUrlsList: imageUrlsList,\n          action: newImageUrlsList => setImageUrlsList(newImageUrlsList)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"50%\"\n          },\n          htmlType: \"submit\",\n          type: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"50%\"\n          },\n          htmlType: \"reset\",\n          type: \"default\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubmitOrEditArticle, \"YI9URTg9ea6l3ZcbbDxJPQyHRVw=\");\n\n_c = SubmitOrEditArticle;\nexport default SubmitOrEditArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitOrEditArticle\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/SubmitOrEditArticle.js"],"names":["React","useState","Input","Button","Form","Card","Divider","message","handleResponse","showError","ImagesWall","SubmitOrEditArticle","props","imageUrlsList","setImageUrlsList","onFinish","values","id","fetch","method","credentials","headers","body","JSON","stringify","title","text","images","then","res","success","action","timestamp","catch","err","newImageUrlsList","width"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Input, Button, Form, Card, Divider, message} from \"antd\";\nimport {handleResponse, showError} from \"../util/Functions\";\nimport ImagesWall from \"./ImageWall\";\n\nconst SubmitOrEditArticle = (props) => {\n    const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n\n    const onFinish = async (values) => {\n        if (props.id) {\n            await fetch(\"http://localhost:4000/article\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => handleResponse(res)).then(res => {\n                message.success(\"Edit Successfully\");\n                props.action({\n                    title: res.title,\n                    text: res.text,\n                    timestamp: res.timestamp,\n                    images: res.images,\n                });\n            }).catch(err => showError(err));\n        } else {\n            await fetch(\"http://localhost:4000/article\", {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => handleResponse(res)).then(res => {\n                message.success(\"Submit Successfully\");\n                props.action({\n                    title: res.title,\n                    text: res.text,\n                    timestamp: res.timestamp,\n                    images: res.images,\n                });\n            }).catch(err => showError(err));\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">{\n                props.id ? \"Edit Post\" : \"Add New Post\"\n            }</Divider>\n            <Form onFinish={onFinish}>\n                <Form.Item name=\"title\">\n                    <Input placeholder=\"Title\" value={props.title}/>\n                </Form.Item>\n                <Form.Item name=\"text\">\n                    <Input.TextArea value={props.text}/>\n                </Form.Item>\n                <Form.Item>\n                    <ImagesWall\n                        imageUrlsList={imageUrlsList}\n                        action={newImageUrlsList => setImageUrlsList(newImageUrlsList)} />\n                </Form.Item>\n                <Form.Item>\n                    <Button style={{width: \"50%\"}} htmlType=\"submit\" type=\"primary\">\n                        Submit\n                    </Button>\n                    <Button style={{width: \"50%\"}} htmlType=\"reset\" type=\"default\">\n                        Clear\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}\n\nexport default SubmitOrEditArticle;\n"]},"metadata":{},"sourceType":"module"}