{"ast":null,"code":"import moment from \"moment\";\nexport let userNamePasswordMap = new Map();\nexport let userNameInfoMap = new Map();\nexport let idUserNameMap = new Map();\nexport let userNameIdMap = new Map();\nexport let posts = [];\nlet infosRequest = new XMLHttpRequest();\ninfosRequest.open(\"GET\", \"https://jsonplaceholder.typicode.com/users\", false);\ninfosRequest.send(null);\nlet infoRaw = eval(infosRequest.responseText);\n\nfor (let item of infoRaw) {\n  idUserNameMap.set(item.id, item.username);\n  userNameIdMap.set(item.username, item.id);\n  userNamePasswordMap.set(item.username, item.address.street);\n  userNameInfoMap.set(item.username, {\n    id: item.id,\n    phone: item.phone,\n    email: item.email,\n    zipcode: item.address.zipcode,\n    displayName: item.displayName,\n    status: item.company.catchPhrase,\n    DOB: moment(\"2000-01-01\"),\n    avatar: \"https://joeschmoe.io/api/v1/\" + item.username\n  });\n}\n\nlet curLogin = window.localStorage.getItem(\"userName\");\n\nif (userNameInfoMap.has(curLogin)) {} else {\n  window.localStorage.removeItem(\"userName\");\n}\n\ncurLogin = window.localStorage.getItem(\"userName\");\n\nfunction getFollowingsID(id) {\n  // hard code now\n  if (id === 1) {\n    return [2, 3, 4];\n  } else if (id === 2) {\n    return [1, 3, 4];\n  } else if (id === 3) {\n    return [1, 2, 4];\n  } else if (id <= 10) {\n    return [1, 2, 3];\n  } else return [1];\n}\n\nexport function getFollowings(userName) {\n  let followingsID = getFollowingsID(userNameIdMap.get(userName));\n  let followings = [];\n\n  for (let id of followingsID) {\n    followings.push({\n      userName: idUserNameMap.get(id),\n      avatar: userNameInfoMap.get(idUserNameMap.get(id)).avatar,\n      status: userNameInfoMap.get(idUserNameMap.get(id)).status\n    });\n  }\n\n  return followings;\n}\n\nfor (let item of infoRaw) {\n  let temp = userNameInfoMap.get(item.username);\n  temp.followings = getFollowings(item.username);\n  userNameInfoMap.set(item.username, temp);\n}\n\nlet postsRequest = new XMLHttpRequest();\npostsRequest.open(\"GET\", \"https://jsonplaceholder.typicode.com/posts\", false);\npostsRequest.send(null);\nlet postsRaw = eval(postsRequest.responseText);\n\nfor (let item of postsRaw) {\n  posts.push({\n    userName: idUserNameMap.get(item.userId),\n    id: item.id,\n    title: item.title,\n    body: item.body,\n    avatar: userNameInfoMap.get(idUserNameMap.get(item.userId)).avatar,\n    image: \"https://picsum.photos/200/200?random=\" + item.title,\n    timestamp: Math.ceil((new Date().valueOf() - 1000000000000) * Math.random() + 1000000000000),\n    comments: [// Hard code here\n    {\n      author: \"Bret\",\n      avatar: userNameInfoMap.get(\"Bret\").avatar,\n      content: \"quia et suscipit\\\\nsuscipit recusandae consequuntur expedita et cum\\\\nreprehenderit molestiae ut ut quas totam\\\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }, {\n      author: \"Antonette\",\n      avatar: userNameInfoMap.get(\"Antonette\").avatar,\n      content: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n    }, {\n      author: \"Samantha\",\n      avatar: userNameInfoMap.get(\"Samantha\").avatar,\n      content: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n    }]\n  });\n}\n\nexport function getFollowingsAndSelfPosts(userName, followings, searchFilter = \"\") {\n  let followingsAndSelfPosts = [];\n\n  for (let i = posts.length - 1; i >= 0; --i) {\n    let post = posts[i];\n\n    if (post.userName.indexOf(searchFilter) === -1 && post.title.indexOf(searchFilter) === -1 && post.body.indexOf(searchFilter) === -1) {\n      continue;\n    }\n\n    if (post.userName === userName) {\n      followingsAndSelfPosts.push(post);\n    } else {\n      for (let following of followings) {\n        if (post.userName === following.userName) {\n          followingsAndSelfPosts.push(post);\n        }\n      }\n    }\n  }\n\n  followingsAndSelfPosts.sort((postA, postB) => {\n    return postB.timestamp - postA.timestamp;\n  });\n  return followingsAndSelfPosts;\n}\nexport function checkUserNamePassword(userName, password) {\n  return userNamePasswordMap.get(userName) === password;\n}\nexport function addUser(userName, email, phone, DOB, zipcode, displayName, password) {\n  userNamePasswordMap.set(userName, password);\n  userNameIdMap.set(userName, newID);\n  idUserNameMap.set(newID, userName);\n  let newUserInfo = {};\n  newUserInfo.email = email;\n  newUserInfo.id = newID;\n  newUserInfo.status = null;\n  newUserInfo.phone = phone;\n  newUserInfo.DOB = DOB;\n  newUserInfo.followings = getFollowings(userName);\n  newUserInfo.zipcode = zipcode;\n  newUserInfo.displayName = displayName;\n  newUserInfo.avatar = \"https://joeschmoe.io/api/v1/\" + userName;\n  userNameInfoMap.set(userName, newUserInfo);\n}\nlet newID = 11;\nexport function getNewUserID() {\n  return newID++;\n}\nexport function removeNewUserID() {\n  //only for test\n  if (newID > 11) {\n    --newID;\n  }\n}\nexport function removeUser(userName) {\n  idUserNameMap.delete(userNameIdMap.get(userName));\n  userNamePasswordMap.delete(userName);\n  userNameInfoMap.delete(userName);\n  userNameIdMap.delete(userName);\n}\nlet postID = 101;\nexport function getNewPostID() {\n  return postID++;\n}\nexport function removeNewPostID() {\n  //only for test\n  if (postID > 101) {\n    --postID;\n  }\n}\nexport function addPost(post) {\n  posts.push(post);\n}\nexport function removePost(id) {\n  posts.splice(id - 1, 1);\n}\nexport function updateUser(userName, info) {\n  let temp = userNameInfoMap.get(userName);\n  temp.status = info.status;\n  temp.email = info.email;\n  temp.phone = info.phone;\n  temp.DOB = info.DOB;\n  temp.zipcode = info.zipcode;\n  temp.displayName = info.displayName;\n  userNameInfoMap.set(userName, temp);\n}\nexport const initialState = curLogin ? {\n  isAuthenticated: true,\n  logInOrRegisterMessage: null,\n  updateProfileMessage: null,\n  addFollowingMessage: null,\n  menuState: \"home\",\n  id: userNameIdMap.get(curLogin),\n  userName: window.localStorage.getItem(\"userName\"),\n  avatar: userNameInfoMap.get(curLogin).avatar,\n  email: userNameInfoMap.get(curLogin).email,\n  phone: userNameInfoMap.get(curLogin).phone,\n  DOB: userNameInfoMap.get(curLogin).DOB,\n  zipcode: userNameInfoMap.get(curLogin).zipcode,\n  displayName: userNameInfoMap.get(curLogin).displayName,\n  followings: userNameInfoMap.get(curLogin).followings,\n  status: userNameInfoMap.get(curLogin).status,\n  // company's catch phrase\n  searchWord: \"\",\n  selectedPosts: getFollowingsAndSelfPosts(curLogin, userNameInfoMap.get(curLogin).followings)\n} : {\n  isAuthenticated: false,\n  logInOrRegisterMessage: null,\n  updateProfileMessage: null,\n  addFollowingMessage: null,\n  menuState: \"logout\",\n  id: null,\n  userName: null,\n  avatar: null,\n  email: null,\n  phone: null,\n  DOB: null,\n  zipcode: null,\n  displayName: null,\n  followings: [],\n  status: null,\n  // company's catch phrase\n  searchWord: \"\",\n  selectedPosts: []\n};","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/fake_backend.js"],"names":["moment","userNamePasswordMap","Map","userNameInfoMap","idUserNameMap","userNameIdMap","posts","infosRequest","XMLHttpRequest","open","send","infoRaw","eval","responseText","item","set","id","username","address","street","phone","email","zipcode","displayName","status","company","catchPhrase","DOB","avatar","curLogin","window","localStorage","getItem","has","removeItem","getFollowingsID","getFollowings","userName","followingsID","get","followings","push","temp","postsRequest","postsRaw","userId","title","body","image","timestamp","Math","ceil","Date","valueOf","random","comments","author","content","getFollowingsAndSelfPosts","searchFilter","followingsAndSelfPosts","i","length","post","indexOf","following","sort","postA","postB","checkUserNamePassword","password","addUser","newID","newUserInfo","getNewUserID","removeNewUserID","removeUser","delete","postID","getNewPostID","removeNewPostID","addPost","removePost","splice","updateUser","info","initialState","isAuthenticated","logInOrRegisterMessage","updateProfileMessage","addFollowingMessage","menuState","searchWord","selectedPosts"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nexport let userNamePasswordMap = new Map();\nexport let userNameInfoMap = new Map();\nexport let idUserNameMap = new Map();\nexport let userNameIdMap = new Map();\n\nexport let posts = [];\n\nlet infosRequest = new XMLHttpRequest();\ninfosRequest.open(\"GET\", \"https://jsonplaceholder.typicode.com/users\", false);\ninfosRequest.send(null);\nlet infoRaw = eval(infosRequest.responseText);\n\nfor (let item of infoRaw) {\n    idUserNameMap.set(item.id, item.username);\n    userNameIdMap.set(item.username, item.id);\n    userNamePasswordMap.set(item.username, item.address.street);\n    userNameInfoMap.set(item.username, {\n        id: item.id,\n        phone: item.phone,\n        email: item.email,\n        zipcode: item.address.zipcode,\n        displayName: item.displayName,\n        status: item.company.catchPhrase,\n        DOB: moment(\"2000-01-01\"),\n        avatar: \"https://joeschmoe.io/api/v1/\" + item.username,\n    });\n}\n\nlet curLogin = window.localStorage.getItem(\"userName\");\nif (userNameInfoMap.has(curLogin)) {\n} else {\n    window.localStorage.removeItem(\"userName\");\n}\ncurLogin = window.localStorage.getItem(\"userName\");\n\nfunction getFollowingsID(id) { // hard code now\n    if (id === 1) {\n        return [2, 3, 4];\n    } else if (id === 2) {\n        return [1, 3, 4];\n    } else if (id === 3) {\n        return [1, 2, 4];\n    } else if (id <= 10) {\n        return [1, 2, 3];\n    } else return [1];\n}\n\nexport function getFollowings(userName) {\n    let followingsID = getFollowingsID(userNameIdMap.get(userName));\n    let followings = [];\n    for (let id of followingsID) {\n        followings.push({\n            userName: idUserNameMap.get(id),\n            avatar: userNameInfoMap.get(idUserNameMap.get(id)).avatar,\n            status: userNameInfoMap.get(idUserNameMap.get(id)).status,\n        });\n    }\n    return followings;\n}\n\nfor (let item of infoRaw) {\n    let temp = userNameInfoMap.get(item.username);\n    temp.followings = getFollowings(item.username);\n    userNameInfoMap.set(item.username, temp);\n}\n\nlet postsRequest = new XMLHttpRequest();\npostsRequest.open(\"GET\", \"https://jsonplaceholder.typicode.com/posts\", false);\npostsRequest.send(null);\nlet postsRaw = eval(postsRequest.responseText);\n\nfor (let item of postsRaw) {\n    posts.push({\n        userName: idUserNameMap.get(item.userId),\n        id: item.id,\n        title: item.title,\n        body: item.body,\n        avatar: userNameInfoMap.get(idUserNameMap.get(item.userId)).avatar,\n        image: \"https://picsum.photos/200/200?random=\" + item.title,\n        timestamp: Math.ceil((new Date().valueOf() - 1000000000000) * Math.random() + 1000000000000),\n        comments: [ // Hard code here\n            {\n                author: \"Bret\",\n                avatar: userNameInfoMap.get(\"Bret\").avatar,\n                content: \"quia et suscipit\\\\nsuscipit recusandae consequuntur expedita et cum\\\\nreprehenderit molestiae ut ut quas totam\\\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            {\n                author: \"Antonette\",\n                avatar: userNameInfoMap.get(\"Antonette\").avatar,\n                content: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n            },\n            {\n                author: \"Samantha\",\n                avatar: userNameInfoMap.get(\"Samantha\").avatar,\n                content: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n            }\n        ],\n    })\n}\n\nexport function getFollowingsAndSelfPosts(userName, followings, searchFilter = \"\") {\n    let followingsAndSelfPosts = [];\n    for (let i = posts.length - 1; i >= 0; --i) {\n        let post = posts[i];\n        if (post.userName.indexOf(searchFilter) === -1\n            && post.title.indexOf(searchFilter) === -1\n            && post.body.indexOf(searchFilter) === -1) {\n            continue;\n        }\n        if (post.userName === userName) {\n            followingsAndSelfPosts.push(post);\n        } else {\n            for (let following of followings) {\n                if (post.userName === following.userName) {\n                    followingsAndSelfPosts.push(post);\n                }\n            }\n        }\n    }\n    followingsAndSelfPosts.sort((postA, postB) => {\n        return postB.timestamp - postA.timestamp;\n    })\n    return followingsAndSelfPosts;\n}\n\nexport function checkUserNamePassword(userName, password) {\n    return userNamePasswordMap.get(userName) === password;\n}\n\nexport function addUser(userName, email, phone, DOB, zipcode, displayName, password) {\n    userNamePasswordMap.set(userName, password);\n    userNameIdMap.set(userName, newID);\n    idUserNameMap.set(newID, userName);\n    let newUserInfo = {};\n    newUserInfo.email = email;\n    newUserInfo.id = newID;\n    newUserInfo.status = null;\n    newUserInfo.phone = phone;\n    newUserInfo.DOB = DOB;\n    newUserInfo.followings = getFollowings(userName);\n    newUserInfo.zipcode = zipcode;\n    newUserInfo.displayName = displayName;\n    newUserInfo.avatar = \"https://joeschmoe.io/api/v1/\" + userName;\n    userNameInfoMap.set(userName, newUserInfo);\n}\n\nlet newID = 11;\n\nexport function getNewUserID() {\n    return newID++;\n}\n\nexport function removeNewUserID() { //only for test\n    if (newID > 11) {\n        --newID;\n    }\n}\n\nexport function removeUser(userName) {\n    idUserNameMap.delete(userNameIdMap.get(userName))\n    userNamePasswordMap.delete(userName);\n    userNameInfoMap.delete(userName);\n    userNameIdMap.delete(userName);\n}\n\nlet postID = 101;\n\nexport function getNewPostID() {\n    return postID++;\n}\n\nexport function removeNewPostID() { //only for test\n    if (postID > 101) {\n        --postID;\n    }\n}\n\nexport function addPost(post) {\n    posts.push(post);\n}\n\nexport function removePost(id) {\n    posts.splice(id - 1, 1);\n}\n\nexport function updateUser(userName, info) {\n    let temp = userNameInfoMap.get(userName);\n    temp.status = info.status;\n    temp.email = info.email;\n    temp.phone = info.phone;\n    temp.DOB = info.DOB;\n    temp.zipcode = info.zipcode;\n    temp.displayName = info.displayName;\n    userNameInfoMap.set(userName, temp);\n}\n\nexport const initialState = curLogin ? {\n    isAuthenticated: true,\n    logInOrRegisterMessage: null,\n    updateProfileMessage: null,\n    addFollowingMessage: null,\n    menuState: \"home\",\n    id: userNameIdMap.get(curLogin),\n    userName: window.localStorage.getItem(\"userName\"),\n    avatar: userNameInfoMap.get(curLogin).avatar,\n    email: userNameInfoMap.get(curLogin).email,\n    phone: userNameInfoMap.get(curLogin).phone,\n    DOB: userNameInfoMap.get(curLogin).DOB,\n    zipcode: userNameInfoMap.get(curLogin).zipcode,\n    displayName: userNameInfoMap.get(curLogin).displayName,\n    followings: userNameInfoMap.get(curLogin).followings,\n    status: userNameInfoMap.get(curLogin).status, // company's catch phrase\n    searchWord: \"\",\n    selectedPosts: getFollowingsAndSelfPosts(curLogin, userNameInfoMap.get(curLogin).followings)\n} : {\n    isAuthenticated: false,\n    logInOrRegisterMessage: null,\n    updateProfileMessage: null,\n    addFollowingMessage: null,\n    menuState: \"logout\",\n    id: null,\n    userName: null,\n    avatar: null,\n    email: null,\n    phone: null,\n    DOB: null,\n    zipcode: null,\n    displayName: null,\n    followings: [],\n    status: null, // company's catch phrase\n    searchWord: \"\",\n    selectedPosts: []\n}"]},"metadata":{},"sourceType":"module"}