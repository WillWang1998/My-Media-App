{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Profile.js\";\nimport React from \"react\";\nimport { Button, Card, DatePicker, Divider, Form, Input, message, Upload } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { formItemLayout, tailFormItemLayout } from \"./Landing\";\nimport moment from \"moment\";\nimport { updateInfo, updatePassword } from \"../actions\";\nimport { disabledDate } from './RegisterForm';\nimport MyMediaMenu from \"./Menu\";\nimport { store } from \"../index\"; // TODO: 1. Change avatar\n//       2. Avatar hover\n//       3. Refactor with hook\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  message.config({\n    rtl: false\n  });\n\n  const onInfoFinish = values => {\n    props.updateInfo({\n      email: values.email,\n      status: values.status,\n      phone: values.phone,\n      DOB: values.DOB,\n      zipcode: values.zipcode,\n      displayName: values.displayName\n    });\n    let curState = store.getState();\n\n    if (curState.isUpdateSuccessful) {\n      message.success(curState.updateProfileMessage, 1).then();\n    }\n  };\n\n  const onPasswordFinish = values => {\n    props.updatePassword({\n      curPassword: values.curPassword,\n      newPassword: values.newPassword\n    });\n    let curState = store.getState();\n\n    if (curState.isUpdateSuccessful) {\n      message.success(curState.updateProfileMessage, 1).then();\n    } else {\n      message.error(curState.updateProfileMessage, 1).then();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyMediaMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '50%',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n        name: \"updateInformation\",\n        autoComplete: \"off\",\n        onFinish: onInfoFinish,\n        initialValues: {\n          'displayName': props.displayName,\n          'status': props.status,\n          'email': props.email,\n          'phone': props.phone,\n          'DOB': moment(props.DOB ? props.DOB : \"\", 'MM/DD/YYYY'),\n          'zipcode': props.zipcode\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"avatar\",\n          label: \"Avatar\",\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            listType: \"picture-card\",\n            showUploadList: false,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.avatar,\n              style: {\n                width: '100%'\n              },\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userName\",\n          label: \"Username\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ant-form-text\",\n            children: props.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"displayName\",\n          label: \"Display Name\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"status\",\n          label: \"Status\",\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: 'email',\n            message: 'Please input your valid E-mail like a@b.co!'\n          }, {\n            required: true,\n            message: 'Please input your E-mail!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"Phone Number\",\n          rules: [{\n            pattern: /^[0-9]{10}$/,\n            message: 'Please input your phone number like 1231231234!'\n          }, {\n            required: true,\n            message: 'Please input your phone number!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"DOB\",\n          label: \"Date of Birth\",\n          rules: [{\n            required: true,\n            message: 'Please input your date of birth!'\n          }],\n          extra: \"Only individuals 18 years of age or older on the day of registration are allowed to register.\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            format: 'MM/DD/YYYY',\n            style: {\n              width: '100%'\n            },\n            disabledDate: disabledDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"zipcode\",\n          label: \"Zipcode\",\n          rules: [{\n            pattern: /^[0-9]{5}$/,\n            message: 'Please input your phone zipcode like 12345!'\n          }, {\n            required: true,\n            message: 'Please input your phone zipcode!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n        name: \"updatePassword\",\n        autoComplete: \"off\",\n        onFinish: onPasswordFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"curPassword\",\n          label: \"Current Password\",\n          rules: [{\n            required: true,\n            message: 'Please input your current password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            visibilityToggle: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"newPassword\",\n          label: \"New Password\",\n          rules: [{\n            required: true,\n            message: 'Please input your new password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            visibilityToggle: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"newPasswordConfirmation\",\n          label: \"New Password Confirmation\",\n          dependencies: ['newPassword'],\n          rules: [{\n            required: true,\n            message: 'Please confirm your new password!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('newPassword') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('The two passwords you entered do not match!'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            visibilityToggle: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Profile;\n\nconst mapStateToProps = state => {\n  return {\n    userName: state.userName,\n    avatar: state.avatar,\n    status: state.status,\n    displayName: state.displayName,\n    email: state.email,\n    phone: state.phone,\n    DOB: state.DOB,\n    zipcode: state.zipcode,\n    password: state.password,\n    updateProfileMessage: state.updateProfileMessage,\n    menuState: state.menuState\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateInfo: values => dispatch(updateInfo(values)),\n    updatePassword: values => dispatch(updatePassword(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/Profile.js"],"names":["React","Button","Card","DatePicker","Divider","Form","Input","message","Upload","connect","formItemLayout","tailFormItemLayout","moment","updateInfo","updatePassword","disabledDate","MyMediaMenu","store","Profile","props","config","rtl","onInfoFinish","values","email","status","phone","DOB","zipcode","displayName","curState","getState","isUpdateSuccessful","success","updateProfileMessage","then","onPasswordFinish","curPassword","newPassword","error","width","position","left","top","transform","avatar","userName","type","required","pattern","getFieldValue","validator","_","value","Promise","resolve","reject","Error","mapStateToProps","state","password","menuState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Card, DatePicker, Divider, Form, Input, message, Upload} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {formItemLayout, tailFormItemLayout} from \"./Landing\";\nimport moment from \"moment\";\nimport {updateInfo, updatePassword} from \"../actions\";\nimport {disabledDate} from './RegisterForm'\nimport MyMediaMenu from \"./Menu\";\nimport {store} from \"../index\";\n\n\n// TODO: 1. Change avatar\n//       2. Avatar hover\n//       3. Refactor with hook\nconst Profile = (props) => {\n\n    message.config({\n        rtl: false,\n    });\n\n    const onInfoFinish = (values) => {\n        props.updateInfo({\n            email: values.email,\n            status: values.status,\n            phone: values.phone,\n            DOB: values.DOB,\n            zipcode: values.zipcode,\n            displayName: values.displayName,\n        });\n        let curState = store.getState();\n        if (curState.isUpdateSuccessful) {\n            message.success(curState.updateProfileMessage, 1).then();\n        }\n    };\n\n    const onPasswordFinish = (values) => {\n        props.updatePassword({\n            curPassword: values.curPassword,\n            newPassword: values.newPassword,\n        });\n        let curState = store.getState();\n        if (curState.isUpdateSuccessful) {\n            message.success(curState.updateProfileMessage, 1).then();\n        } else {\n            message.error(curState.updateProfileMessage, 1).then();\n        }\n    };\n\n    return (\n        <>\n            <MyMediaMenu/>\n            <Card style={{\n                width: '50%',\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                transform: 'translate(-50%, -50%)'\n            }}>\n                <Divider orientation=\"left\">Information</Divider>\n                <Form {...formItemLayout}\n                      name=\"updateInformation\"\n                      autoComplete=\"off\"\n                      onFinish={onInfoFinish}\n                      initialValues={{\n                          'displayName': props.displayName,\n                          'status': props.status,\n                          'email': props.email,\n                          'phone': props.phone,\n                          'DOB': moment(props.DOB ? props.DOB : \"\", 'MM/DD/YYYY'),\n                          'zipcode': props.zipcode\n                      }}\n\n                >\n                    <Form.Item name=\"avatar\"\n                               label=\"Avatar\"\n                    >\n                        <Upload\n                            listType=\"picture-card\"\n                            showUploadList={false}\n                        >\n                            <img src={props.avatar} style={{width: '100%'}} alt=\"avatar\"/>\n                        </Upload>\n                    </Form.Item>\n\n                    <Form.Item name=\"userName\"\n                               label=\"Username\"\n                    >\n                        <span className=\"ant-form-text\">\n                            {props.userName}\n                        </span>\n                    </Form.Item>\n\n                    <Form.Item name=\"displayName\"\n                               label=\"Display Name\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"status\"\n                               label=\"Status\"\n                    >\n                        <Input.TextArea rows={4}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"email\"\n                               label=\"E-mail\"\n                               rules={[\n                                   {\n                                       type: 'email',\n                                       message: 'Please input your valid E-mail like a@b.co!',\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your E-mail!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"phone\"\n                               label=\"Phone Number\"\n                               rules={[\n                                   {\n                                       pattern: /^[0-9]{10}$/,\n                                       message: 'Please input your phone number like 1231231234!'\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your phone number!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item name=\"DOB\"\n                               label=\"Date of Birth\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your date of birth!',\n                                   },\n                               ]}\n                               extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n                    >\n                        <DatePicker format={'MM/DD/YYYY'}\n                                    style={{width: '100%'}}\n                                    disabledDate={disabledDate}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"zipcode\"\n                               label=\"Zipcode\"\n                               rules={[\n                                   {\n                                       pattern: /^[0-9]{5}$/,\n                                       message: 'Please input your phone zipcode like 12345!'\n                                   },\n                                   {\n                                       required: true,\n                                       message: 'Please input your phone zipcode!',\n                                   },\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <Divider orientation=\"left\">Password</Divider>\n                <Form {...formItemLayout}\n                      name=\"updatePassword\"\n                      autoComplete=\"off\"\n                      onFinish={onPasswordFinish}\n                >\n                    <Form.Item name=\"curPassword\"\n                               label=\"Current Password\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your current password!',\n                                   }\n                               ]}\n\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item name=\"newPassword\"\n                               label=\"New Password\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please input your new password!',\n                                   }\n                               ]}\n\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"newPasswordConfirmation\"\n                        label=\"New Password Confirmation\"\n                        dependencies={['newPassword']}\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your new password!',\n                            },\n                            ({getFieldValue}) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('newPassword') === value) {\n                                        return Promise.resolve();\n                                    }\n                                    return Promise.reject(new Error('The two passwords you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password visibilityToggle={false}/>\n                    </Form.Item>\n\n                    <Form.Item {...tailFormItemLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userName: state.userName,\n        avatar: state.avatar,\n        status: state.status,\n        displayName: state.displayName,\n        email: state.email,\n        phone: state.phone,\n        DOB: state.DOB,\n        zipcode: state.zipcode,\n        password: state.password,\n        updateProfileMessage: state.updateProfileMessage,\n        menuState: state.menuState,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateInfo: (values) => dispatch(updateInfo(values)),\n        updatePassword: (values) => dispatch(updatePassword(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}