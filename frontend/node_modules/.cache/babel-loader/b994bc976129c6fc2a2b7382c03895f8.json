{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Input, Comment as AntdComment, message } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  _s();\n\n  message.config({\n    rtl: false\n  });\n  const [hideEditor, setHideEditor] = useState(true);\n  const [id, setId] = useState(props.id);\n  const [username, setUsername] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [timeStamp, setTimeStamp] = useState(0);\n\n  const load = async () => {\n    await fetch(\"http://localhost:4000/comment/\" + id, {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(async res => {\n      console.log(\"comment load res\", res);\n      setAuthor(res.author);\n      setUsername(res.username);\n      setText(res.text);\n      setTimeStamp(res.timestamp);\n      console.log(\"comment load author\", author);\n      await fetch(\"http://localhost:4000/profile/\" + author, {\n        method: \"GET\",\n        credentials: \"include\"\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(res => {\n        console.log(\"comment load profile\", res);\n        setAuthorDisplayedName(res.displayedName);\n        setAvatar(res.avatar);\n      }).catch(err => message.error(err, 1));\n    }).catch(err => message.error(err, 1));\n  };\n\n  const onDelete = async () => {\n    await fetch(\"http://localhost:4000/comment/\" + id, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        articleId: props.articleId\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(() => {\n      props.deleteAction(props.id);\n      message.success(\"Delete successfully!\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  const onSubmit = async value => {\n    if (!value) {\n      message.error(\"Please input your comment!\", 1);\n      return;\n    }\n\n    await fetch(\"http://localhost:4000/comment/\" + id, {\n      method: \"PUT\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: value\n      })\n    }).then(res => {\n      if (res.ok) {\n        showBackendMessage();\n        return res.json();\n      } else {\n        throw res.statusText;\n      }\n    }).then(res => {\n      setText(res.text);\n      message.success(\"Update successfully!\");\n    }).catch(err => message.error(err, 1));\n  };\n\n  useEffect(() => load(), []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(AntdComment, {\n      author: authorDisplayedName,\n      avatar: avatar,\n      content: text,\n      actions: username === author ? [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: () => setHideEditor(!hideEditor),\n        children: [/*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), \"Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: async () => {\n          setHideEditor(true);\n          await onDelete();\n        },\n        children: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)] : [],\n      datetime: new Date(timeStamp).toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: hideEditor,\n      children: /*#__PURE__*/_jsxDEV(Input.Search, {\n        allowClear: true,\n        onSearch: onSubmit,\n        defaultValue: text,\n        enterButton: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"9ES/qen3MWoeDGt26J/vmebVgoY=\");\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-WillWang1998/src/component/Comment.js"],"names":["React","useEffect","useState","Button","Input","Comment","AntdComment","message","DeleteOutlined","EditOutlined","showBackendMessage","props","config","rtl","hideEditor","setHideEditor","id","setId","username","setUsername","author","setAuthor","authorDisplayedName","setAuthorDisplayedName","avatar","setAvatar","text","setText","timeStamp","setTimeStamp","load","fetch","method","credentials","then","res","ok","json","statusText","console","log","timestamp","displayedName","catch","err","error","onDelete","headers","body","JSON","stringify","articleId","deleteAction","success","onSubmit","value","Date","toLocaleString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,OAAO,IAAIC,WAAlC,EAA+CC,OAA/C,QAA6D,MAA7D;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,mBAA3C;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;;;AAEA,MAAML,OAAO,GAAIM,KAAD,IAAW;AAAA;;AACvBJ,EAAAA,OAAO,CAACK,MAAR,CAAe;AACXC,IAAAA,GAAG,EAAE;AADM,GAAf;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACc,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAACS,KAAK,CAACK,EAAP,CAA5B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,mBAAD,EAAsBC,sBAAtB,IAAgDrB,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAM4B,IAAI,GAAG,YAAY;AACrB,UAAMC,KAAK,CAAC,mCAAmCf,EAApC,EAAwC;AAC/CgB,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,WAAW,EAAE;AAFkC,KAAxC,CAAL,CAGHC,IAHG,CAGEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR1B,QAAAA,kBAAkB;AAClB,eAAOyB,GAAG,CAACE,IAAJ,EAAP;AACH,OAHD,MAGO;AACH,cAAMF,GAAG,CAACG,UAAV;AACH;AACJ,KAVK,EAUHJ,IAVG,CAUE,MAAMC,GAAN,IAAa;AACjBI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,GAAhC;AACAd,MAAAA,SAAS,CAACc,GAAG,CAACf,MAAL,CAAT;AACAD,MAAAA,WAAW,CAACgB,GAAG,CAACjB,QAAL,CAAX;AACAS,MAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACAG,MAAAA,YAAY,CAACM,GAAG,CAACM,SAAL,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCpB,MAAnC;AACA,YAAMW,KAAK,CAAC,mCAAmCX,MAApC,EAA4C;AACnDY,QAAAA,MAAM,EAAE,KAD2C;AAEnDC,QAAAA,WAAW,EAAE;AAFsC,OAA5C,CAAL,CAGHC,IAHG,CAGEC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,EAAR,EAAY;AACR1B,UAAAA,kBAAkB;AAClB,iBAAOyB,GAAG,CAACE,IAAJ,EAAP;AACH,SAHD,MAGO;AACH,gBAAMF,GAAG,CAACG,UAAV;AACH;AACJ,OAVK,EAUHJ,IAVG,CAUEC,GAAG,IAAI;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,GAApC;AACAZ,QAAAA,sBAAsB,CAACY,GAAG,CAACO,aAAL,CAAtB;AACAjB,QAAAA,SAAS,CAACU,GAAG,CAACX,MAAL,CAAT;AACH,OAdK,EAcHmB,KAdG,CAcGC,GAAG,IAAIrC,OAAO,CAACsC,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAdV,CAAN;AAeH,KAhCK,EAgCHD,KAhCG,CAgCGC,GAAG,IAAIrC,OAAO,CAACsC,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAhCV,CAAN;AAiCH,GAlCD;;AAoCA,QAAME,QAAQ,GAAG,YAAY;AACzB,UAAMf,KAAK,CAAC,mCAAmCf,EAApC,EAAwC;AAC/CgB,MAAAA,MAAM,EAAE,QADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/Cc,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,SAAS,EAAExC,KAAK,CAACwC;AADA,OAAf;AANyC,KAAxC,CAAL,CASHjB,IATG,CASEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR1B,QAAAA,kBAAkB;AAClB,eAAOyB,GAAG,CAACE,IAAJ,EAAP;AACH,OAHD,MAGO;AACH,cAAMF,GAAG,CAACG,UAAV;AACH;AACJ,KAhBK,EAgBHJ,IAhBG,CAgBE,MAAM;AACVvB,MAAAA,KAAK,CAACyC,YAAN,CAAmBzC,KAAK,CAACK,EAAzB;AACAT,MAAAA,OAAO,CAAC8C,OAAR,CAAgB,sBAAhB;AACH,KAnBK,EAmBHV,KAnBG,CAmBGC,GAAG,IAAIrC,OAAO,CAACsC,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAnBV,CAAN;AAoBH,GArBD;;AAuBA,QAAMU,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9B,QAAI,CAACA,KAAL,EAAY;AACRhD,MAAAA,OAAO,CAACsC,KAAR,CAAc,4BAAd,EAA4C,CAA5C;AACA;AACH;;AACD,UAAMd,KAAK,CAAC,mCAAmCf,EAApC,EAAwC;AAC/CgB,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/Cc,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBxB,QAAAA,IAAI,EAAE6B;AADW,OAAf;AANyC,KAAxC,CAAL,CASHrB,IATG,CASEC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR1B,QAAAA,kBAAkB;AAClB,eAAOyB,GAAG,CAACE,IAAJ,EAAP;AACH,OAHD,MAGO;AACH,cAAMF,GAAG,CAACG,UAAV;AACH;AACJ,KAhBK,EAgBHJ,IAhBG,CAgBEC,GAAG,IAAI;AACXR,MAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACAnB,MAAAA,OAAO,CAAC8C,OAAR,CAAgB,sBAAhB;AACH,KAnBK,EAmBHV,KAnBG,CAmBGC,GAAG,IAAIrC,OAAO,CAACsC,KAAR,CAAcD,GAAd,EAAmB,CAAnB,CAnBV,CAAN;AAoBH,GAzBD;;AA2BA3C,EAAAA,SAAS,CAAC,MAAM6B,IAAI,EAAX,EAAe,EAAf,CAAT;AAEA,sBACI;AAAA,4BACA,QAAC,WAAD;AACI,MAAA,MAAM,EAAER,mBADZ;AAEI,MAAA,MAAM,EAAEE,MAFZ;AAGI,MAAA,OAAO,EAAEE,IAHb;AAII,MAAA,OAAO,EACHR,QAAQ,KAAKE,MAAb,GAAsB,cAClB,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,MAAML,aAAa,CAAC,CAACD,UAAF,CAAhD;AAAA,gCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADkB,eAIlB,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,YAAY;AACrCC,UAAAA,aAAa,CAAC,IAAD,CAAb;AACA,gBAAM+B,QAAQ,EAAd;AACH,SAHD;AAAA,gCAII,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJkB,CAAtB,GAUI,EAfZ;AAiBI,MAAA,QAAQ,EAAG,IAAIU,IAAJ,CAAS5B,SAAT,CAAD,CAAsB6B,cAAtB;AAjBd;AAAA;AAAA;AAAA;AAAA,YADA,eAoBA;AAAK,MAAA,MAAM,EAAE3C,UAAb;AAAA,6BACI,QAAC,KAAD,CAAO,MAAP;AACI,QAAA,UAAU,MADd;AAEI,QAAA,QAAQ,EAAEwC,QAFd;AAGI,QAAA,YAAY,EAAE5B,IAHlB;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CArID;;GAAMrB,O;;KAAAA,O;AAuIN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Button, Input, Comment as AntdComment, message} from \"antd\";\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {showBackendMessage} from \"../util/Functions\";\n\nconst Comment = (props) => {\n    message.config({\n        rtl: false,\n    });\n\n    const [hideEditor, setHideEditor] = useState(true);\n    const [id, setId] = useState(props.id);\n    const [username, setUsername] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [authorDisplayedName, setAuthorDisplayedName] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n    const [text, setText] = useState(\"\");\n    const [timeStamp, setTimeStamp] = useState(0);\n\n    const load = async () => {\n        await fetch(\"http://localhost:4000/comment/\" + id, {\n            method: \"GET\",\n            credentials: \"include\"\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(async res => {\n            console.log(\"comment load res\", res);\n            setAuthor(res.author);\n            setUsername(res.username);\n            setText(res.text);\n            setTimeStamp(res.timestamp);\n            console.log(\"comment load author\", author);\n            await fetch(\"http://localhost:4000/profile/\" + author, {\n                method: \"GET\",\n                credentials: \"include\",\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                console.log(\"comment load profile\", res);\n                setAuthorDisplayedName(res.displayedName);\n                setAvatar(res.avatar);\n            }).catch(err => message.error(err, 1));\n        }).catch(err => message.error(err, 1));\n    }\n\n    const onDelete = async () => {\n        await fetch(\"http://localhost:4000/comment/\" + id, {\n            method: \"DELETE\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                articleId: props.articleId,\n            })\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(() => {\n            props.deleteAction(props.id);\n            message.success(\"Delete successfully!\");\n        }).catch(err => message.error(err, 1));\n    };\n\n    const onSubmit = async (value) => {\n        if (!value) {\n            message.error(\"Please input your comment!\", 1);\n            return;\n        }\n        await fetch(\"http://localhost:4000/comment/\" + id, {\n            method: \"PUT\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                text: value,\n            }),\n        }).then(res => {\n            if (res.ok) {\n                showBackendMessage();\n                return res.json();\n            } else {\n                throw res.statusText;\n            }\n        }).then(res => {\n            setText(res.text);\n            message.success(\"Update successfully!\");\n        }).catch(err => message.error(err, 1));\n    }\n\n    useEffect(() => load(), []);\n\n    return (\n        <li>\n        <AntdComment\n            author={authorDisplayedName}\n            avatar={avatar}\n            content={text}\n            actions={\n                username === author ? [\n                    <Button type=\"link\" onClick={() => setHideEditor(!hideEditor)}>\n                        <EditOutlined/>Edit\n                    </Button>,\n                    <Button type=\"link\" onClick={async () => {\n                        setHideEditor(true)\n                        await onDelete();\n                    }}>\n                        <DeleteOutlined/>Delete\n                    </Button>\n                ] : []\n            }\n            datetime={(new Date(timeStamp)).toLocaleString()}\n        />\n        <div hidden={hideEditor}>\n            <Input.Search\n                allowClear\n                onSearch={onSubmit}\n                defaultValue={text}\n                enterButton=\"Comment\"\n            />\n        </div>\n        </li>\n    )\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}