{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/MinProfile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Avatar, Card, Input, Button, Space, Divider } from \"antd\";\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { updateStatus } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MinProfile = props => {\n  _s();\n\n  const [editing, setEditing] = React.useState(false);\n  const [status, setStatus] = React.useState(props.status);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: \"Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this),\n      title: props.userName,\n      description: /*#__PURE__*/_jsxDEV(Space, {\n        size: 0,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          onClick: () => {\n            if (editing) {\n              setEditing(false);\n              props.updateStatus({\n                status: status\n              });\n            } else {\n              setEditing(true);\n            }\n          },\n          children: editing ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), editing ? /*#__PURE__*/_jsxDEV(Input, {\n          value: status,\n          onChange: e => {\n            setStatus(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MinProfile, \"JDR0C+EfyGLImT8eqGc0JwWyfLs=\");\n\n_c = MinProfile;\n\nconst mapStateToProps = state => {\n  return {\n    avatar: state.avatar,\n    userName: state.userName,\n    status: state.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateStatus: values => dispatch(updateStatus(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MinProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"MinProfile\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/MinProfile.js"],"names":["React","Avatar","Card","Input","Button","Space","Divider","CheckOutlined","EditOutlined","connect","updateStatus","MinProfile","props","editing","setEditing","useState","status","setStatus","avatar","userName","e","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","values"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,QAA0D,MAA1D;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,mBAA1C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,YAA3B;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,KAAK,CAACe,QAAN,CAAeH,KAAK,CAACI,MAArB,CAA5B;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,IAAhB;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,WAAW,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,KAAK,CAACM;AAAnB;AAAA;AAAA;AAAA;AAAA,cADZ;AAEI,MAAA,KAAK,EAAEN,KAAK,CAACO,QAFjB;AAGI,MAAA,WAAW,eACP,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,CAAb;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,OAAO,EAAE,MAAM;AAC/B,gBAAIN,OAAJ,EAAa;AACTC,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,cAAAA,KAAK,CAACF,YAAN,CAAmB;AACfM,gBAAAA,MAAM,EAAEA;AADO,eAAnB;AAGH,aALD,MAKO;AACHF,cAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,WATD;AAAA,oBAUKD,OAAO,gBACJ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBADI,gBAEJ,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAZR;AAAA;AAAA;AAAA;AAAA,gBADJ,EAeKA,OAAO,gBACJ,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEG,MAAd;AAAsB,UAAA,QAAQ,EAAGI,CAAD,IAAO;AACnCH,YAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBADI,gBAIJ;AAAA,oBAAOV,KAAK,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,gBAnBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CArCD;;GAAML,U;;KAAAA,U;;AAuCN,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,MAAM,EAAEM,KAAK,CAACN,MADX;AAEHC,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAFb;AAGHH,IAAAA,MAAM,EAAEQ,KAAK,CAACR;AAHX,GAAP;AAKH,CAND;;AAQA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,YAAY,EAAGiB,MAAD,IAAYD,QAAQ,CAAChB,YAAY,CAACiB,MAAD,CAAb;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {Avatar, Card, Input, Button, Space, Divider} from \"antd\";\nimport {CheckOutlined, EditOutlined} from \"@ant-design/icons\";\nimport {connect} from \"react-redux\";\nimport {updateStatus} from \"../actions\";\n\n\nconst MinProfile = (props) => {\n\n    const [editing, setEditing] = React.useState(false);\n    const [status, setStatus] = React.useState(props.status);\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">Me</Divider>\n            <Card.Meta\n                avatar={<Avatar src={props.avatar}/>}\n                title={props.userName}\n                description={\n                    <Space size={0}>\n                        <Button type=\"text\" onClick={() => {\n                            if (editing) {\n                                setEditing(false);\n                                props.updateStatus({\n                                    status: status,\n                                })\n                            } else {\n                                setEditing(true);\n                            }\n                        }}>\n                            {editing ?\n                                <CheckOutlined/> :\n                                <EditOutlined/>}\n                        </Button>\n                        {editing ?\n                            <Input value={status} onChange={(e) => {\n                                setStatus(e.target.value);\n                            }}/> :\n                            <span>{props.status}</span>}\n                    </Space>\n                }\n            />\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        avatar: state.avatar,\n        userName: state.userName,\n        status: state.status,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateStatus: (values) => dispatch(updateStatus(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MinProfile);\n\n"]},"metadata":{},"sourceType":"module"}