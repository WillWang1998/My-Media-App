{"ast":null,"code":"var _jsxFileName = \"/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/SubmitOrEditArticle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input, Button, Form, Card, Divider, message } from \"antd\";\nimport { showBackendMessage } from \"../util/Functions\";\nimport ImagesWall from \"./ImageWall\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubmitOrEditArticle = props => {\n  _s();\n\n  const [id, setId] = useState(props.id);\n  const [title, setTitle] = useState(props.title);\n  const [text, setText] = useState(props.text);\n  const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n\n  const onFinish = async values => {\n    if (props.id) {\n      await fetch(\"http://localhost:4000/article\", {\n        method: \"PUT\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: values.title,\n          text: values.text,\n          images: imageUrlsList\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(res => {\n        message.success(\"Edit Successfully\");\n        props.action({\n          id: res._id,\n          title: res.title,\n          text: res.text,\n          timestamp: res.timestamp,\n          images: res.images\n        });\n      }).catch(err => message.error(err, 1));\n    } else {\n      await fetch(\"http://localhost:4000/article\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: values.title,\n          text: values.text,\n          images: imageUrlsList\n        })\n      }).then(res => {\n        if (res.ok) {\n          showBackendMessage().then();\n          return res.json();\n        } else {\n          throw res.statusText;\n        }\n      }).then(res => {\n        message.success(\"Submit Successfully\");\n        props.action(res._id);\n      }).catch(err => message.error(err, 1));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      orientation: \"left\",\n      children: props.id ? \"Edit Post\" : \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onFinish,\n      initialValue: {\n        \"title\": title,\n        \"text\": text\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"text\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(ImagesWall, {\n          imageUrlsList: imageUrlsList,\n          action: newImageUrlsList => setImageUrlsList(newImageUrlsList)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"50%\"\n          },\n          htmlType: \"submit\",\n          type: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: \"50%\"\n          },\n          htmlType: \"reset\",\n          type: \"default\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubmitOrEditArticle, \"iAIOEQZaVvOBWYBt/ojV1B6ORRk=\");\n\n_c = SubmitOrEditArticle;\nexport default SubmitOrEditArticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitOrEditArticle\");","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/final-frontend-willwang1998-copy/src/component/SubmitOrEditArticle.js"],"names":["React","useState","Input","Button","Form","Card","Divider","message","showBackendMessage","ImagesWall","SubmitOrEditArticle","props","id","setId","title","setTitle","text","setText","imageUrlsList","setImageUrlsList","onFinish","values","fetch","method","credentials","headers","body","JSON","stringify","images","then","res","ok","json","statusText","success","action","_id","timestamp","catch","err","error","newImageUrlsList","width"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Input, Button, Form, Card, Divider, message} from \"antd\";\nimport {showBackendMessage} from \"../util/Functions\";\nimport ImagesWall from \"./ImageWall\";\n\nconst SubmitOrEditArticle = (props) => {\n    const [id, setId] = useState(props.id);\n    const [title, setTitle] = useState(props.title);\n    const [text, setText] = useState(props.text);\n    const [imageUrlsList, setImageUrlsList] = useState(props.imageUrlsList);\n\n    const onFinish = async (values) => {\n        if (props.id) {\n            await fetch(\"http://localhost:4000/article\", {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                message.success(\"Edit Successfully\");\n                props.action({\n                    id: res._id,\n                    title: res.title,\n                    text: res.text,\n                    timestamp: res.timestamp,\n                    images: res.images,\n                });\n            }).catch(err => message.error(err, 1));\n        } else {\n            await fetch(\"http://localhost:4000/article\", {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    title: values.title,\n                    text: values.text,\n                    images: imageUrlsList,\n                }),\n            }).then(res => {\n                if (res.ok) {\n                    showBackendMessage().then();\n                    return res.json();\n                } else {\n                    throw res.statusText;\n                }\n            }).then(res => {\n                message.success(\"Submit Successfully\");\n                props.action(res._id);\n            }).catch(err => message.error(err, 1));\n        }\n    }\n\n    return (\n        <Card bordered={true}>\n            <Divider orientation=\"left\">{\n                props.id ? \"Edit Post\" : \"Add New Post\"\n            }</Divider>\n            <Form onFinish={onFinish} initialValue={{\n                \"title\": title,\n                \"text\": text,\n            }}>\n                <Form.Item name=\"title\">\n                    <Input placeholder=\"Title\"/>\n                </Form.Item>\n                <Form.Item name=\"text\">\n                    <Input.TextArea/>\n                </Form.Item>\n                <Form.Item>\n                    <ImagesWall\n                        imageUrlsList={imageUrlsList}\n                        action={newImageUrlsList => setImageUrlsList(newImageUrlsList)} />\n                </Form.Item>\n                <Form.Item>\n                    <Button style={{width: \"50%\"}} htmlType=\"submit\" type=\"primary\">\n                        Submit\n                    </Button>\n                    <Button style={{width: \"50%\"}} htmlType=\"reset\" type=\"default\">\n                        Clear\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    )\n}\n\nexport default SubmitOrEditArticle;\n"]},"metadata":{},"sourceType":"module"}