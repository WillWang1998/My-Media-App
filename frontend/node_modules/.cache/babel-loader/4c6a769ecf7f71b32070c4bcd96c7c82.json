{"ast":null,"code":"import _objectSpread from\"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{message,Button,Form,Input}from\"antd\";import{formItemLayout,tailFormItemLayout}from'./Landing';import{logIn as _logIn}from\"../actions\";import{connect,useStore}from\"react-redux\";import{useHistory}from\"react-router-dom\";// TODO: Refactor with hook\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LogInForm=function LogInForm(props){var history=useHistory();var store=useStore();message.config({rtl:false});var onFinish=function onFinish(values){props.logIn({userName:values.userName,password:values.password});var curState=store.getState();if(curState.isAuthenticated){message.success(curState.logInOrRegisterMessage,1).then(function(r){history.push({pathname:\"/home\"});});}else{message.error(curState.logInOrRegisterMessage);}};return/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({},formItemLayout),{},{name:\"logIn\",autoComplete:\"off\",layout:\"horizontal\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"userName\",label:\"Username\",rules:[{required:true,message:'Please input your username!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},tailFormItemLayout),{},{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Log in\"})}))]}));};var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logIn:function logIn(values){return dispatch(_logIn(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/LogInForm.js"],"names":["React","message","Button","Form","Input","formItemLayout","tailFormItemLayout","logIn","connect","useStore","useHistory","LogInForm","props","history","store","config","rtl","onFinish","values","userName","password","curState","getState","isAuthenticated","success","logInOrRegisterMessage","then","r","push","pathname","error","required","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,CAAiBC,MAAjB,CAAyBC,IAAzB,CAA+BC,KAA/B,KAA2C,MAA3C,CACA,OAAQC,cAAR,CAAwBC,kBAAxB,KAAiD,WAAjD,CACA,OAAQC,KAAK,GAALA,CAAAA,MAAR,KAAoB,YAApB,CACA,OAAQC,OAAR,CAAiBC,QAAjB,KAAgC,aAAhC,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CAEA;wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,GAAMC,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CACA,GAAMI,CAAAA,KAAK,CAAGL,QAAQ,EAAtB,CACAR,OAAO,CAACc,MAAR,CAAe,CACXC,GAAG,CAAE,KADM,CAAf,EAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CACzBN,KAAK,CAACL,KAAN,CAAY,CACRY,QAAQ,CAAED,MAAM,CAACC,QADT,CAERC,QAAQ,CAAEF,MAAM,CAACE,QAFT,CAAZ,EAIA,GAAIC,CAAAA,QAAQ,CAAGP,KAAK,CAACQ,QAAN,EAAf,CACA,GAAID,QAAQ,CAACE,eAAb,CAA8B,CAC1BtB,OAAO,CAACuB,OAAR,CAAgBH,QAAQ,CAACI,sBAAzB,CAAiD,CAAjD,EAAoDC,IAApD,CAAyD,SAAAC,CAAC,CAAI,CAC1Dd,OAAO,CAACe,IAAR,CAAa,CACTC,QAAQ,CAAE,OADD,CAAb,EAGH,CAJD,EAKH,CAND,IAMO,CACH5B,OAAO,CAAC6B,KAAR,CAAcT,QAAQ,CAACI,sBAAvB,EACH,CACJ,CAfD,CAiBA,mBACI,MAAC,IAAD,gCAAUpB,cAAV,MACM,IAAI,CAAC,OADX,CAEM,YAAY,CAAC,KAFnB,CAGM,MAAM,CAAC,YAHb,CAIM,QAAQ,CAAEY,QAJhB,wBAOI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,UAAhB,CACW,KAAK,CAAC,UADjB,CAEW,KAAK,CAAE,CACH,CACIc,QAAQ,CAAE,IADd,CAEI9B,OAAO,CAAE,6BAFb,CADG,CAFlB,uBASI,KAAC,KAAD,IATJ,EAPJ,cAmBI,KAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,UAAhB,CACW,KAAK,CAAC,UADjB,CAEW,KAAK,CAAE,CACH,CACI8B,QAAQ,CAAE,IADd,CAEI9B,OAAO,CAAE,6BAFb,CADG,CAFlB,uBASI,KAAC,KAAD,CAAO,QAAP,IATJ,EAnBJ,cA+BI,KAAC,IAAD,CAAM,IAAN,gCAAeK,kBAAf,4BACI,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,oBADJ,GA/BJ,IADJ,CAuCH,CA/DD,CAiEA,GAAM0B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,EAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACH5B,KAAK,CAAE,eAACW,MAAD,QAAYiB,CAAAA,QAAQ,CAAC5B,MAAK,CAACW,MAAD,CAAN,CAApB,EADJ,CAAP,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACwB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {message, Button, Form, Input} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from './Landing';\nimport {logIn} from \"../actions\";\nimport {connect, useStore} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\n\n// TODO: Refactor with hook\n\nconst LogInForm = (props) => {\n    const history = useHistory();\n    const store = useStore();\n    message.config({\n        rtl: false,\n    });\n\n    const onFinish = (values) => {\n        props.logIn({\n            userName: values.userName,\n            password: values.password,\n        });\n        let curState = store.getState();\n        if (curState.isAuthenticated) {\n            message.success(curState.logInOrRegisterMessage, 1).then(r => {\n                history.push({\n                    pathname: \"/home\",\n                });\n            });\n        } else {\n            message.error(curState.logInOrRegisterMessage);\n        }\n    };\n\n    return (\n        <Form {...formItemLayout}\n              name=\"logIn\"\n              autoComplete=\"off\"\n              layout=\"horizontal\"\n              onFinish={onFinish}\n        >\n\n            <Form.Item name=\"userName\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Log in\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logIn: (values) => dispatch(logIn(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);"]},"metadata":{},"sourceType":"module"}