{"ast":null,"code":"import _objectSpread from\"/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Button,DatePicker,Form,Input,message,Space}from\"antd\";import{formItemLayout,tailFormItemLayout}from\"./Landing\";import{useHistory}from\"react-router-dom\";import{connect}from\"react-redux\";import{register as _register}from\"../actions\";import{store}from\"../index\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var disabledDate=function disabledDate(current){var nowTime=new Date(Date.now());var nowYear=nowTime.getFullYear(),nowMonth=nowTime.getMonth(),nowDate=nowTime.getDate();if(current){var selectYear=current.year(),selectMonth=current.month(),selectDate=current.date();return nowYear-selectYear<18||nowYear-selectYear===18&&nowMonth<selectMonth||nowYear-selectYear===18&&nowMonth===selectMonth&&nowDate<selectDate;}return false;};// TODO: Refactor with hook\nvar RegisterForm=function RegisterForm(props){var history=useHistory();message.config({rtl:false});var onFinish=function onFinish(values){props.register({userName:values.userName,email:values.email,phone:values.phone,DOB:values.DOB,zipcode:values.zipcode,displayName:values.displayName,password:values.password});var curState=store.getState();if(curState.isAuthenticated){message.success(curState.logInOrRegisterMessage,1).then(function(r){history.push({pathname:\"/home\"});});}else{message.error(curState.logInOrRegisterMessage).then();}};return/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({},formItemLayout),{},{name:\"register\",layout:\"horizontal\",autoComplete:\"off\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"userName\",label:\"Username\",rules:[{pattern:/[a-zA-Z][a-zA-Z0-9]*/,message:'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'},{required:true,message:'Please input your username!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"displayName\",label:\"Display Name\",children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"email\",label:\"E-mail\",rules:[{type:'email',message:'Please input your valid E-mail like a@b.co!'},{required:true,message:'Please input your E-mail!'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"a@b.co\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"phone\",label:\"Phone Number\",rules:[{pattern:/^[0-9]{10}$/,message:'Please input your phone number like 1231231234!'},{required:true,message:'Please input your phone number!'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"1231231234\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"DOB\",label:\"Date of Birth\",rules:[{required:true,message:'Please input your date of birth!'}],extra:\"Only individuals 18 years of age or older on the day of registration are allowed to register.\",children:/*#__PURE__*/_jsx(DatePicker,{format:'MM/DD/YYYY',style:{width:'100%'},disabledDate:disabledDate})}),/*#__PURE__*/_jsx(Form.Item,{name:\"zipcode\",label:\"Zipcode\",rules:[{pattern:/^[0-9]{5}$/,message:'Please input your phone zipcode like 12345!'},{required:true,message:'Please input your phone zipcode!'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"12345\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'}],children:/*#__PURE__*/_jsx(Input.Password,{visibilityToggle:false})}),/*#__PURE__*/_jsx(Form.Item,{name:\"passwordConfirmation\",label:\"Password Confirmation\",dependencies:['password'],rules:[{required:true,message:'Please confirm your password!'},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(_,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject(new Error('The two passwords you entered do not match!'));}};}],children:/*#__PURE__*/_jsx(Input.Password,{visibilityToggle:false})}),/*#__PURE__*/_jsx(Form.Item,_objectSpread(_objectSpread({},tailFormItemLayout),{},{children:/*#__PURE__*/_jsxs(Space,{size:8,children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Register\"}),/*#__PURE__*/_jsx(Button,{htmlType:\"reset\",children:\"Reset\"})]})}))]}));};var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{register:function register(values){return dispatch(_register(values));}};};export default connect(mapStateToProps,mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/Users/willwang98/Rice Homework/hw6-frontend-WillWang1998/src/component/RegisterForm.js"],"names":["React","Button","DatePicker","Form","Input","message","Space","formItemLayout","tailFormItemLayout","useHistory","connect","register","store","disabledDate","current","nowTime","Date","now","nowYear","getFullYear","nowMonth","getMonth","nowDate","getDate","selectYear","year","selectMonth","month","selectDate","date","RegisterForm","props","history","config","rtl","onFinish","values","userName","email","phone","DOB","zipcode","displayName","password","curState","getState","isAuthenticated","success","logInOrRegisterMessage","then","r","push","pathname","error","pattern","required","type","width","getFieldValue","validator","_","value","Promise","resolve","reject","Error","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, DatePicker, Form, Input, message, Space} from \"antd\";\nimport {formItemLayout, tailFormItemLayout} from \"./Landing\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {register} from \"../actions\";\nimport {store} from \"../index\";\n\nexport const disabledDate = (current) => {\n    let nowTime = new Date(Date.now());\n    let nowYear = nowTime.getFullYear(),\n        nowMonth = nowTime.getMonth(),\n        nowDate = nowTime.getDate();\n    if (current) {\n        let selectYear = current.year(),\n            selectMonth = current.month(),\n            selectDate = current.date();\n        return (nowYear - selectYear < 18)\n            || (nowYear - selectYear === 18 && nowMonth < selectMonth)\n            || (nowYear - selectYear === 18 && nowMonth === selectMonth && nowDate < selectDate);\n    }\n    return false;\n}\n\n// TODO: Refactor with hook\n\nconst RegisterForm = (props) => {\n    const history = useHistory();\n\n    message.config({\n        rtl: false,\n    });\n\n    const onFinish = (values) => {\n        props.register({\n            userName: values.userName,\n            email: values.email,\n            phone: values.phone,\n            DOB: values.DOB,\n            zipcode: values.zipcode,\n            displayName: values.displayName,\n            password: values.password\n        });\n        let curState = store.getState();\n        if (curState.isAuthenticated) {\n            message.success(curState.logInOrRegisterMessage, 1).then(r => {\n                history.push({\n                    pathname: \"/home\",\n                });\n            });\n        } else {\n            message.error(curState.logInOrRegisterMessage).then();\n        }\n    };\n\n    return (\n        <Form {...formItemLayout}\n              name=\"register\"\n              layout=\"horizontal\"\n              autoComplete=\"off\"\n              onFinish={onFinish}\n        >\n            <Form.Item name=\"userName\"\n                       label=\"Username\"\n                       rules={[\n                           {\n                               pattern: /[a-zA-Z][a-zA-Z0-9]*/,\n                               message: 'Your account name can contain lowercase and uppercase Latin letter and number. The first letter cannot be a number.'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your username!',\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"displayName\"\n                       label=\"Display Name\"\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item name=\"email\"\n                       label=\"E-mail\"\n                       rules={[\n                           {\n                               type: 'email',\n                               message: 'Please input your valid E-mail like a@b.co!',\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your E-mail!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"a@b.co\"/>\n            </Form.Item>\n\n            <Form.Item name=\"phone\"\n                       label=\"Phone Number\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{10}$/,\n                               message: 'Please input your phone number like 1231231234!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone number!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"1231231234\"/>\n            </Form.Item>\n\n            <Form.Item name=\"DOB\"\n                       label=\"Date of Birth\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your date of birth!',\n                           },\n                       ]}\n                       extra=\"Only individuals 18 years of age or older on the day of registration are allowed to register.\"\n            >\n                <DatePicker format={'MM/DD/YYYY'}\n                            style={{width: '100%'}}\n                            disabledDate={disabledDate}/>\n            </Form.Item>\n\n            <Form.Item name=\"zipcode\"\n                       label=\"Zipcode\"\n                       rules={[\n                           {\n                               pattern: /^[0-9]{5}$/,\n                               message: 'Please input your phone zipcode like 12345!'\n                           },\n                           {\n                               required: true,\n                               message: 'Please input your phone zipcode!',\n                           },\n                       ]}\n            >\n                <Input placeholder=\"12345\"/>\n            </Form.Item>\n\n            <Form.Item name=\"password\"\n                       label=\"Password\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please input your password!',\n                           }\n                       ]}\n\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n            <Form.Item\n                name=\"passwordConfirmation\"\n                label=\"Password Confirmation\"\n                dependencies={['password']}\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({getFieldValue}) => ({\n                        validator(_, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject(new Error('The two passwords you entered do not match!'));\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password visibilityToggle={false}/>\n            </Form.Item>\n\n\n            <Form.Item {...tailFormItemLayout}>\n                <Space size={8}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                    <Button htmlType=\"reset\">\n                        Reset\n                    </Button>\n                </Space>\n            </Form.Item>\n        </Form>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        register: (values) => dispatch(register(values)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);"]},"metadata":{},"sourceType":"module"}